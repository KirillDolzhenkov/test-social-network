{"version":3,"sources":["components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","components/Login/Login.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.ts","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/profile-reducer.ts","assets/images/default_user_photo.png","components/common/Preloader/three-dots.svg","utils/validator.ts","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","components/Music/Music.tsx","redux/users-reducer.ts","components/Users/Users.tsx","hoc/WithAuthRedirect.tsx","components/Users/UsersClassContainer.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Users/Users.module.css","components/Dialogs/Message/Message.module.css","components/common/Preloader/Preloader.module.css","components/Header/Header.module.css","components/Profile/ContentArea/ContentArea.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","authAPI","email","password","rememberMe","initialState","id","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","resultCode","logoutUserThunk","Header","props","className","styles","header","to","logoArea","src","logo1","alt","logo2","loginBlock","items","onClick","HeaderClassContainer","this","React","Component","HeaderContainer","connect","state","auth","posts","message","likesCount","isLiked","newPostText","profile","setStatus","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","r","attributeName","from","begin","dur","values","calcMode","repeatCount","_ref3","fillOpacity","_ref4","SvgThreeDots","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","fill","ref","maxValue","ForwardRef","Preloader","main","stroke","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onUpdateStatus","onKeyPressHandler","e","onStatusChange","currentTarget","value","updateStatus","prevProps","prevState","statusStaticMode","onDoubleClick","statusEditMode","autoFocus","onKeyPress","onChange","ProfileInfo","descriptionBlock","photos","large","defaultSmallUserPhoto","name","fullName","preloaderStyle","PostContainer","profilePage","addLike","removeLike","style","postMessage","reactions","requiredField","maxLength3","PostMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","inputAreaElements","Field","placeholder","component","validate","ContentAreaContainer","addPost","setNewPostText","newText","postsElements","map","p","postBlock","Profile","ProfileClassContainer","match","params","getUserProfile","ProfileContainer","compose","withRouter","Music","users","totalUsersCount","isFetching","followingInProgress","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","onPageChanged","setCurrentPage","unFollowThunkCreator","followThunkCreator","pagesCount","Math","ceil","pages","push","u","small","info","buttonsArea","followed","disabled","some","selectedPage","mapStateToProps","WithAuthRedirect","restProps","UsersClassContainer","pageNumber","getUsersThunkCreator","UsersContainer","News","Navbar","navbar","item","activeClassName","active","LoginReduxForm","useState","passView","setPassView","passVariation","loginForm","field","iconPass","checkBox","loginButton","LoginPageContainer","loginUserThunk","loginPage","formData","Settings","dialogs","messages","time","newMessageText","DialogItem","dialog","Message","img","defaultAvatar","content","text","Dialogs","dialogsPage","addMessage","dialogElements","d","messageElements","m","AddMessageReduxForm","maxLength","DialogsClassContainer","DialogsContainer","dialogPage","newMessage","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","toLocaleString","newPost","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.56091512.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1LESU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__27a1U\",\"item\":\"Navbar_item__2Sz7A\",\"active\":\"Navbar_active__3wMdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__30RqF\",\"dialogs\":\"Dialogs_dialogs__hPjJa\",\"dialog\":\"Dialogs_dialog__3R01s\",\"messages\":\"Dialogs_messages__2b5iv\",\"messageElements\":\"Dialogs_messageElements__BpFaC\",\"inputAreaElements\":\"Dialogs_inputAreaElements__1GU_0\",\"message\":\"Dialogs_message__2JtN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__2QSa1\",\"loginForm\":\"Login_loginForm__3_yRp\",\"field\":\"Login_field__1npoC\",\"pass\":\"Login_pass__2LVaL\",\"iconPass\":\"Login_iconPass__2mybm\",\"items\":\"Login_items__XJym6\",\"checkBox\":\"Login_checkBox__-IgJh\",\"loginButton\":\"Login_loginButton__34rpb\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\theaders: {\n\t\t\"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\",\n\t},\n});\n\nexport const usersAPI = {\n\tgetUsers(currentPage: number, pageSize: number) {\n\t\treturn instance\n\t\t\t.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.data;\n\t\t\t});\n\t},\n\n\tfollow(userId: number) {\n\t\treturn instance.post(`follow/${userId}`);\n\t},\n\tunFollow(userId: number) {\n\t\treturn instance.delete(`follow/${userId}`);\n\t},\n\tgetProfile(userId: number) {\n\t\tconsole.warn('Obsolete method. Please use profileAPI object');\n\t\treturn profileAPI.getProfile(userId);\n\t},\n};\n\nexport const profileAPI = {\n\tgetProfile(userId: number) {\n\t\treturn instance.get(`profile/${userId}`);\n\t},\n\tgetUserStatus(userId: number) {\n\t\treturn instance.get(`/profile/status/${userId}`);\n\t},\n\tupdateUserStatus(status: string) {\n\t\treturn instance.put(`/profile/status`, {status});\n\t},\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance.get(`auth/me`);\n\t},\n\tlogin(email: string, password: string, rememberMe: boolean = false) {\n\t\treturn instance.post(`/auth/login`, {email, password, rememberMe});\n\t},\n\tlogout() {\n\t\treturn instance.delete(`/auth/login`);\n\t},\n};\n","import {Dispatch} from \"redux\";\n\nimport {authAPI} from \"../api/api\";\nimport {AppActionType, AppStateType} from \"./redux-store\";\nimport {ThunkAction} from \"redux-thunk\";\n\n//types:\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\n\nexport type AuthInitialStateType = {\n    id: null | number\n    email: null | string\n    login: null | string\n    isAuth: boolean\n}\n\n//initialState:\nconst initialState: AuthInitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\n//reducer:\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\n    switch (action.type) {\n        case \"SN/AUTH/SET_AUTH_USER_DATA\": {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const setAuthUserData = (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => {\n    return {type: \"SN/AUTH/SET_AUTH_USER_DATA\", payload: {userId, email, login, isAuth} } as const\n}\n\n\n\n//thunk creators:\nexport const getAuthUserData = () => {\n    return (dispatch: Dispatch<authReducerAT>) => {\n        authAPI\n            .me()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, email, login} = response.data.data; //payload = id, email, login, isAuth\n                    dispatch(setAuthUserData(id, email, login,  true));\n                }\n            });\n    }\n}\n\nexport const loginUserThunk = (email: string, password: string, rememberMe: boolean) : ThunkAction<void, AppStateType, unknown, authReducerAT> => {\n    return (dispatch) => { // need to create AppThunk in store\n        authAPI\n            .login(email, password, rememberMe)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(getAuthUserData());\n                }\n            });\n    }\n}\n\nexport const logoutUserThunk = (): ThunkAction<void, AppStateType, unknown, authReducerAT> => {\n    return (dispatch) => { // need to create AppThunk in store\n        authAPI\n            .logout()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthUserData(null, null, null, false));\n                }\n            });\n    }\n}\n\nexport {\n    authReducer\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from \"./Header.module.css\";\nimport logo1 from \"../../assets/images/logo_part_1.png\";\nimport logo2 from \"../../assets/images/logo_part_2.png\";\n\n//types:\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: null | string\n\tlogoutUserThunk: () => void\n}\n\n//functional component:\nconst Header: React.FC<HeaderPropsType> = (props) => {\n\n\tconst {\n\t\tisAuth,\n\t\tlogin,\n\t\tlogoutUserThunk,\n\t} = props;\n\n\t//logout request:\n\tconst logout = () => {\n\t\tlogoutUserThunk();\n\t}\n\n\treturn (\n\t\t<div className={styles.header}>\n\t\t\t<NavLink to={\"/news\"} className={styles.logoArea}>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={logo1} alt=\"logoPart1\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={logo2} alt=\"logoPart2\" />\n\t\t\t\t</div>\n\t\t\t</NavLink>\n\t\t\t<div className={styles.loginBlock}>\n\t\t\t\t{\n\t\t\t\t\tisAuth\n\t\t\t\t\t\t? <div className={styles.items}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{/*<img src={                    //<-- no photo yet\n                                    props.photos.small !== null\n                                        ? props.photos.small\n                                        : defaultSmallUserPhoto //defaultAsset\n                                }/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>{login} </div>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"} onClick={logout}>Logout</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: <div className={styles.items}>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"}>Login </NavLink>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"}>Sign up </NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport {\n    Header\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {getAuthUserData, logoutUserThunk, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Header} from \"./Header\";\n\n//types:\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: null | string\n}\n\ntype mapDispatchToPropsType = {\n    getAuthUserData: () => void\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => void //test\n    logoutUserThunk: () => void\n}\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login\n    }\n}\n\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\n\tcomponentDidMount() {\n\t\tthis.props.getAuthUserData(); /*<-request*/\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header {...this.props} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\n//HOC:\nconst HeaderContainer = connect<mapStateToPropsType,\n    mapDispatchToPropsType, {},\n    AppStateType>(mapStateToProps, {\n        getAuthUserData,\n        setAuthUserData,\n        logoutUserThunk,\n    })(HeaderClassContainer);\n\nexport {\n    HeaderContainer\n}","import {Dispatch} from \"redux\";\n\nimport {profileAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype PostType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n}\nexport type ProfileInitialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: ProfilePageType | null\n    status: string | null\n}\n\nexport type ProfilePageType = {\n    aboutMe: string,\n    contacts: LinksType,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: null | string,\n    fullName: string,\n    userId: number,\n    photos: PhotosType\n}\ntype LinksType = {\n    facebook: null | string,\n    website: null | string,\n    vk: null | string,\n    twitter: null | string,\n    instagram: null | string,\n    youtube: null | string,\n    github: null | string,\n    mainLink: null | string\n}\nexport type PhotosType = { small: string, large: string }\n\nexport type ProfileActionType = ReturnType<typeof addPost>\n    | ReturnType<typeof setNewPostText>\n    | ReturnType<typeof addLike>\n    | ReturnType<typeof removeLike>\n    | ReturnType<typeof setProfile>\n    | ReturnType<typeof setStatus>\n\n\n//initialState:\nconst initialState: ProfileInitialStateType = {\n    posts: [\n        {\n            id: 21313,\n            message: \"testPost\",\n            likesCount: 1,\n            isLiked: false\n        }\n    ],\n    newPostText: \"\",\n    profile: null,\n    status: null\n}\n\n//reducer:\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\n\n    switch (action.type) {\n        case \"SN/PROFILE/ADD_POST\": {\n            const stateCopy = {...state}\n            const newPost: PostType = {\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\n                message: action.newPostText,\n                likesCount: 0,\n                isLiked: false\n            };\n            stateCopy.posts = [newPost, ...state.posts];\n\n            return stateCopy;\n        }\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\n            const stateCopy = {...state};\n            stateCopy.newPostText = action.newText;\n            return stateCopy;\n        }\n        case \"SN/PROFILE/ADD_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/REMOVE_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/SET_PROFILE\": {\n            return {...state, profile: action.profile}\n        }\n        case \"SN/PROFILE/SET_STATUS\":\n            return {...state, status: action.status}\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const addPost = (newPostText: string) => {\n    return {type: \"SN/PROFILE/ADD_POST\", newPostText} as const\n}\nexport const setNewPostText = (newText: string) => {\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\n}\nexport const addLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\n}\nexport const removeLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\n}\nexport const setProfile = (profile: ProfilePageType) => {\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\n}\nexport const setStatus = (status: string) => {\n    return {type: \"SN/PROFILE/SET_STATUS\", status} as const\n}\n\n\n//thunk creators:\nexport const getUserProfile = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getProfile(userId)\n            .then(response => {\n                dispatch(setProfile(response.data));\n            });\n    }\n}\nexport const getUserStatus = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getUserStatus(userId) //+userId ??\n            .then(response => {\n                dispatch(setStatus(response.data));\n            });\n    }\n}\nexport const updateUserStatus = (status: string) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .updateUserStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0){\n                    dispatch(setStatus(status));\n                }\n            });\n    }\n}\n\nexport {\n    profileReducer\n}","export default __webpack_public_path__ + \"static/media/default_user_photo.5364f1ba.png\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 15,\n  r: 9,\n  fillOpacity: 0.3\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 9,\n  to: 9,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"9;15;9\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 0.5,\n  to: 0.5,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \".5;1;.5\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 105,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nfunction SvgThreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 120,\n    height: 30,\n    viewBox: \"0 0 120 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.b98a8c76.svg\";\nexport { ForwardRef as ReactComponent };","export const requiredField = (value: any) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxValue: any) => {\r\n    return function (value: any) {\r\n        if (value && value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\n\nimport {ReactComponent as PreloaderLogo} from \"./three-dots.svg\";\nimport styles from \"./Preloader.module.css\";\n\n//types:\ntype PreloaderPropsType = {}\n\n//functional component:\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\n\n    //loading:\n    return (\n        <div className={styles.main}>\n            <PreloaderLogo fill=\"#2b3f4f\" stroke=\"current\"/>\n        </div>\n    )\n}\n\nexport {\n    Preloader\n}\n","import React from \"react\";\n\nimport styles from \"./ProfileInfo.module.css\"\n\n//types:\ntype ProfileStatusPropsType = {\n    status: string | null\n    updateStatus: (status: string) => void\n}\ntype LocalStateType = {\n    editMode: boolean\n    status: string | null\n}\n\n//class component:\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n    //localState for status:\n    state: LocalStateType = {\n        editMode: false,\n        status: this.props.status,\n    }\n\n    //on&off edit mode of status:\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    }\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.onUpdateStatus();\n    }\n    onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            this.deactivateEditMode();\n        }\n    }\n\n    //onchange localState of status:\n    onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({status: e.currentTarget.value});\n    }\n\n    //update status callback  function from local state to global state:\n    onUpdateStatus = () => {\n        if (this.state.status){\n            this.props.updateStatus( this.state.status);\n        } else {\n            this.props.updateStatus( ''); //NEED TO FIX !!!!\n        }\n    }\n\n    //re-rendering of status's local state if its props have changed:\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: any) { //need to check types!!!\n        if (prevProps.status !== this.props.status){\n            this.setState({status: this.props.status});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    !this.state.editMode &&\n                        <div>\n                            <div className={styles.statusStaticMode} onDoubleClick={this.activateEditMode}>{\n                                this.props.status\n                                    ? this.props.status\n                                    : \"set status\"\n                            }</div>\n                        </div>\n                }\n\n                {\n                    this.state.editMode &&\n                        <div className={`${styles.statusEditMode}`}>\n                            <div>\n                                <input\n                                    autoFocus\n                                    /*onBlur={this.deactivateEditMode}*/\n                                    onKeyPress={this.onKeyPressHandler}\n                                    value={`${this.state.status}`}  //NEED TO FIX !!!!\n                                    onChange={this.onStatusChange}\n                                />\n                            </div>\n                            <div>\n                                <button\n                                onClick={this.deactivateEditMode}\n                                >save</button>\n                            </div>\n                        </div>\n                }\n\n            </>\n        )\n    }\n}\n\nexport  {\n    ProfileStatus\n}","import React from \"react\";\n\nimport defaultSmallUserPhoto from \"../../../assets/images/default_user_photo.png\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\nimport styles from \"./ProfileInfo.module.css\";\nimport preloaderStyle from \"../../common/Preloader/Preloader.module.css\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\n//types:\ntype  ProfileInfoPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n}\n\n//functional component:\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n    } = props;\n\n    //user would see preloader while response has not confirmed:\n    if (!profile) {\n        return (\n            <>\n                <div className={preloaderStyle.main}>\n                    <Preloader/>\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <div className={styles.descriptionBlock}>\n\n                <img src={\n                    profile.photos.large !== null\n                        ? profile.photos.large\n                        : defaultSmallUserPhoto //defaultAsset\n                } alt={\"smallUserPhoto\"}/>\n\n                <div className={styles.items}>\n                    <div className={styles.name}>\n                        <b>{profile.fullName}</b>\n                    </div>\n                    <ProfileStatus\n                        updateStatus={updateStatus}\n                        status={status}\n                    />\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    ProfileInfo\n}","import {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {AppStateType} from \"../../../../redux/redux-store\";\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\nimport {Post} from \"./Post\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addLike: (id: number, isLiked: boolean)=>{\n            dispatch(addLike(id, isLiked));\n        },\n        removeLike: (id: number, isLiked: boolean)=> {\n            dispatch(removeLike(id, isLiked));\n        }\n    }\n}\n\n//HOC:\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\n\nexport {\n    PostContainer\n}","import React from \"react\";\n\nimport style from \"./Post.module.css\"\nimport defaultSmallUserPhoto from \"../../../../assets/images/default_user_photo.png\"\n\n//types:\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//functional component:\nconst Post: React.FC<PostPropsType> = (props) => {\n\n    return (\n        <>\n            <hr/>\n            <div className={style.post}>\n                <div className={style.items}>\n                    <div>\n                        {/*need to fix: */}\n                        <img src={defaultSmallUserPhoto} alt=\"defaultSmallUserPhoto\"/>\n                        {/* <img src={\n                        u.photos.small !== null\n                            ? u.photos.small\n                            : defaultSmallUserPhoto //defaultAsset\n                    } alt=\"defaultSmallUserPhoto\"/>*/}\n                    </div>\n                    <div className={style.postMessage}>\n                        <div className={style.name}>\n                            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\n                        </div>\n                        <div className={style.message}>\n                            <div>{props.message}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.reactions}>\n                    <div>\n                        {\n                            props.isLiked\n                                ? <button onClick={() => {\n                                    props.removeLike(props.id, props.isLiked);\n                                }}>Liked ♥{props.likesCount}</button>\n                                :\n                                <button onClick={() => {\n                                    props.addLike(props.id, props.isLiked);\n                                }}>Like ♡{props.likesCount}</button>\n                        }\n                    </div>\n                    <div> <button> Write comment</button> </div>\n                    <div> <button> Share</button> </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport {\n    Post\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport style from \"./ContentArea.module.css\"\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\nimport {PostContainer} from \"./Post/PostContainer\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validator\";\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype PostMessageFormType = any //need to fix any!!!\ntype ContentAreaPropsType = {\n    profilePage: ProfileInitialStateType\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\nconst maxLength3 = maxLengthCreator(3);//test value!!!\n\n//functional component:\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\n\n    const {\n        profilePage,\n        addPost,\n        setNewPostText, //need to delete\n    } = props;\n\n    let postsElements = profilePage.posts.map(p =>\n        <PostContainer\n            key={p.id}\n            message={p.message}\n            id={p.id}\n            likesCount={p.likesCount}\n            isLiked={p.isLiked}\n        />\n    )\n\n    const addPostHandler = (value: any) => { //need to fix any!!!\n        if (value.newPostText) {\n            addPost(value.newPostText);\n        }\n    }\n\n    return (\n        <div className={style.postBlock}>\n            <PostMessageReduxForm onSubmit={addPostHandler}/>\n            <div className={style.posts}>\n                {\n                    postsElements\n                }\n            </div>\n        </div>\n    )\n}\n\nconst PostMessageForm: React.FC<PostMessageFormType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return(\n        <form onSubmit={handleSubmit} className={style.inputAreaElements}>\n            <div>\n                <Field\n                    placeholder={\"What's new?\"}\n                    name={\"newPostText\"}\n                    component={\"textarea\"}\n                    validate={[requiredField, maxLength3]}\n                />\n            </div>\n            <div>\n                <button>Post</button>\n            </div>\n        </form>\n    )\n}\n\n//reduxForm HOC:\nconst PostMessageReduxForm = reduxForm<confPropsType,any>({form: 'postMessageReduxForm'})(PostMessageForm); //need to check types!!!\n\nexport {\n    ContentArea\n}","import {connect} from \"react-redux\";\n\nimport {ContentArea} from \"./ContentArea\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\n//HOC:\nconst ContentAreaContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost,\n    setNewPostText\n})(ContentArea);\n\nexport {\n    ContentAreaContainer\n}","import React from \"react\";\n\nimport styles from \"./Profile.module.css\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n//types:\ntype ProfilePropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n    isAuth: boolean\n}\n\n//functional component:\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n        isAuth,\n    } = props;\n\n    //redirect users to loginPage after logout:\n    if (!isAuth){\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n            <ContentAreaContainer/>\n        </div>\n    )\n}\n\nexport {\n    Profile\n}","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, getUserStatus, ProfilePageType, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {Profile} from \"./Profile\";\n\n//types:\ntype mapStateToPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    isAuth: boolean\n}\ntype mapDispatchToPropsType = {\n    getUserProfile: (userId: number) => void\n    getUserStatus: (userId: number) => void\n    updateUserStatus: (status: string) => void\n}\ntype  PathParamsType = {\n    userId: string //need string\n}\ntype ProfileClassContainerPropsType = mapStateToPropsType\n    & mapDispatchToPropsType\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\n\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth\n    }\n}\n\n//class container component:\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\n\n\n    componentDidMount() {\n\n        //profile userId:\n        let userId: string = this.props.match.params.userId;\n        if (!userId) {\n            userId = \"8091\"; // test value!!!!\n        }\n\n        //usersAPI.getProfile() & profileAPI.getUserStatus() responses, (\"+\" for to string):\n        this.props.getUserProfile(+userId);\n        this.props.getUserStatus(+userId);\n    }\n\n    render() {\n        return (\n            <>\n                <Profile\n                    {...this.props}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateUserStatus}\n                />\n            </>\n        )\n    }\n}\n\n//HOC:\nconst ProfileContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            getUserProfile,\n            getUserStatus,\n            updateUserStatus,\n        }\n    ),\n    withRouter,\n)(ProfileClassContainer);\n\nexport {\n    ProfileContainer\n}\n\n","import React from \"react\";\n\n//types:\ntype MusicPropsType = {}\n\n//functional component:\nconst Music: React.FC<MusicPropsType> = (props) => {\n    return (\n        <div>\n            Music Page's Content\n        </div>\n    )\n}\n\nexport {\n    Music\n}","import { Dispatch } from \"redux\";\n\nimport {usersAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype LocationType = {\n    country: string\n    city: string\n}\ntype PhotosType = {\n    small: string\n    large: string\n}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    photos: PhotosType\n    name: string\n    status: string\n    location: LocationType\n}\nexport type UsersInitialStateType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: any[]\n}\nexport type UsersActionType = | ReturnType<typeof follow>\n    | ReturnType<typeof unFollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setFollowingProgress>\n\n//initialState:\nconst initialState: UsersInitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 19,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\n//reducer:\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\n    switch (action.type) {\n        case \"SN/USERS/FOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/UNFOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/SET_USERS\": {\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]} (declined)\n        }\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\n            return {...state, currentPage: action.currentPage}\n        }\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case \"SN/USERS/SET_IS_FETCHING\": {\n            return {...state, isFetching: action.isFetching}\n        }\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\n            return {...state, followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.id]\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n//action creators:\nexport const follow = (id: number) => {\n    return {type: \"SN/USERS/FOLLOW\", id} as const\n}\nexport const unFollow = (id: number) => {\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\n}\nexport const setUsers = (users: Array<UsersType>) => {\n    return {type: \"SN/USERS/SET_USERS\", users} as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\n}\nexport const setIsFetching = (isFetching: boolean) => {\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\n}\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\n}\n\n//thunk creators:\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setIsFetching(true));\n        usersAPI\n            .getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(setIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n            });\n    }\n}\nexport const unFollowThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\nexport const followThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(follow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\n\nexport {\n    usersReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\nimport defaultSmallUserPhoto from \"../../assets/images/default_user_photo.png\"\nimport style from \"./Users.module.css\";\n\n\n//types:\ntype UsersPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    followingInProgress: any[]\n    setUsers: (users: Array<UsersType>) => void //need to delete\n    setCurrentPage: (pageNumber: number) => void //need to delete\n    setTotalUsersCount: (totalCount: number) => void //need to delete\n    onPageChanged: (p: number) => void\n\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\n    followThunkCreator: (userId: number) => void //need rename to follow\n}\n\n//functional component:\nconst Users: React.FC<UsersPropsType> = (props) => {\n\n    const {\n        usersPage,\n        pageSize,\n        totalUsersCount,\n        currentPage,\n        followingInProgress,\n        setUsers, //need to delete\n        setCurrentPage, //need to delete\n        setTotalUsersCount, //need to delete\n        onPageChanged,\n        unFollowThunkCreator,\n        followThunkCreator,\n    } = props;\n\n    //pages for pagination:\n    const pagesCount = Math.ceil(totalUsersCount / pageSize) //.ceil rounds a number up to the next largest integer\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return (\n        <div className={style.items}>\n            {\n                usersPage.users.map(u => <div key={u.id}>\n                    <div className={style.profile}>\n\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={\n                                u.photos.small !== null\n                                    ? u.photos.small\n                                    : defaultSmallUserPhoto //defaultAsset\n                            } alt=\"smallUserPhoto\"/>\n                        </NavLink>\n\n                        <div className={style.info}>\n                            <NavLink to={'/profile/' + u.id}>\n                                <div className={style.name}>{u.name}</div>\n                            </NavLink>\n                        </div>\n                    </div>\n\n                    <div className={style.buttonsArea}>\n                        <div>\n                            {\n                                u.followed\n                                    ? <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            unFollowThunkCreator(u.id);\n                                        }}\n                                    >unfollow</button>\n                                    : <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            followThunkCreator(u.id);\n                                        }}\n                                    >follow</button>\n                            }\n                        </div>\n                        <div>\n                            <NavLink to={'/dialogs/' + u.id}> {/*<- NavLink!!!!!!*/}\n                                <button>{\"Write message\"}</button>\n                            </NavLink>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>)\n            }\n            <div>\n                {\n                    pages.map(p =>\n                        <span  //pagination\n                            className={\n                                p === currentPage\n                                    ? style.selectedPage\n                                    : ''\n                            }\n                            onClick={() => onPageChanged(p)}\n                        >{p}</span>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Users\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { AppStateType } from \"../redux/redux-store\";\n\n//types:\ntype mapStateToPropsType = {\n  isAuth: boolean;\n};\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\n\n//container component:\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) { //possible to make arrow function?\n\n  const RedirectComponent: React.FC<mapStateToPropsType> = (props) => {\n\n    const {\n      isAuth,\n      ...restProps\n    } = props;\n\n    if (!isAuth) {\n      return <Redirect to={\"/Login\"}/>\n    }\n    return <Component {...(restProps as T)} />\n  };\n\n  return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport {\n  WithAuthRedirect\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage,\n    setIsFetching,\n    setTotalUsersCount,\n    setUsers,\n    unFollowThunkCreator,\n    UsersInitialStateType,\n    UsersType\n} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\"\nimport {Users} from \"./Users\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: any[]\n}\ntype mapDispatchToPropsType = {\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setIsFetching: (isFetching: boolean) => void\n\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void // need rename to getUsers\n    unFollowThunkCreator: (userId: number) => void //need rename to follow\n    followThunkCreator: (userId: number) => void //need rename to unFollow\n}\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n\n//class container component:\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\n\n    componentDidMount() {\n        //usersAPI.getUsers() request:\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);\n    };\n\n    //onChanged function for pagination:\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setIsFetching(true);\n\n        //request for re-render next page of users:\n        usersAPI\n            .getUsers(this.props.currentPage, this.props.pageSize)\n            .then(data => {\n                this.props.setIsFetching(false);\n                this.props.setUsers(data.items);\n            });\n    };\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.isFetching\n                        ? <div className={preloaderStyle.main}><Preloader/></div>\n                        : <div>\n                            <Users\n                                {...this.props}\n                                onPageChanged={this.onPageChanged}\n                            />\n                        </div>\n                }\n            </>\n        )\n    };\n}\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersPage: state.usersPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    };\n};\n\n\n//HOC:\nconst UsersContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            setUsers,\n            setCurrentPage,\n            setTotalUsersCount,\n            setIsFetching,\n            getUsersThunkCreator, // need rename to getUsers\n            unFollowThunkCreator, //need rename to unFollow\n            followThunkCreator,  //need rename to follow\n        }),\n    WithAuthRedirect,\n)(UsersClassContainer);\n\nexport {\n    UsersContainer\n};","import React from \"react\";\n\n//types:\ntype NewsPropsType = {}\n\n//functional component:\nconst News: React.FC<NewsPropsType> = (props) => {\n    return (\n        <div>\n            News Page's Content\n        </div>\n    )\n}\n\nexport {\n    News\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport style from \"./Navbar.module.css\";\n\n//types:\ntype NavbarPropsType = {}\n\n//functional component:\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\n    return (\n        <div className={style.navbar}>\n            <div className={style.item}>\n                <NavLink to={\"/Profile\"} activeClassName={style.active}>My profile</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/News\"} activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Dialogs\"} activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Users\"} activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Music\"} activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Settings\"} activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Navbar\n}","import React, {useState} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {ThunkAction} from \"redux-thunk\";\n\nimport styles from \"./Login.module.css\"\nimport {\n    authReducerAT,\n    loginUserThunk,\n    logoutUserThunk\n} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype passType = 'password' | 'text'\ntype LoginPagePropsType = any //need to fix any\ntype LoginFormPropsType = any //need to fix any\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\ntype mapDispatchToPropsType = {\n    loginUserThunk: (\n        email: string,\n        password: string,\n        rememberMe: boolean\n    ) => ThunkAction<void, AppStateType, unknown, authReducerAT>\n    logoutUserThunk:  () => ThunkAction<void, AppStateType, unknown, authReducerAT>\n}\nexport type LoginPropertiesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    /*captcha: boolean*/\n}\n\n//functional component:\nconst LoginForm: React.FC<LoginFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    //local state for password view type:\n    const [passView, setPassView] = useState<boolean>(false);\n    //style for password view:\n    const passVariation: passType = passView ?  'text' :  'password';\n\n    //change password view type handler function:\n    const showPasswordHandler = () => {\n        if (passView) {\n            setPassView(false);\n        } else {\n            setPassView(true);\n        }\n    }\n\n    return (\n        <div className={styles.loginForm}>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Field\n                        className={styles.field}\n                        placeholder={\"email\"}\n                        name={\"email\"}\n                        component={\"input\"}\n                    />\n                </div>\n                <div>\n                    <Field\n                        className={styles.field}\n                        placeholder={\"Password\"}\n                        name={\"password\"}\n                        component={\"input\"}\n                        type={passVariation}\n                    />\n                    <span className={styles.iconPass} onClick={showPasswordHandler}>👁</span>\n                </div>\n                <div className={styles.items}>\n                    <div className={styles.checkBox}>\n                        <Field\n                            className={\"field\"}\n                            type={\"checkbox\"}\n                            name={\"rememberMe\"}\n                            component={\"input\"}\n                        /> remember me\n                    </div>\n                    <div className={styles.loginButton}>\n                        <button>Login</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n//reduxForm HOC:\nconst LoginReduxForm = reduxForm<confPropsType,any>({form: 'Login'})(LoginForm); //need to check types & fix any !!!\n\n//mapStateToProps & functional component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst LoginPage: React.FC<LoginPagePropsType> = (props) => {\n\n    const {\n        loginUserThunk,\n        isAuth,\n    } = props;\n\n    //login onClickHandler:\n    const onSubmit = (formData: LoginPropertiesType) => {\n        loginUserThunk(formData.email, formData.password, formData.rememberMe);\n    }\n\n    //redirect users to profile page after login:\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={styles.loginPage}>\n            <h1>Samurai Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\n//HOC:\nconst LoginPageContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps, {\n        loginUserThunk,\n        logoutUserThunk,\n    }\n)(LoginPage);\n\n\nexport {\n    LoginPageContainer\n}","import React from \"react\";\n\n//types:\ntype SettingsPropsType = {}\n\n//functional component:\nconst Settings: React.FC<SettingsPropsType> = (props) => {\n    return (\n        <div>\n            Settings Page's Content\n        </div>\n    )\n}\n\nexport {\n    Settings\n}","import {AppActionType} from \"./redux-store\";\n\n//types:\nexport type DialogsDataType = {\n    id: number\n    name: string\n}\nexport type MessagesDataType = {\n    id: number\n    message: string\n    time: string\n}\nexport type DialogsInitialStateType = {\n    dialogs: Array<DialogsDataType>,\n    messages: Array<MessagesDataType>,\n    newMessageText: string\n}\nexport type DialogsActionType = ReturnType<typeof addMessage>\n\n//initialState:\nconst initialState: DialogsInitialStateType = {\n    dialogs: [\n        {id: 1, name: \"Dima\"},\n        {id: 2, name: \"Sasha\"},\n    ],\n    messages: [\n        {id: 1, message: \"hello\", time: \"test 4/1/2022, 10:38:18 PM\"},\n        {id: 2, message: \"How are you?\", time: \"test 4/1/2022, 10:39:22 PM\"},\n\n    ],\n    newMessageText: \"\"\n}\n\n//reducer:\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\n        const stateCopy = {...state}\n        const newMessage: MessagesDataType = {\n            id: Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method\n            message: action.newMessage,\n            time: new Date().toLocaleString(), //Get Current Date & Time function\n        };\n        stateCopy.messages = [...state.messages, newMessage];\n        return stateCopy;\n    } else {\n        return state;\n    }\n}\n\n//action creators:\nexport const addMessage = (newMessage: string) => {\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\n}\n\n\nexport {\n    dialogsReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport style from \"../Dialogs.module.css\";\n\n//types:\ntype DialogPropsType = {\n    id: number\n    name: string\n}\n\n//functional component:\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\n\n    const {\n        id,\n        name,\n    } = props;\n\n    return (\n        <div className={style.dialog + '' + style.active}>\n            <NavLink to={\"/dialogs/\" + id}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport {\n    DialogItem\n}","import React from \"react\";\n\nimport styles from \"./Message.module.css\";\nimport defaultAvatar from \"../../../assets/images/default_user_photo.png\"\n\n//types:\ntype MessagePropsType = {\n    id: number //?\n    message: string\n    time: string\n}\n\n//function component:\nconst Message: React.FC<MessagePropsType> = (props) => {\n\n    const {\n        id, //?\n        message,\n        time,\n    } = props;\n\n    return (\n        <div className={styles.message}>\n            <img className={styles.img} alt=\"userPhoto\" src={defaultAvatar}/>\n            <div className={styles.content}>\n                <div className={styles.name}>userName</div>\n                <div className={styles.text}>{message}</div>\n                <div className={styles.time}>{time}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport {\n    Message\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./Dialogs.module.css\"\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\n\n\n//types:\ntype confPropsType = {\n    form: string\n}\n\ntype AddMessageFormPropsType = any //need to fix any!!!\ntype DialogsPropsType = {\n    dialogsPage: DialogsInitialStateType\n    addMessage: (newMessageText: string) => void\n}\n\n//functional component:\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n\n    const {\n        dialogsPage,\n        addMessage,\n    } = props;\n\n    //users list:\n    let dialogElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n\n    //messages history:\n    let messageElements = dialogsPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id} time={m.time}/>);\n\n    const addNewMessage = (value: any) => { //need to fix any!!!\n        if (value.newMessageText) {\n            addMessage(value.newMessageText);\n        }\n    }\n\n    return (\n        <div className={styles.dialogsPage}>\n            <div className={styles.dialogs}>\n                {\n                    dialogElements\n                }\n            </div>\n            <div className={styles.messages}>\n                <div className={styles.messageElements}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <hr/>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\n\n//functional component:\nconst AddMessageForm: React.FC<AddMessageFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.inputAreaElements}> {/* <--need to rename class*/}\n            <div>\n                <Field\n                    placeholder={\"Write something\"}\n                    name={\"newMessageText\"}\n                    component={\"textarea\"}\n                    maxLength={300}\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n//reduxForm HOC:\nconst AddMessageReduxForm = reduxForm<confPropsType,any>({form: 'profileAddPostReduxForm'})(AddMessageForm); //need to check types & fix any !!!\n\nexport {\n    Dialogs\n}\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addMessage,\n    DialogsInitialStateType,\n} from \"../../redux/dialogs-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport { Dialogs } from \"./Dialogs\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    dialogsPage: DialogsInitialStateType\n}\n\ntype mapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n}\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogPage,\n    }\n}\n\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\n\n    render(){\n        return(\n            <Dialogs {...this.props}/>\n        )\n    }\n}\n\n//HOC:\nconst DialogsContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {addMessage, }),\n    WithAuthRedirect,\n)(DialogsClassContainer);\n\nexport {\n    DialogsContainer\n}\n\n\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\nimport {Music} from \"./components/Music/Music\";\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\nimport {News} from \"./components/News/News\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport { LoginPageContainer} from \"./components/Login/Login\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\n\n\n//types:\ntype PropsType = {}\n\n//functional component:\nconst App: React.FC<PropsType> = (props) => {\n    return (\n        <div className={\"app-main\"}>\n            <div className={\"app-wrapper\"}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={\"app-wrapper-content\"}>\n                    <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer/>}/>\n                    <Route path={\"/News\"} render={() => <News/>}/>\n                    <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\n                    <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\n                    <Route path={\"/Music\"} render={() => <Music/>}/>\n                    <Route path={\"/Settings\"} render={() => <Settings/>}/>\n                    <Route path={\"/Login\"} render={() => <LoginPageContainer/>}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport {\n    App\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\n\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\n\n//types:\nexport type AppStateType = ReturnType<typeof rootReducer>;\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT\n\n//store & rootReducer:\nexport const rootReducer = combineReducers({\n    dialogPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n//root AppThunk:\n/*export type AppThunk<ReturnType = void> = ThunkAction< //need to create!!!\n    ReturnType,\n    RootState,\n    unknown,\n    AnyAction\n    >*/\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport {\n    store\n}","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport {AppStateType, store} from \"./redux/redux-store\";\n\n\nconst reRenderEntireThree = (state: AppStateType) => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n        , document.getElementById('root')\n    );\n}\n\nreRenderEntireThree(store.getState());\nstore.subscribe(() => {\n    reRenderEntireThree(store.getState())\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1o5hr\",\"items\":\"ProfileInfo_items__Tow0c\",\"name\":\"ProfileInfo_name__3_29G\",\"statusStaticMode\":\"ProfileInfo_statusStaticMode__1JGsp\",\"statusEditMode\":\"ProfileInfo_statusEditMode__2KjhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__L3g4m\",\"items\":\"Post_items__TiuHf\",\"postMessage\":\"Post_postMessage__2R7XL\",\"name\":\"Post_name__7buCm\",\"message\":\"Post_message__1YmDS\",\"reactions\":\"Post_reactions__3uWF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__-cuhe\",\"selectedPage\":\"Users_selectedPage__22OUq\",\"profile\":\"Users_profile__2q_da\",\"info\":\"Users_info__2hM-q\",\"name\":\"Users_name__3uZmM\",\"buttonsArea\":\"Users_buttonsArea__3uP-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1pl0m\",\"content\":\"Message_content__28Hls\",\"name\":\"Message_name__gkaLH\",\"text\":\"Message_text__1FzPC\",\"time\":\"Message_time__322cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__BgsaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pKV4\",\"logoArea\":\"Header_logoArea__3SqBW\",\"loginBlock\":\"Header_loginBlock__2NGhc\",\"items\":\"Header_items__2DQpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__2Fp-K\",\"posts\":\"ContentArea_posts__3qIIz\",\"inputAreaElements\":\"ContentArea_inputAreaElements__ijd0W\"};"],"sourceRoot":""}