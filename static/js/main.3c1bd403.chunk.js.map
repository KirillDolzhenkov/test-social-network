{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ContentArea/ContentArea.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogsContainer.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","api/api.tsx","redux/users-reducer.tsx","assets/images/defaultSmallUserPhoto.png","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","components/Users/UsersClassContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","hoc/WithAuthRedirect.tsx","components/Profile/ProfileClassContainer.tsx","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","redux/auth-reducer.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","props","className","styles","navbar","item","to","activeClassName","active","DialogItem","dialog","id","name","Message","message","Dialogs","state","dialogsPage","dialogElements","dialogs","map","d","messageElements","messages","m","addMessageHandler","newMessageText","addMessage","trim","isAuth","value","maxLength","onChange","e","newText","currentTarget","setNewMessageText","placeholder","onKeyPress","key","preventDefault","onClick","initialState","DialogsClassContainer","this","React","Component","DialogsContainer","compose","connect","dialogPage","auth","newMessage","type","Music","News","Settings","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","users","totalUsersCount","isFetching","followingInProgress","follow","unFollow","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","pagesCount","Math","ceil","pages","i","push","items","p","selectedPage","onPageChanged","u","src","photos","small","defaultSmallUserPhoto","style","textDecoration","color","followed","disabled","some","unFollowThunkCreator","followThunkCreator","location","country","city","Preloader","UsersClassContainer","pageNumber","setCurrentPage","getUsersThunkCreator","UsersContainer","dispatch","resultCode","ProfileInfo","profile","descriptionBlock","large","fullName","aboutMe","posts","newPostText","PostContainer","profilePage","addLike","isLiked","removeLike","alt","likesCount","ContentAreaContainer","addPost","newPost","setNewPostText","postsElements","addPostHandler","postBlock","Profile","mapStateToProps","ProfileClassContainer","match","params","getUserProfile","ProfileContainer","withRouter","restProps","Header","header","logo1","logo2","loginBlock","login","email","HeaderClassContainer","getAuthUserData","HeaderContainer","setAuthUserData","Login","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","filter","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.3c1bd403.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__2-zGa\",\"dialogs\":\"Dialogs_dialogs__3K-Xy\",\"dialog\":\"Dialogs_dialog__ZEC-O\",\"messages\":\"Dialogs_messages__3kr4z\",\"message\":\"Dialogs_message__nXIdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__sAzYH\",\"selectedPage\":\"Users_selectedPage__UEP4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__3Ivjo\",\"posts\":\"ContentArea_posts__2_nbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__WdcwP\",\"loginBlock\":\"Header_loginBlock__38Nj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__1-enr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3S2BG\",\"item\":\"Navbar_item__k2Crj\",\"active\":\"Navbar_active__28fRt\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\n//types:\r\ntype NavbarPropsType = {}\r\n\r\n//function component:\r\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Profile\"} activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Dialogs\"} activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Users\"} activeClassName={styles.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/News\"} activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Music\"} activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Settings\"} activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Navbar\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types:\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n//function component:\r\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.dialog + '' + styles.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DialogItem\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n\r\n}\r\n\r\n//function component:\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Message\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n//types:\r\nexport type DialogsPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\n//function component:\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage; // state!!!\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    const addMessageHandler = () => {\r\n        if (state.newMessageText) {\r\n            props.addMessage(state.newMessageText.trim());\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewMessageText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addMessageHandler();\r\n        }\r\n    }\r\n\r\n\r\n    if (!props.isAuth){ //auth Redirect!!!\r\n        return <Redirect to={\"/Login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogsPage}>\r\n\r\n            <div className={styles.dialogs}>\r\n                {\r\n                    dialogElements\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                {\r\n                    messageElements\r\n                }\r\n                <div>\r\n                    <hr/>\r\n                    <textarea\r\n                        value={state.newMessageText}\r\n                        maxLength={100000}\r\n                        onChange={onChangeHandler}\r\n                        placeholder={\"Write something\"}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <span>\r\n                        <button onClick={addMessageHandler}>Send</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialogs\r\n}\r\n","//types:\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsInitialStateType = {\r\n    dialogs: Array<DialogsDataType>,\r\n    messages: Array<MessagesDataType>,\r\n    newMessageText: string\r\n}\r\nexport type DialogsActionType = ReturnType<typeof addMessage>\r\n    | ReturnType<typeof setNewMessageText>\r\n\r\n//initialState:\r\nconst initialState: DialogsInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Sasha\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\n//reducer:\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\r\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\r\n        const stateCopy = {...state}\r\n        const newMessage: MessagesDataType = {\r\n            id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number with javascript time\r\n            message: stateCopy.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages, newMessage];\r\n        stateCopy.newMessageText = \"\";\r\n        return stateCopy;\r\n\r\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\r\n        const stateCopy = {...state};\r\n        stateCopy.newMessageText = action.newText;\r\n        return stateCopy;\r\n\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addMessage = (newMessage: string) => {\r\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\r\n}\r\nexport const setNewMessageText = (newText: string) => {\r\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\r\n}\r\n\r\nexport {\r\n    dialogsReducer\r\n}","import {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addMessage, DialogsInitialStateType, setNewMessageText} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport React from \"react\";\r\n\r\n//types:\r\ntype DialogsContainerPropsType = {}\r\n\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    isAuth: boolean //delete?\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth //delete?\r\n    }\r\n}\r\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\r\n    render(){\r\n        return(\r\n            <Dialogs {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\n//HOC:\r\n\r\n/*const DialogsContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    DialogsContainerPropsType,\r\n    AppStateType>(mapStateToProps, {addMessage,setNewMessageText})(Dialogs);*/\r\n\r\nconst DialogsContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType,\r\n        DialogsContainerPropsType, AppStateType>(mapStateToProps, {addMessage,setNewMessageText}),\r\n)(DialogsClassContainer);\r\n\r\nexport {\r\n    DialogsContainer\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\n//types:\r\ntype MusicPropsType = {}\r\n\r\n//function component:\r\nconst Music: React.FC<MusicPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Music Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Music\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype NewsPropsType = {}\r\n\r\n//function component:\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            News Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    News\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype SettingsPropsType = {}\r\n\r\n//function component:\r\nconst Settings: React.FC<SettingsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Settings Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Settings\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`);\r\n\r\n    },\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    }\r\n}\r\n\r\n","//types:\r\nimport {usersAPI} from \"../api/api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersInitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: any[]\r\n}\r\nexport type UsersActionType = | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\n\r\nexport type ThunkCreatorType =  ReturnType<typeof getUsersThunkCreator> //??????\r\n\r\n//initialState:\r\nconst initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n//reducer:\r\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/USERS/FOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/UNFOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/SET_USERS\": {\r\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case \"SN/USERS/SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const follow = (id: number) => {\r\n    return {type: \"SN/USERS/FOLLOW\", id} as const\r\n}\r\nexport const unFollow = (id: number) => {\r\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: \"SN/USERS/SET_USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\r\n}\r\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\r\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        } );\r\n    }\r\n}\r\nexport const unFollowThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const followThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(follow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    usersReducer\r\n}","export default __webpack_public_path__ + \"static/media/defaultSmallUserPhoto.8101612b.png\";","import React from \"react\";\r\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\r\nimport defaultSmallUserPhoto from \"../../assets/images/defaultSmallUserPhoto.png\"\r\nimport styles from \"./Users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types:\r\ntype UsersPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: any[]\r\n\r\n    //callBacksTypes (mapDispatchToPropsType):\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (p: number) => void\r\n    setFollowingProgress: (followingProgress: boolean, id: number) => void\r\n\r\n    //thunkTypes:\r\n    unFollowThunkCreator: (userId: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n}\r\n\r\n//functional component:\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const state = props.usersPage; //state!!!\r\n\r\n    //pages for pagination:\r\n    const pagesCount = Math.ceil(state.totalUsersCount / state.pageSize) //.ceil rounds a number up to the next largest integer\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.items}>\r\n            <div>\r\n                { //pagination:\r\n                    pages.map(p => <span\r\n                        className={p === state.currentPage\r\n                            ? styles.selectedPage\r\n                            : ''\r\n                        }\r\n                        onClick={() => props.onPageChanged(p)} //callBack?\r\n                    >{p}</span>)\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            {\r\n                state.users.map(u => <div key={u.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={\r\n                                u.photos.small !== null\r\n                                    ? u.photos.small\r\n                                    : defaultSmallUserPhoto //defaultAsset\r\n                            }/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div><b>{u.name}</b></div>\r\n                    <div style={{textDecoration: \"underline\", color: \"blue\"}}>{\"Write message\"}</div>{/*need to create style at styleModule*/}\r\n                    <div>\r\n                        {\r\n                            u.followed\r\n                                ? <button\r\n                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.unFollowThunkCreator(u.id);\r\n                                    }}\r\n                                >unfollow</button>\r\n                                : <button\r\n                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.followThunkCreator(u.id);\r\n                                    }}\r\n                                >follow</button>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\"country:\"}{u.location?.country ? u.location.country : \" - \"}\r\n                    </div>\r\n                    <div>\r\n                        {\"city:\"}{u.location?.city ? u.location.city : \" - \"}\r\n                    </div>\r\n                    <hr/>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Users\r\n}","import React from \"react\";\r\nimport \"./Preloader.css\"\r\nimport PreloaderLogo from \"./preloaderLogo.png\"\r\n\r\ntype PreloaderPropsType = {\r\n}\r\n\r\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        /*<div className=\"Preloader\">\r\n            <header className=\"Preloader-header\">\r\n                <img src={PreloaderLogo} className=\"Preloader-logo\" alt=\"logo\"/>\r\n                <br/>\r\n            </header>\r\n        </div>*/\r\n        <h1>\r\n            loading...\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport {\r\n    Preloader\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    follow,\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setFollowingProgress,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollow,\r\n    unFollowThunkCreator,\r\n    UsersInitialStateType,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {Users} from \"./Users\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {compose} from \"redux\";\r\n\r\n//types:\r\ntype UsersContainerPropsType = {}\r\n\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n    setFollowingProgress: (toggleFollowingProgress: boolean, id: number) => void\r\n\r\n    //thunkTypes:\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n}\r\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize); //usersAPI.getUsers()\r\n    }\r\n\r\n    //onPageChanged Fn for pagination:\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching\r\n                        ? <Preloader/>\r\n                        : <Users\r\n                            usersPage={this.props.usersPage}\r\n                            pageSize={this.props.pageSize}\r\n                            totalUsersCount={this.props.totalUsersCount}\r\n                            currentPage={this.props.currentPage}\r\n                            follow={this.props.follow}\r\n                            unFollow={this.props.unFollow}\r\n                            setUsers={this.props.setUsers}\r\n                            setCurrentPage={this.props.setCurrentPage}\r\n                            setTotalUsersCount={this.props.setTotalUsersCount}\r\n                            onPageChanged={this.onPageChanged}\r\n                            followingInProgress={ this.props.followingInProgress}\r\n                            setFollowingProgress={this.props.setFollowingProgress}\r\n                            unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                            followThunkCreator={this.props.followThunkCreator}\r\n                        />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n\r\n//HOC:\r\nconst UsersContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, UsersContainerPropsType, AppStateType>(mapStateToProps,\r\n        {\r\n            follow,\r\n            unFollow,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            setIsFetching,\r\n            setFollowingProgress,\r\n\r\n            //thunkCreators:\r\n            getUsersThunkCreator,\r\n            unFollowThunkCreator,\r\n            followThunkCreator\r\n        }),\r\n)(UsersClassContainer);\r\n\r\n\r\nexport {\r\n    UsersContainer\r\n}","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfilePageType} from \"../../../redux/profile-reducer\";\r\nimport defaultSmallUserPhoto from \"../../../assets/images/defaultSmallUserPhoto.png\";\r\n\r\n//types:\r\ntype  ProfileInfoPropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//function component:\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    const state = props.profile;//!!!\r\n\r\n    if (!state) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={\r\n                    state.photos.large !== null\r\n                        ? state.photos.large\r\n                        : defaultSmallUserPhoto //defaultAsset\r\n                }/>\r\n                <div>\r\n                    <div><b>{state.fullName}</b></div>\r\n                    <div>{state.aboutMe}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ProfileInfo\r\n}","//types:\r\nimport {Dispatch} from \"redux\";\r\nimport {getUsersThunkCreator, setFollowingProgress} from \"./users-reducer\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n}\r\nexport type ProfileInitialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfilePageType | null\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    aboutMe: string,\r\n    contacts: LinksType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: null | string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\ntype LinksType = {\r\n    facebook: null | string,\r\n    website: null | string,\r\n    vk: null | string,\r\n    twitter: null | string,\r\n    instagram: null | string,\r\n    youtube: null | string,\r\n    github: null | string,\r\n    mainLink: null | string\r\n}\r\nexport type PhotosType = { small: string, large: string }\r\n\r\nexport type ProfileActionType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setNewPostText>\r\n    | ReturnType<typeof addLike>\r\n    | ReturnType<typeof removeLike>\r\n    | ReturnType<typeof setProfile>\r\n\r\nexport type ThunkCreatorType =  ReturnType<typeof getUsersThunkCreator> //??????\r\n\r\n//initialState:\r\nconst initialState: ProfileInitialStateType = {\r\n    posts: [],\r\n    newPostText: \"\",\r\n    profile: null\r\n}\r\n\r\n//reducer:\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD_POST\": {\r\n            const stateCopy = {...state}\r\n            const newPost: PostType = {\r\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n                isLiked: false\r\n            };\r\n            stateCopy.posts = [newPost, ...state.posts];\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\r\n            const stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/ADD_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/REMOVE_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/SET_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addPost = (newPost: string) => {\r\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\r\n}\r\nexport const setNewPostText = (newText: string) => {\r\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\r\n}\r\nexport const addLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\r\n}\r\nexport const removeLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\r\n}\r\nexport const setProfile = (profile: ProfilePageType) => {\r\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getUserProfile = (userId: number) => {\r\n    debugger\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setProfile(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    profileReducer\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\r\nimport {Post} from \"./Post\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (id: number, isLiked: boolean)=>{\r\n            dispatch(addLike(id, isLiked));\r\n        },\r\n        removeLike: (id: number, isLiked: boolean)=> {\r\n            dispatch(removeLike(id, isLiked));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\r\n\r\nexport {\r\n    PostContainer\r\n}","import React from \"react\";\r\nimport styles from \"./Post.module.css\"\r\n\r\n//types:\r\ntype PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//Functional Component:\r\nconst Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.items}>\r\n            <img src='https://cdn4.iconfinder.com/data/icons/spring-festival/512/man-512.png' alt=\"\"/>\r\n            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\r\n            <span>{props.message}</span>\r\n            {/*<span >♥{props.likesCount}</span>*/}\r\n            <div>\r\n            {\r\n                props.isLiked\r\n                    ? <button onClick={() => {\r\n                        props.removeLike(props.id, props.isLiked);\r\n                    }}>Liked ♥{props.likesCount}</button>\r\n                    :\r\n                    <button onClick={() => {\r\n                        props.addLike(props.id, props.isLiked);\r\n                    }}>Like ♡{props.likesCount}</button>\r\n            }\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Post\r\n}","import {AppStateType} from \"../../../redux/redux-store\";\r\nimport {ContentArea} from \"./ContentArea\";\r\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//types:\r\ntype ContentAreaType = {}\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ContentAreaContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    ContentAreaType,\r\n    AppStateType>(mapStateToProps, {addPost, setNewPostText})(ContentArea);\r\n\r\nexport {\r\n    ContentAreaContainer\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./ContentArea.module.css\"\r\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {PostContainer} from \"./Post/PostContainer\";\r\n\r\n//types:\r\ntype ContentAreaPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//function component:\r\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\r\n\r\n    const state = props.profilePage; //state!!!\r\n\r\n    let postsElements = state.posts.map(p => <PostContainer\r\n        key={p.id}\r\n        message={p.message}\r\n        id={p.id}\r\n        likesCount={p.likesCount}\r\n        isLiked={p.isLiked}\r\n    />);\r\n\r\n    const addPostHandler = () => {\r\n        if (state.newPostText) {\r\n            props.addPost(state.newPostText);\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewPostText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addPostHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <textarea\r\n                value={state.newPostText}\r\n                maxLength={100000}\r\n                onChange={onChangeHandler}\r\n                placeholder={\"What's new?\"}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n            <span>\r\n                <button onClick={addPostHandler}>Post</button>\r\n            </span>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ContentArea\r\n}","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\r\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//function component:\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <ContentAreaContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport\r\n{\r\n    Profile\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/Login\"}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n\r\nexport {\r\n    WithAuthRedirect\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, ProfilePageType} from \"../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n//types:\r\ntype ProfileContainerPropsType = {}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfilePageType | null\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    /*setProfile: (profile: ProfilePageType) => void*/\r\n    getUserProfile: (userId: number) => void\r\n}\r\ntype  PathParamsType = {\r\n    userId: any //number or string\r\n}\r\ntype ProfileClassContainerPropsType = mapStateToPropsType\r\n    & mapDispatchToPropsType\r\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        this.props.getUserProfile(userId); //usersAPI.getProfile()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Profile{...this.props} profile={this.props.profile}/>\r\n        </>\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ProfileContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType,\r\n        ProfileContainerPropsType, AppStateType>(mapStateToProps, {getUserProfile}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n)(ProfileClassContainer);\r\n\r\n\r\n/*const WithUrlDataContainerComponent = withRouter(ProfileClassContainer);\r\nconst ProfileContainer = WithAuthRedirect(connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    ProfileContainerPropsType,\r\n    AppStateType>(mapStateToProps, {getUserProfile})(WithUrlDataContainerComponent));*/\r\n\r\nexport {\r\n    ProfileContainer\r\n}\r\n\r\n","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport logo1 from \"../../assets/images/logo_part_1.png\"\r\nimport logo2 from \"../../assets/images/logo_part_2.png\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types:\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\n\r\n//function component:\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <img src={logo1}/>\r\n            <img src={logo2}/>\r\n            <div className={styles.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>\r\n                            <span style={{color: \"white\"}}>{props.login} </span> {/*need to create own style*/}\r\n                            <NavLink to={\"/login\"}>Logout</NavLink>\r\n                        </div>\r\n                        : <div>\r\n                            <NavLink to={\"/login\"}>Login </NavLink>\r\n                            <NavLink to={\"/login\"}>Signup </NavLink>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Header\r\n}","//types:\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\r\nexport type AuthInitialStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n     isAuth: boolean\r\n}\r\n\r\n//initialState:\r\nconst initialState: AuthInitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n//reducer:\r\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/SET_AUTH_USER_DATA\": {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const setAuthUserData = (data: AuthInitialStateType) => {\r\n    return {type: \"SN/SET_AUTH_USER_DATA\", data} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getAuthUserData = () => {\r\n    return (dispatch: Dispatch<authReducerAT>) => {\r\n        authAPI.me()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let data = response.data.data;\r\n                    dispatch(setAuthUserData(data));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\n\r\n//types:\r\ntype HeaderContainerPropsType = {}\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void;\r\n}\r\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Header {...this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\n//HOC\r\nconst HeaderContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    HeaderContainerPropsType,\r\n    AppStateType>(mapStateToProps, {getAuthUserData})(HeaderClassContainer);\r\n\r\nexport {\r\n    HeaderContainer\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype LoginPropsType = {}\r\n\r\n//functional component:\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n    return(\r\n        <div>\r\n            LoginPage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Login\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport {Login} from \"./components/Login/Login\";\r\n\r\n//types:\r\ntype PropsType = {}\r\n\r\n//function component:\r\nconst App: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={\"app-wrapper-content\"}>\r\n                <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer />}/>\r\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\r\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\r\n                <Route path={\"/News\"} render={() => <News/>}/>\r\n                <Route path={\"/Music\"} render={() => <Music/>}/>\r\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\r\n                <Route path={\"/Login\"} render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\n//types:\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT\r\n\r\n\r\n//store & rootReducer:\r\nexport const rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport {\r\n    store\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {AppStateType} from './redux/redux-store';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nconst reRenderEntireThree = (state: AppStateType) => {\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n        ,document.getElementById('root')\r\n    );\r\n}\r\n\r\nreRenderEntireThree(store.getState());\r\nstore.subscribe(() => {\r\n    reRenderEntireThree(store.getState())\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}