{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.tsx","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/profile-reducer.tsx","assets/images/default_user_photo.png","components/common/Preloader/three-dots.svg","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","components/Music/Music.tsx","redux/users-reducer.tsx","components/Users/Users.tsx","hoc/WithAuthRedirect.tsx","components/Users/UsersClassContainer.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.tsx","index.tsx","components/Users/Users.module.css","components/Dialogs/Message/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Login/Login.module.css","components/common/Preloader/Preloader.module.css","components/Profile/ContentArea/ContentArea.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","authAPI","initialState","id","email","login","isAuth","setAuthUserData","type","Header","props","className","style","header","to","logoArea","src","logo1","alt","logo2","loginBlock","items","HeaderClassContainer","this","getAuthUserData","React","Component","HeaderContainer","connect","state","auth","dispatch","resultCode","posts","message","likesCount","isLiked","newPostText","profile","setStatus","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","r","attributeName","from","begin","dur","values","calcMode","repeatCount","_ref3","fillOpacity","_ref4","SvgThreeDots","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","fill","ref","ForwardRef","Preloader","stroke","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onUpdateStatus","onKeyPressHandler","e","onStatusChange","currentTarget","value","updateStatus","prevProps","prevState","styles","statusStaticMode","onDoubleClick","statusEditMode","autoFocus","onKeyPress","onChange","onClick","ProfileInfo","descriptionBlock","photos","large","defaultSmallUserPhoto","fullName","preloaderStyle","main","PostContainer","profilePage","addLike","removeLike","postMessage","reactions","ContentAreaContainer","addPost","newPost","setNewPostText","newText","postsElements","map","p","addPostHandler","postBlock","inputAreaElements","maxLength","placeholder","preventDefault","Profile","ProfileClassContainer","match","params","getUserProfile","ProfileContainer","compose","withRouter","Music","users","totalUsersCount","isFetching","followingInProgress","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","onPageChanged","setCurrentPage","unFollowThunkCreator","followThunkCreator","pagesCount","Math","ceil","pages","push","u","small","info","name","buttonsArea","followed","disabled","some","selectedPage","mapStateToProps","WithAuthRedirect","restProps","UsersClassContainer","pageNumber","getUsersThunkCreator","UsersContainer","News","Navbar","navbar","item","activeClassName","active","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","loginForm","Field","component","loginButton","LoginPage","loginPage","console","log","Settings","dialogs","messages","newMessageText","DialogItem","dialog","Message","dialogStyle","text","messageStyle","img","defaultAvatar","content","time","Dialogs","dialogsPage","addMessage","setNewMessageText","dialogElements","d","messageElements","m","addMessageHandler","trim","AddMessageForm","DialogsClassContainer","DialogsContainer","dialogPage","newMessage","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.4952d118.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__27a1U\",\"item\":\"Navbar_item__2Sz7A\",\"active\":\"Navbar_active__3wMdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__30RqF\",\"dialogs\":\"Dialogs_dialogs__hPjJa\",\"dialog\":\"Dialogs_dialog__3R01s\",\"messages\":\"Dialogs_messages__2b5iv\",\"messageElements\":\"Dialogs_messageElements__BpFaC\",\"inputAreaElements\":\"Dialogs_inputAreaElements__1GU_0\",\"message\":\"Dialogs_message__2JtN6\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport {getUserProfile} from \"../redux/profile-reducer\";\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\theaders: {\n\t\t\"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\",\n\t},\n});\n\nexport const usersAPI = {\n\tgetUsers(currentPage: number, pageSize: number) {\n\t\treturn instance\n\t\t\t.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.data;\n\t\t\t});\n\t},\n\n\tfollow(userId: number) {\n\t\treturn instance.post(`follow/${userId}`);\n\t},\n\tunFollow(userId: number) {\n\t\treturn instance.delete(`follow/${userId}`);\n\t},\n\tgetProfile(userId: number) {\n\t\tconsole.warn('Obsolete method. Please use profileAPI object');\n\t\treturn profileAPI.getProfile(userId);\n\t},\n};\n\nexport const profileAPI = {\n\tgetProfile(userId: number) {\n\t\treturn instance.get(`profile/${userId}`);\n\t},\n\tgetUserStatus(userId: number) {\n\t\treturn instance.get(`/profile/status/${userId}`);\n\t},\n\tupdateUserStatus(status: string) {\n\t\treturn instance.put(`/profile/status`, {status: status});\n\t},\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance.get(`auth/me`);\n\t},\n\tlogin() {\n\t\treturn instance.post(`/auth/login`);\n\t}\n};\n","import {Dispatch} from \"redux\";\n\nimport {authAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\nexport type AuthInitialStateType = {\n    id: null | number,\n    email: null | string,\n    login: null | string,\n    isAuth: boolean\n}\n\n//initialState:\nconst initialState: AuthInitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\n//reducer:\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\n    switch (action.type) {\n        case \"SN/SET_AUTH_USER_DATA\": {\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const setAuthUserData = (data: AuthInitialStateType) => {\n    return {type: \"SN/SET_AUTH_USER_DATA\", data} as const //data = id, email, login\n}\n\n//thunk creators:\nexport const getAuthUserData = () => {\n    return (dispatch: Dispatch<authReducerAT>) => {\n        authAPI.me()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let data = response.data.data;\n                    dispatch(setAuthUserData(data));\n                }\n            });\n    }\n}\n\nexport {\n    authReducer\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport style from \"./Header.module.css\";\nimport logo1 from \"../../assets/images/logo_part_1.png\";\nimport logo2 from \"../../assets/images/logo_part_2.png\";\n\n//types:\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: null | string\n}\n\n//functional component:\nconst Header: React.FC<HeaderPropsType> = (props) => {\n\n\tconst {\n\t\tisAuth,\n\t\tlogin,\n\t} = props;\n\n\treturn (\n\t\t<div className={style.header}>\n\t\t\t<NavLink to={\"/news\"} className={style.logoArea}>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={logo1} alt=\"logoName1\" />\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<img src={logo2} alt=\"logoName2\" />\n\t\t\t\t</div>\n\t\t\t</NavLink>\n\t\t\t<div className={style.loginBlock}>\n\t\t\t\t{\n\t\t\t\t\tisAuth\n\t\t\t\t\t\t? <div className={style.items}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t{/*<img src={                    //<-- no photo yet\n                                    props.photos.small !== null\n                                        ? props.photos.small\n                                        : defaultSmallUserPhoto //defaultAsset\n                                }/>*/}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div>{login} </div>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"}>Logout</NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t: <div className={style.items}>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"}>Login </NavLink>\n\t\t\t\t\t\t\t<NavLink to={\"/login\"}>Sign up </NavLink>\n\t\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport {\n    Header\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {getAuthUserData, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Header} from \"./Header\";\n\n/* import axios from \"axios\"; */\n\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: null | string\n}\n\ntype mapDispatchToPropsType = {\n    getAuthUserData: () => void;\n\n    setAuthUserData: (data: any) => void //test\n}\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login\n    }\n}\n\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\n\tcomponentDidMount() {\n\t\tthis.props.getAuthUserData(); /*<-request*/\n\n\t\t/* axios\n\t\t\t.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tif (response.data.resultCode === 0) {\n\t\t\t\t\tdebugger;\n\t\t\t\t\tlet data = response.data.data;\n\t\t\t\t\tthis.props.setAuthUserData(data);\n\t\t\t\t}\n\t\t\t}); */\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Header {...this.props} />\n\t\t\t</>\n\t\t);\n\t}\n}\n\nconst HeaderContainer = connect<mapStateToPropsType,\n    mapDispatchToPropsType, {},\n    AppStateType>(mapStateToProps, {getAuthUserData,\n    setAuthUserData//test\n    })(HeaderClassContainer);\n\nexport {\n    HeaderContainer\n}","import {Dispatch} from \"redux\";\n\nimport {profileAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype PostType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n}\nexport type ProfileInitialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: ProfilePageType | null\n    status: string | null\n}\n\nexport type ProfilePageType = {\n    aboutMe: string,\n    contacts: LinksType,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: null | string,\n    fullName: string,\n    userId: number,\n    photos: PhotosType\n}\ntype LinksType = {\n    facebook: null | string,\n    website: null | string,\n    vk: null | string,\n    twitter: null | string,\n    instagram: null | string,\n    youtube: null | string,\n    github: null | string,\n    mainLink: null | string\n}\nexport type PhotosType = { small: string, large: string }\n\nexport type ProfileActionType = ReturnType<typeof addPost>\n    | ReturnType<typeof setNewPostText>\n    | ReturnType<typeof addLike>\n    | ReturnType<typeof removeLike>\n    | ReturnType<typeof setProfile>\n    | ReturnType<typeof setStatus>\n\n\n//initialState:\nconst initialState: ProfileInitialStateType = {\n    posts: [\n        {\n            id: 21313,\n            message: \"testPost\",\n            likesCount: 1,\n            isLiked: false\n        }\n    ],\n    newPostText: \"\",\n    profile: null,\n    status: null\n}\n\n//reducer:\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\n\n    switch (action.type) {\n        case \"SN/PROFILE/ADD_POST\": {\n            const stateCopy = {...state}\n            const newPost: PostType = {\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\n                message: state.newPostText,\n                likesCount: 0,\n                isLiked: false\n            };\n            stateCopy.posts = [newPost, ...state.posts];\n            stateCopy.newPostText = \"\";\n            return stateCopy;\n        }\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\n            const stateCopy = {...state};\n            stateCopy.newPostText = action.newText;\n            return stateCopy;\n        }\n        case \"SN/PROFILE/ADD_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/REMOVE_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/SET_PROFILE\": {\n            return {...state, profile: action.profile}\n        }\n        case \"SN/PROFILE/SET_STATUS\":\n            return {...state, status: action.status}\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const addPost = (newPost: string) => {\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\n}\nexport const setNewPostText = (newText: string) => {\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\n}\nexport const addLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\n}\nexport const removeLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\n}\nexport const setProfile = (profile: ProfilePageType) => {\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\n}\nexport const setStatus = (status: string) => {\n    return {type: \"SN/PROFILE/SET_STATUS\", status} as const\n}\n\n\n//thunk creators:\nexport const getUserProfile = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getProfile(userId)\n            .then(response => {\n                dispatch(setProfile(response.data));\n            });\n    }\n}\nexport const getUserStatus = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getUserStatus(userId) //+userId ??\n            .then(response => {\n                dispatch(setStatus(response.data));\n            });\n    }\n}\nexport const updateUserStatus = (status: string) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .updateUserStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0){\n                    dispatch(setStatus(status));\n                }\n            });\n    }\n}\n\nexport {\n    profileReducer\n}","export default __webpack_public_path__ + \"static/media/default_user_photo.5364f1ba.png\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 15,\n  r: 9,\n  fillOpacity: 0.3\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 9,\n  to: 9,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"9;15;9\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 0.5,\n  to: 0.5,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \".5;1;.5\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 105,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nfunction SvgThreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 120,\n    height: 30,\n    viewBox: \"0 0 120 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.b98a8c76.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport {ReactComponent as ReactLogo} from \"./three-dots.svg\";\n\n//types:\ntype PreloaderPropsType = {}\n\n//functional component:\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\n    return (\n        <div>\n            {/*<h1>loading...</h1>*/}\n            <ReactLogo fill=\"#2b3f4f\" stroke=\"current\"/>\n        </div>\n    )\n}\n\nexport {\n    Preloader\n}\n","import React from \"react\";\n\nimport styles from \"./ProfileInfo.module.css\"\n\n//types:\ntype ProfileStatusPropsType = {\n    status: string | null\n    updateStatus: (status: string) => void\n}\ntype LocalStateType = {\n    editMode: boolean\n    status: string | null\n}\n\n//class component:\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n    //localState for status:\n    state: LocalStateType = {\n        editMode: false,\n        status: this.props.status,\n    }\n\n    //on&off edit mode of status:\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    }\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.onUpdateStatus();\n    }\n    onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            this.deactivateEditMode();\n        }\n    }\n\n    //onchange localState of status:\n    onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({status: e.currentTarget.value});\n    }\n\n    //update status callback  function from local state to global state:\n    onUpdateStatus = () => {\n        if (this.state.status){\n            this.props.updateStatus( this.state.status);\n        } else {\n            this.props.updateStatus( ''); //NEED TO FIX !!!!\n        }\n    }\n\n    //re-rendering of status's local state if its props have changed:\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: any) { //need to check types!!!\n        if (prevProps.status !== this.props.status){\n            this.setState({status: this.props.status});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    !this.state.editMode &&\n                        <div>\n                            <div className={styles.statusStaticMode} onDoubleClick={this.activateEditMode}>{\n                                this.props.status\n                                    ? this.props.status\n                                    : \"set status\"\n                            }</div>\n                        </div>\n                }\n\n                {\n                    this.state.editMode &&\n                        <div className={`${styles.statusEditMode}`}>\n                            <div>\n                                <input\n                                    autoFocus\n                                    /*onBlur={this.deactivateEditMode}*/\n                                    onKeyPress={this.onKeyPressHandler}\n                                    value={`${this.state.status}`}  //NEED TO FIX !!!!\n                                    onChange={this.onStatusChange}\n                                />\n                            </div>\n                            <div>\n                                <button\n                                onClick={this.deactivateEditMode}\n                                >save</button>\n                            </div>\n                        </div>\n                }\n\n            </>\n        )\n    }\n}\n\nexport  {\n    ProfileStatus\n}","import React from \"react\";\n\nimport defaultSmallUserPhoto from \"../../../assets/images/default_user_photo.png\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\nimport styles from \"./ProfileInfo.module.css\";\nimport preloaderStyle from \"../../common/Preloader/Preloader.module.css\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\n//types:\ntype  ProfileInfoPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n}\n\n//functional component:\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n    } = props;\n\n    //user would see preloader while response has not confirmed:\n    if (!profile) {\n        return (\n            <>\n                <div className={preloaderStyle.main}>\n                    <Preloader/>\n                </div>\n            </>\n        )\n    }\n\n    return (\n        <div>\n            <div className={styles.descriptionBlock}>\n\n                <img src={\n                    profile.photos.large !== null\n                        ? profile.photos.large\n                        : defaultSmallUserPhoto //defaultAsset\n                } alt={\"smallUserPhoto\"}/>\n\n                <div className={styles.items}>\n                    <div><b>{profile.fullName}</b></div>\n                    <ProfileStatus\n                        updateStatus={updateStatus}\n                        status={status}\n                    />\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    ProfileInfo\n}","import {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {AppStateType} from \"../../../../redux/redux-store\";\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\nimport {Post} from \"./Post\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addLike: (id: number, isLiked: boolean)=>{\n            dispatch(addLike(id, isLiked));\n        },\n        removeLike: (id: number, isLiked: boolean)=> {\n            dispatch(removeLike(id, isLiked));\n        }\n    }\n}\n\n//HOC:\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\n\nexport {\n    PostContainer\n}","import React from \"react\";\n\nimport style from \"./Post.module.css\"\nimport defaultSmallUserPhoto from \"../../../../assets/images/default_user_photo.png\"\n\n//types:\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//functional component:\nconst Post: React.FC<PostPropsType> = (props) => {\n\n    return (\n        <>\n            <hr/>\n            <div className={style.post}>\n                <div className={style.items}>\n                    <div>\n                        {/*need to fix: */}\n                        <img src={defaultSmallUserPhoto} alt=\"defaultSmallUserPhoto\"/>\n                        {/* <img src={\n                        u.photos.small !== null\n                            ? u.photos.small\n                            : defaultSmallUserPhoto //defaultAsset\n                    } alt=\"defaultSmallUserPhoto\"/>*/}\n                    </div>\n                    <div className={style.postMessage}>\n                        <div><b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}</div>\n                        <div><div>{props.message}</div></div>\n                    </div>\n                </div>\n                <div className={style.reactions}>\n                    <div>\n                        {\n                            props.isLiked\n                                ? <button onClick={() => {\n                                    props.removeLike(props.id, props.isLiked);\n                                }}>Liked ♥{props.likesCount}</button>\n                                :\n                                <button onClick={() => {\n                                    props.addLike(props.id, props.isLiked);\n                                }}>Like ♡{props.likesCount}</button>\n                        }\n                    </div>\n                    <div> <button> Write comment</button> </div>\n                    <div> <button> Share</button> </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport {\n    Post\n}","import {connect} from \"react-redux\";\n\nimport {ContentArea} from \"./ContentArea\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\n//HOC:\nconst ContentAreaContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost,\n    setNewPostText\n})(ContentArea);\n\nexport {\n    ContentAreaContainer\n}","import React, {ChangeEvent} from \"react\";\n\nimport style from \"./ContentArea.module.css\"\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\nimport {PostContainer} from \"./Post/PostContainer\";\n\n//types:\ntype ContentAreaPropsType = {\n    profilePage: ProfileInitialStateType\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//functional component:\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\n\n    const state = props.profilePage; //state!!!\n\n    let postsElements = state.posts.map(p =>\n        <PostContainer\n            key={p.id}\n            message={p.message}\n            id={p.id}\n            likesCount={p.likesCount}\n            isLiked={p.isLiked}\n        />\n    )\n\n    const addPostHandler = () => {\n        if (state.newPostText) {\n            props.addPost(state.newPostText);\n        }\n    }\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        const newText = e.currentTarget?.value;\n        props.setNewPostText(newText);\n    }\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            addPostHandler();\n        }\n    }\n\n    return (\n        <div className={style.postBlock}>\n            <div className={style.inputAreaElements}>\n                <div><textarea\n                    value={state.newPostText}\n                    maxLength={100000}\n                    onChange={onChangeHandler}\n                    placeholder={\"What's new?\"}\n                    onKeyPress={onKeyPressHandler}\n                /></div>\n                <div>\n                    <button onClick={addPostHandler}>Post</button>\n                </div>\n            </div>\n            <div className={style.posts}>\n                {\n                    postsElements\n                }\n            </div>\n        </div>\n    )\n}\n\nexport {\n    ContentArea\n}","import React from \"react\";\n\nimport styles from \"./Profile.module.css\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\n\n//types:\ntype ProfilePropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n}\n\n//functional component:\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n    } = props;\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n            <ContentAreaContainer/>\n        </div>\n    )\n}\n\nexport {\n    Profile\n}","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, getUserStatus, ProfilePageType, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {Profile} from \"./Profile\";\n\n//types:\ntype mapStateToPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n}\ntype mapDispatchToPropsType = {\n    getUserProfile: (userId: number) => void\n    getUserStatus: (userId: number) => void\n    updateUserStatus: (status: string) => void\n}\ntype  PathParamsType = {\n    userId: string //number or string (STRING!!!)\n}\ntype ProfileClassContainerPropsType = mapStateToPropsType\n    & mapDispatchToPropsType\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\n\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n    }\n}\n\n//class container component:\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\n\n    componentDidMount() {\n\n        //profile userId:\n        let userId: string = this.props.match.params.userId;\n        if (!userId) {\n            userId = \"8091\"; // test value!!!!\n        }\n\n        //usersAPI.getProfile() & profileAPI.getUserStatus() responses, (\"+\" for to string):\n        this.props.getUserProfile(+userId);\n        this.props.getUserStatus(+userId);\n    }\n\n    render() {\n        return (\n            <>\n                <Profile\n                    {...this.props}\n                    profile={this.props.profile}\n                    status={this.props.status}\n                    updateStatus={this.props.updateUserStatus}\n                />\n            </>\n        )\n    }\n}\n\n//HOC:\nconst ProfileContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            getUserProfile,\n            getUserStatus,\n            updateUserStatus,\n        }\n    ),\n    withRouter,\n)(ProfileClassContainer);\n\nexport {\n    ProfileContainer\n}\n\n","import React from \"react\";\n\n//types:\ntype MusicPropsType = {}\n\n//functional component:\nconst Music: React.FC<MusicPropsType> = (props) => {\n    return (\n        <div>\n            Music Page's Content\n        </div>\n    )\n}\n\nexport {\n    Music\n}","import { Dispatch } from \"redux\";\n\nimport {usersAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype LocationType = {\n    country: string\n    city: string\n}\ntype PhotosType = {\n    small: string\n    large: string\n}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    photos: PhotosType\n    name: string\n    status: string\n    location: LocationType\n}\nexport type UsersInitialStateType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: any[]\n}\nexport type UsersActionType = | ReturnType<typeof follow>\n    | ReturnType<typeof unFollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setFollowingProgress>\n\n//initialState:\nconst initialState: UsersInitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 19,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\n//reducer:\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\n    switch (action.type) {\n        case \"SN/USERS/FOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/UNFOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/SET_USERS\": {\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]} (declined)\n        }\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\n            return {...state, currentPage: action.currentPage}\n        }\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case \"SN/USERS/SET_IS_FETCHING\": {\n            return {...state, isFetching: action.isFetching}\n        }\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\n            return {...state, followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.id]\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n//action creators:\nexport const follow = (id: number) => {\n    return {type: \"SN/USERS/FOLLOW\", id} as const\n}\nexport const unFollow = (id: number) => {\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\n}\nexport const setUsers = (users: Array<UsersType>) => {\n    return {type: \"SN/USERS/SET_USERS\", users} as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\n}\nexport const setIsFetching = (isFetching: boolean) => {\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\n}\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\n}\n\n//thunk creators:\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setIsFetching(true));\n\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\n            dispatch(setIsFetching(false));\n            dispatch(setUsers(data.items));\n            dispatch(setTotalUsersCount(data.totalCount));\n        } );\n    }\n}\nexport const unFollowThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI.unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\nexport const followThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI.follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0){\n                    dispatch(follow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\n\nexport {\n    usersReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\nimport defaultSmallUserPhoto from \"../../assets/images/default_user_photo.png\"\nimport style from \"./Users.module.css\";\n\n\n//types:\ntype UsersPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    followingInProgress: any[]\n    setUsers: (users: Array<UsersType>) => void //need to delete\n    setCurrentPage: (pageNumber: number) => void //need to delete\n    setTotalUsersCount: (totalCount: number) => void //need to delete\n    onPageChanged: (p: number) => void\n\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\n    followThunkCreator: (userId: number) => void //need rename to follow\n}\n\n//functional component:\nconst Users: React.FC<UsersPropsType> = (props) => {\n\n    const {\n        usersPage,\n        pageSize,\n        totalUsersCount,\n        currentPage,\n        followingInProgress,\n        setUsers, //need to delete\n        setCurrentPage, //need to delete\n        setTotalUsersCount, //need to delete\n        onPageChanged,\n        unFollowThunkCreator,\n        followThunkCreator,\n    } = props;\n\n    //pages for pagination:\n    const pagesCount = Math.ceil(totalUsersCount / pageSize) //.ceil rounds a number up to the next largest integer\n    const pages = []\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return (\n        <div className={style.items}>\n            {\n                usersPage.users.map(u => <div key={u.id}>\n                    <div className={style.profile}>\n\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={\n                                u.photos.small !== null\n                                    ? u.photos.small\n                                    : defaultSmallUserPhoto //defaultAsset\n                            } alt=\"smallUserPhoto\"/>\n                        </NavLink>\n\n                        <div className={style.info}>\n                            <NavLink to={'/profile/' + u.id}>\n                                <div className={style.name}>{u.name}</div>\n                            </NavLink>\n                        </div>\n                    </div>\n\n                    <div className={style.buttonsArea}>\n                        <div>\n                            {\n                                u.followed\n                                    ? <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            unFollowThunkCreator(u.id);\n                                        }}\n                                    >unfollow</button>\n                                    : <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            followThunkCreator(u.id);\n                                        }}\n                                    >follow</button>\n                            }\n                        </div>\n                        <div>\n                            <NavLink to={'/dialogs/' + u.id}> {/*<- NavLink!!!!!!*/}\n                                <button>{\"Write message\"}</button>\n                            </NavLink>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>)\n            }\n            <div>\n                {\n                    pages.map(p =>\n                        <span  //pagination\n                            className={\n                                p === currentPage\n                                    ? style.selectedPage\n                                    : ''\n                            }\n                            onClick={() => onPageChanged(p)}\n                        >{p}</span>\n                    )\n                }\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Users\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { AppStateType } from \"../redux/redux-store\";\n\n//types:\ntype mapStateToPropsType = {\n  isAuth: boolean;\n};\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\n\n//container component:\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) { //possible to make arrow function?\n\n  const RedirectComponent: React.FC<mapStateToPropsType> = (props) => {\n\n    const {\n      isAuth,\n      ...restProps\n    } = props;\n\n    if (!isAuth) {\n      return <Redirect to={\"/Login\"}/>\n    }\n    return <Component {...(restProps as T)} />\n  };\n\n  return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport {\n  WithAuthRedirect\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage,\n    setIsFetching,\n    setTotalUsersCount,\n    setUsers,\n    unFollowThunkCreator,\n    UsersInitialStateType,\n    UsersType\n} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\"\nimport {Users} from \"./Users\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: any[]\n}\ntype mapDispatchToPropsType = {\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setIsFetching: (isFetching: boolean) => void\n\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void // need rename to getUsers\n    unFollowThunkCreator: (userId: number) => void //need rename to follow\n    followThunkCreator: (userId: number) => void //need rename to unFollow\n}\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n\n//class container component:\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\n\n    componentDidMount() {\n        //usersAPI.getUsers() request:\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);\n    };\n\n    //onChanged function for pagination:\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setIsFetching(true);\n\n        //request for re-render next page of users:\n        usersAPI\n            .getUsers(this.props.currentPage, this.props.pageSize)\n            .then(data => {\n                this.props.setIsFetching(false);\n                this.props.setUsers(data.items);\n            });\n    };\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.isFetching\n                        ? <div className={preloaderStyle.main}><Preloader/></div>\n                        : <div>\n                            <Users\n                                {...this.props}\n                                onPageChanged={this.onPageChanged}\n                            />\n                        </div>\n                }\n            </>\n        )\n    };\n}\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersPage: state.usersPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    };\n};\n\n\n//HOC:\nconst UsersContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            setUsers,\n            setCurrentPage,\n            setTotalUsersCount,\n            setIsFetching,\n            getUsersThunkCreator, // need rename to getUsers\n            unFollowThunkCreator, //need rename to unFollow\n            followThunkCreator,  //need rename to follow\n        }),\n    WithAuthRedirect,\n)(UsersClassContainer);\n\nexport {\n    UsersContainer\n};","import React from \"react\";\n\n//types:\ntype NewsPropsType = {}\n\n//functional component:\nconst News: React.FC<NewsPropsType> = (props) => {\n    return (\n        <div>\n            News Page's Content\n        </div>\n    )\n}\n\nexport {\n    News\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport style from \"./Navbar.module.css\";\n\n//types:\ntype NavbarPropsType = {}\n\n//functional component:\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\n    return (\n        <div className={style.navbar}>\n            <div className={style.item}>\n                <NavLink to={\"/Profile\"} activeClassName={style.active}>My profile</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/News\"} activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Dialogs\"} activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Users\"} activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Music\"} activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Settings\"} activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Navbar\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./Login.module.css\"\n\n//types:\ntype LoginFormPropsType = any;\ntype LoginPagePropsType = any;\n\n//functional component:\nconst LoginForm: React.FC<LoginFormPropsType> = (props) => {\n\n    const {\n    } = props;\n\n    return(\n        <form onSubmit={props.handleSubmit} className={styles.loginForm}>\n            <div>\n                <Field placeholder={\"Login\"} name={\"login\"} component={\"input\"}/>\n            </div>\n            <div>\n                <Field placeholder={\"Password\"} name={\"password\"} component={\"input\"}/>\n            </div>\n            <div className={styles.items}>\n                <div>\n                    <Field type={\"checkbox\"} name={\"rememberMe\"} component={\"input\"}/> remember me\n                </div>\n                <div className={styles.loginButton}>\n                    <button>Login</button>\n                </div>\n            </div>\n        </form>\n    )\n}\n\n\nconst LoginReduxForm = reduxForm({form: 'Login'})(LoginForm);\n\n//functional component:\nconst LoginPage: React.FC<LoginPagePropsType> = () => {\n    const onSubmit = () => {\n        console.log()\n    }\n\n    return (\n        <div className={styles.loginPage}>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport {\n    LoginPage\n}","import React from \"react\";\n\n//types:\ntype SettingsPropsType = {}\n\n//functional component:\nconst Settings: React.FC<SettingsPropsType> = (props) => {\n    return (\n        <div>\n            Settings Page's Content\n        </div>\n    )\n}\n\nexport {\n    Settings\n}","import {AppActionType} from \"./redux-store\";\n\n//types:\nexport type DialogsDataType = {\n    id: number\n    name: string\n}\nexport type MessagesDataType = {\n    id: number\n    message: string\n}\nexport type DialogsInitialStateType = {\n    dialogs: Array<DialogsDataType>,\n    messages: Array<MessagesDataType>,\n    newMessageText: string\n}\nexport type DialogsActionType = ReturnType<typeof addMessage>\n    | ReturnType<typeof setNewMessageText>\n\n//initialState:\nconst initialState: DialogsInitialStateType = {\n    dialogs: [\n        {id: 1, name: \"Dima\"},\n        {id: 2, name: \"Sasha\"},\n    ],\n    messages: [\n        {id: 1, message: \"hello\"},\n        {id: 2, message: \"How are you?\"},\n\n    ],\n    newMessageText: \"\"\n}\n\n//reducer:\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\n        const stateCopy = {...state}\n        const newMessage: MessagesDataType = {\n            id: Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method\n            message: stateCopy.newMessageText,\n        };\n        stateCopy.messages = [...state.messages, newMessage];\n        stateCopy.newMessageText = \"\";\n        return stateCopy;\n\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\n        const stateCopy = {...state};\n        stateCopy.newMessageText = action.newText;\n        return stateCopy;\n\n    } else {\n        return state;\n    }\n}\n\n//action creators:\nexport const addMessage = (newMessage: string) => {\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\n}\nexport const setNewMessageText = (newText: string) => {\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\n}\n\nexport {\n    dialogsReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport style from \"../Dialogs.module.css\";\n\n//types:\ntype DialogPropsType = {\n    id: number\n    name: string\n}\n\n//functional component:\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\n\n    const {\n        id,\n        name,\n    } = props;\n\n    return (\n        <div className={style.dialog + '' + style.active}>\n            <NavLink to={\"/dialogs/\" + id}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport {\n    DialogItem\n}","import React from \"react\";\n\nimport dialogStyle from \"../Dialogs.module.css\";\nimport messageStyle from \"./Message.module.css\";\nimport defaultAvatar from \"../../../assets/images/default_user_photo.png\"\n\n//types:\ntype MessagePropsType = {\n    id: number\n    message: string\n}\n\n//function component:\nconst Message: React.FC<MessagePropsType> = (props) => {\n    return (\n\n    <div className={dialogStyle.text}>\n        <div className={messageStyle.message}>\n            <img className={messageStyle.img} alt=\"userPhoto\" src={defaultAvatar}/>\n            <div className={messageStyle.content}>\n                <div className={messageStyle.name}>userName</div>\n                <div className={messageStyle.text}>{props.message}</div>\n                <div className={messageStyle.time}>time</div>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport {\n    Message\n}","import React, {ChangeEvent} from \"react\";\n\nimport style from \"./Dialogs.module.css\"\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\n\n\n//types:\nexport type DialogsPropsType = {\n    dialogsPage: DialogsInitialStateType\n    addMessage: (newMessageText: string) => void\n    setNewMessageText: (newText: string) => void\n}\n\n//functional component:\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n\n    const {\n        dialogsPage,\n        addMessage,\n        setNewMessageText,\n    } = props;\n\n    let dialogElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n    let messageElements = dialogsPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\n\n    const addMessageHandler = () => {\n        if (dialogsPage.newMessageText) {\n            addMessage(dialogsPage.newMessageText.trim());\n        }\n    }\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        const newText = e.currentTarget?.value;\n        setNewMessageText(newText);\n    }\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n            addMessageHandler();\n        }\n    }\n\n    return (\n        <div className={style.dialogsPage}>\n            <div className={style.dialogs}>\n                {\n                    dialogElements\n                }\n            </div>\n\n            <div className={style.messages}>\n                <div className={style.messageElements}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <hr/>\n\n                <div className={style.inputAreaElements}>\n                    <AddMessageForm/>\n                    <div>\n                        <textarea\n                            value={dialogsPage.newMessageText}\n                            maxLength={500}\n                            onChange={onChangeHandler}\n                            placeholder={\"Write something\"}\n                            onKeyPress={onKeyPressHandler}\n                        />\n                    </div>\n                    <div>\n                        <button onClick={addMessageHandler}>Send</button>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\n//functional component:\nconst AddMessageForm: React.FC<{}> = (props) => {\n    return(\n        <form>\n            {/*<div>\n                        <textarea\n                            value={state.newMessageText}\n                            maxLength={500}\n                            onChange={onChangeHandler}\n                            placeholder={\"Write something\"}\n                            onKeyPress={onKeyPressHandler}\n                        />\n            </div>\n            <div>\n                <button onClick={addMessageHandler}>Send</button>\n            </div>*/}\n        </form>\n    )\n}\n\nexport {\n    Dialogs\n}\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addMessage,\n    DialogsInitialStateType,\n    setNewMessageText\n} from \"../../redux/dialogs-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport { Dialogs } from \"./Dialogs\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    dialogsPage: DialogsInitialStateType\n}\n\ntype mapDispatchToPropsType = {\n    addMessage: (newMessageText: string) => void\n    setNewMessageText: (newText: string) => void\n}\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n\n    return {\n        dialogsPage: state.dialogPage,\n    }\n}\n\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\n\n    render(){\n        return(\n            <Dialogs {...this.props}/>\n        )\n    }\n}\n\n//HOC:\nconst DialogsContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {addMessage, setNewMessageText}),\n    WithAuthRedirect,\n)(DialogsClassContainer);\n\nexport {\n    DialogsContainer\n}\n\n\n","import React from \"react\";\nimport {Route} from \"react-router-dom\";\n\nimport \"./App.css\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\nimport {Music} from \"./components/Music/Music\";\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\nimport {News} from \"./components/News/News\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {LoginPage} from \"./components/Login/Login\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\n\n\n//types:\ntype PropsType = {}\n\n//functional component:\nconst App: React.FC<PropsType> = (props) => {\n    return (\n        <div className=\"app-wrapper\">\n            <HeaderContainer/>\n            <Navbar/>\n            <div className={\"app-wrapper-content\"}>\n                <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer />}/>\n                <Route path={\"/News\"} render={() => <News/>}/>\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\n                <Route path={\"/Music\"} render={() => <Music/>}/>\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\n                <Route path={\"/Login\"} render={() => <LoginPage/>}/>\n            </div>\n        </div>\n    );\n}\n\nexport {\n    App\n}\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\";\n// @ts-ignore\nimport {reducer as formReducer, reduxForm} from 'redux-form';\n\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\n\n//types:\nexport type AppStateType = ReturnType<typeof rootReducer>;\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT\n\n//store & rootReducer:\nexport const rootReducer = combineReducers({\n    dialogPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport {\n    store\n}","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"./index.css\";\nimport {App} from \"./App\";\nimport {AppStateType, store} from \"./redux/redux-store\";\n\n\nconst reRenderEntireThree = (state: AppStateType) => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n        , document.getElementById('root')\n    );\n}\n\nreRenderEntireThree(store.getState());\nstore.subscribe(() => {\n    reRenderEntireThree(store.getState())\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__-cuhe\",\"selectedPage\":\"Users_selectedPage__22OUq\",\"profile\":\"Users_profile__2q_da\",\"info\":\"Users_info__2hM-q\",\"name\":\"Users_name__3uZmM\",\"buttonsArea\":\"Users_buttonsArea__3uP-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1pl0m\",\"content\":\"Message_content__28Hls\",\"name\":\"Message_name__gkaLH\",\"text\":\"Message_text__1FzPC\",\"time\":\"Message_time__322cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1o5hr\",\"items\":\"ProfileInfo_items__Tow0c\",\"statusStaticMode\":\"ProfileInfo_statusStaticMode__1JGsp\",\"statusEditMode\":\"ProfileInfo_statusEditMode__2KjhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pKV4\",\"logoArea\":\"Header_logoArea__3SqBW\",\"loginBlock\":\"Header_loginBlock__2NGhc\",\"items\":\"Header_items__2DQpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__L3g4m\",\"items\":\"Post_items__TiuHf\",\"postMessage\":\"Post_postMessage__2R7XL\",\"reactions\":\"Post_reactions__3uWF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__2QSa1\",\"loginForm\":\"Login_loginForm__3_yRp\",\"items\":\"Login_items__XJym6\",\"loginButton\":\"Login_loginButton__34rpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__BgsaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__2Fp-K\",\"posts\":\"ContentArea_posts__3qIIz\",\"inputAreaElements\":\"ContentArea_inputAreaElements__ijd0W\"};"],"sourceRoot":""}