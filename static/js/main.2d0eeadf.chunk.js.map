{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Dialogs/Message/Message.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","components/Profile/ContentArea/Post/Post.module.css","components/common/Preloader/Preloader.module.css","components/Profile/ContentArea/ContentArea.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.tsx","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/profile-reducer.tsx","assets/images/defaultSmallUserPhoto.png","components/common/Preloader/three-dots.svg","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","components/Music/Music.tsx","redux/users-reducer.tsx","components/Users/Users.tsx","hoc/WithAuthRedirect.tsx","components/Users/UsersClassContainer.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","authAPI","initialState","id","email","login","isAuth","setAuthUserData","type","Header","props","className","style","header","to","logoArea","src","logo1","alt","logo2","loginBlock","items","HeaderClassContainer","this","getAuthUserData","React","Component","HeaderContainer","connect","state","auth","dispatch","resultCode","posts","message","likesCount","isLiked","newPostText","profile","setStatus","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","r","attributeName","from","begin","dur","values","calcMode","repeatCount","_ref3","fillOpacity","_ref4","SvgThreeDots","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","fill","ref","ForwardRef","Preloader","stroke","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onUpdateStatus","onKeyPressHandler","e","onStatusChange","currentTarget","value","updateStatus","prevProps","prevState","styles","statusStaticMode","onDoubleClick","statusEditMode","autoFocus","onKeyPress","onChange","onClick","ProfileInfo","descriptionBlock","photos","large","defaultSmallUserPhoto","fullName","preloaderStyle","main","PostContainer","profilePage","addLike","removeLike","postMessage","reactions","ContentAreaContainer","addPost","newPost","setNewPostText","newText","postsElements","map","p","addPostHandler","postBlock","inputAreaElements","maxLength","placeholder","preventDefault","Profile","ProfileClassContainer","match","params","getUserProfile","ProfileContainer","compose","withRouter","Music","users","totalUsersCount","isFetching","followingInProgress","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","pagesCount","Math","ceil","pages","push","u","small","info","name","buttonsArea","followed","disabled","some","unFollowThunkCreator","followThunkCreator","selectedPage","onPageChanged","mapStateToProps","WithAuthRedirect","restProps","UsersClassContainer","pageNumber","setCurrentPage","getUsersThunkCreator","UsersContainer","News","Navbar","navbar","item","activeClassName","active","LoginForm","LoginPage","Settings","dialogs","messages","newMessageText","DialogItem","dialog","Message","dialogStyle","text","messageStyle","img","defaultAvatar","content","time","Dialogs","dialogsPage","dialogElements","d","messageElements","m","addMessageHandler","addMessage","trim","setNewMessageText","AddMessageForm","DialogsClassContainer","DialogsContainer","dialogPage","newMessage","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","filter","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.2d0eeadf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__30RqF\",\"dialogs\":\"Dialogs_dialogs__hPjJa\",\"dialog\":\"Dialogs_dialog__3R01s\",\"messages\":\"Dialogs_messages__2b5iv\",\"messageElements\":\"Dialogs_messageElements__BpFaC\",\"inputAreaElements\":\"Dialogs_inputAreaElements__1GU_0\",\"message\":\"Dialogs_message__2JtN6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__-cuhe\",\"selectedPage\":\"Users_selectedPage__22OUq\",\"profile\":\"Users_profile__2q_da\",\"info\":\"Users_info__2hM-q\",\"name\":\"Users_name__3uZmM\",\"buttonsArea\":\"Users_buttonsArea__3uP-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1pl0m\",\"content\":\"Message_content__28Hls\",\"name\":\"Message_name__gkaLH\",\"text\":\"Message_text__1FzPC\",\"time\":\"Message_time__322cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1o5hr\",\"items\":\"ProfileInfo_items__Tow0c\",\"statusStaticMode\":\"ProfileInfo_statusStaticMode__1JGsp\",\"statusEditMode\":\"ProfileInfo_statusEditMode__2KjhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pKV4\",\"logoArea\":\"Header_logoArea__3SqBW\",\"loginBlock\":\"Header_loginBlock__2NGhc\",\"items\":\"Header_items__2DQpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__L3g4m\",\"items\":\"Post_items__TiuHf\",\"postMessage\":\"Post_postMessage__2R7XL\",\"reactions\":\"Post_reactions__3uWF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__BgsaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__2Fp-K\",\"posts\":\"ContentArea_posts__3qIIz\",\"inputAreaElements\":\"ContentArea_inputAreaElements__ijd0W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__27a1U\",\"item\":\"Navbar_item__2Sz7A\",\"active\":\"Navbar_active__3wMdQ\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\nimport {getUserProfile} from \"../redux/profile-reducer\";\r\n\r\nconst instance = axios.create({\r\n\twithCredentials: true,\r\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n\theaders: {\r\n\t\t\"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\",\r\n\t},\r\n});\r\n\r\nexport const usersAPI = {\r\n\tgetUsers(currentPage: number, pageSize: number) {\r\n\t\treturn instance\r\n\t\t\t.get(`users?page=${currentPage}&count=${pageSize}`)\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn response.data;\r\n\t\t\t});\r\n\t},\r\n\r\n\tfollow(userId: number) {\r\n\t\treturn instance.post(`follow/${userId}`);\r\n\t},\r\n\tunFollow(userId: number) {\r\n\t\treturn instance.delete(`follow/${userId}`);\r\n\t},\r\n\tgetProfile(userId: number) {\r\n\t\tconsole.warn('Obsolete method. Please use profileAPI object');\r\n\t\treturn profileAPI.getProfile(userId);\r\n\t},\r\n};\r\n\r\nexport const profileAPI = {\r\n\tgetProfile(userId: number) {\r\n\t\treturn instance.get(`profile/${userId}`);\r\n\t},\r\n\tgetUserStatus(userId: number) {\r\n\t\treturn instance.get(`/profile/status/${userId}`);\r\n\t},\r\n\tupdateUserStatus(status: string) {\r\n\t\treturn instance.put(`/profile/status`, {status: status});\r\n\t},\r\n}\r\n\r\nexport const authAPI = {\r\n\tme() {\r\n\t\treturn instance.get(`auth/me`);\r\n\t},\r\n};\r\n","import {Dispatch} from \"redux\";\r\n\r\nimport {authAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\r\nexport type AuthInitialStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean\r\n}\r\n\r\n//initialState:\r\nconst initialState: AuthInitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n//reducer:\r\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/SET_AUTH_USER_DATA\": {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const setAuthUserData = (data: AuthInitialStateType) => {\r\n    return {type: \"SN/SET_AUTH_USER_DATA\", data} as const //data = id, email, login\r\n}\r\n\r\n//thunk creators:\r\nexport const getAuthUserData = () => {\r\n    return (dispatch: Dispatch<authReducerAT>) => {\r\n        authAPI.me()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let data = response.data.data;\r\n                    dispatch(setAuthUserData(data));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer\r\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport style from \"./Header.module.css\";\r\nimport logo1 from \"../../assets/images/logo_part_1.png\";\r\nimport logo2 from \"../../assets/images/logo_part_2.png\";\r\n\r\n//types:\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\n\r\n//functional component:\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n\treturn (\r\n\t\t<div className={style.header}>\r\n\t\t\t<NavLink to={\"/news\"} className={style.logoArea}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={logo1} alt=\"logoName1\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<img src={logo2} alt=\"logoName2\" />\r\n\t\t\t\t</div>\r\n\t\t\t</NavLink>\r\n\t\t\t<div className={style.loginBlock}>\r\n\t\t\t\t{props.isAuth ? (\r\n\t\t\t\t\t<div className={style.items}>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{/*<img src={                    //<-- no photo yet\r\n                                    props.photos.small !== null\r\n                                        ? props.photos.small\r\n                                        : defaultSmallUserPhoto //defaultAsset\r\n                                }/>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>{props.login} </div>\r\n\t\t\t\t\t\t<NavLink to={\"/login\"}>Logout</NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className={style.items}>\r\n\t\t\t\t\t\t<NavLink to={\"/login\"}>Login </NavLink>\r\n\t\t\t\t\t\t<NavLink to={\"/login\"}>Sign up </NavLink>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport {\r\n    Header\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {getAuthUserData, setAuthUserData} from \"../../redux/auth-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Header} from \"./Header\";\r\n\r\n/* import axios from \"axios\"; */\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void;\r\n\r\n    setAuthUserData: (data: any) => void //test\r\n}\r\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\r\n\tcomponentDidMount() {\r\n\t\tthis.props.getAuthUserData(); /*<-request*/\r\n\r\n\t\t/* axios\r\n\t\t\t.get(\"https://social-network.samuraijs.com/api/1.0/auth/me\", {\r\n\t\t\t\twithCredentials: true,\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.data.resultCode === 0) {\r\n\t\t\t\t\tdebugger;\r\n\t\t\t\t\tlet data = response.data.data;\r\n\t\t\t\t\tthis.props.setAuthUserData(data);\r\n\t\t\t\t}\r\n\t\t\t}); */\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<Header {...this.props} />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst HeaderContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType, {},\r\n    AppStateType>(mapStateToProps, {getAuthUserData,\r\n    setAuthUserData//test\r\n    })(HeaderClassContainer);\r\n\r\nexport {\r\n    HeaderContainer\r\n}","import {Dispatch} from \"redux\";\r\n\r\nimport {profileAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n}\r\nexport type ProfileInitialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfilePageType | null\r\n    status: string | null\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    aboutMe: string,\r\n    contacts: LinksType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: null | string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\ntype LinksType = {\r\n    facebook: null | string,\r\n    website: null | string,\r\n    vk: null | string,\r\n    twitter: null | string,\r\n    instagram: null | string,\r\n    youtube: null | string,\r\n    github: null | string,\r\n    mainLink: null | string\r\n}\r\nexport type PhotosType = { small: string, large: string }\r\n\r\nexport type ProfileActionType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setNewPostText>\r\n    | ReturnType<typeof addLike>\r\n    | ReturnType<typeof removeLike>\r\n    | ReturnType<typeof setProfile>\r\n    | ReturnType<typeof setStatus>\r\n\r\n\r\n//initialState:\r\nconst initialState: ProfileInitialStateType = {\r\n    posts: [\r\n        {\r\n            id: 21313,\r\n            message: \"testPost\",\r\n            likesCount: 1,\r\n            isLiked: false\r\n        }\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null,\r\n    status: null\r\n}\r\n\r\n//reducer:\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD_POST\": {\r\n            const stateCopy = {...state}\r\n            const newPost: PostType = {\r\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n                isLiked: false\r\n            };\r\n            stateCopy.posts = [newPost, ...state.posts];\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\r\n            const stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/ADD_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/REMOVE_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/SET_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case \"SN/PROFILE/SET_STATUS\":\r\n            return {...state, status: action.status}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addPost = (newPost: string) => {\r\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\r\n}\r\nexport const setNewPostText = (newText: string) => {\r\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\r\n}\r\nexport const addLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\r\n}\r\nexport const removeLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\r\n}\r\nexport const setProfile = (profile: ProfilePageType) => {\r\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {type: \"SN/PROFILE/SET_STATUS\", status} as const\r\n}\r\n\r\n\r\n//thunk creators:\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        profileAPI\r\n            .getProfile(userId)\r\n            .then(response => {\r\n                dispatch(setProfile(response.data));\r\n            });\r\n    }\r\n}\r\nexport const getUserStatus = (userId: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        profileAPI\r\n            .getUserStatus(userId) //+userId ??\r\n            .then(response => {\r\n                dispatch(setStatus(response.data));\r\n            });\r\n    }\r\n}\r\nexport const updateUserStatus = (status: string) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        profileAPI\r\n            .updateUserStatus(status)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(setStatus(status));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    profileReducer\r\n}","export default __webpack_public_path__ + \"static/media/defaultSmallUserPhoto.5364f1ba.png\";","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 15,\n  r: 9,\n  fillOpacity: 0.3\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 9,\n  to: 9,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"9;15;9\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 0.5,\n  to: 0.5,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \".5;1;.5\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 105,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nfunction SvgThreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 120,\n    height: 30,\n    viewBox: \"0 0 120 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.b98a8c76.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\n\r\nimport {ReactComponent as ReactLogo} from \"./three-dots.svg\";\r\n\r\n//types:\r\ntype PreloaderPropsType = {}\r\n\r\n//functional component:\r\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            {/*<h1>loading...</h1>*/}\r\n            <ReactLogo fill=\"#2b3f4f\" stroke=\"current\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Preloader\r\n}\r\n","import React from \"react\";\r\n\r\nimport styles from \"./ProfileInfo.module.css\"\r\n\r\n//types:\r\ntype ProfileStatusPropsType = {\r\n    status: string | null\r\n    updateStatus: (status: string) => void\r\n}\r\ntype LocalStateType = {\r\n    editMode: boolean\r\n    status: string | null\r\n}\r\n\r\n//class component:\r\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\r\n\r\n    //localState for status:\r\n    state: LocalStateType = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n\r\n    //on&off edit mode of status:\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false});\r\n        this.onUpdateStatus();\r\n    }\r\n    onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            this.deactivateEditMode();\r\n        }\r\n    }\r\n\r\n    //onchange localState of status:\r\n    onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        this.setState({status: e.currentTarget.value});\r\n    }\r\n\r\n    //update status callback  function from local state to global state:\r\n    onUpdateStatus = () => {\r\n        if (this.state.status){\r\n            this.props.updateStatus( this.state.status);\r\n        } else {\r\n            this.props.updateStatus( ''); //NEED TO FIX !!!!\r\n        }\r\n    }\r\n\r\n    //re-rendering of status's local state if its props have changed:\r\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: any) { //need to check types!!!\r\n        if (prevProps.status !== this.props.status){\r\n            this.setState({status: this.props.status});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    !this.state.editMode &&\r\n                        <div>\r\n                            <div className={styles.statusStaticMode} onDoubleClick={this.activateEditMode}>{\r\n                                this.props.status\r\n                                    ? this.props.status\r\n                                    : \"set status\"\r\n                            }</div>\r\n                        </div>\r\n                }\r\n\r\n                {\r\n                    this.state.editMode &&\r\n                        <div className={`${styles.statusEditMode}`}>\r\n                            <div>\r\n                                <input\r\n                                    autoFocus\r\n                                    /*onBlur={this.deactivateEditMode}*/\r\n                                    onKeyPress={this.onKeyPressHandler}\r\n                                    value={`${this.state.status}`}  //NEED TO FIX !!!!\r\n                                    onChange={this.onStatusChange}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <button\r\n                                onClick={this.deactivateEditMode}\r\n                                >save</button>\r\n                            </div>\r\n                        </div>\r\n                }\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport  {\r\n    ProfileStatus\r\n}","import React from \"react\";\r\n\r\nimport defaultSmallUserPhoto from \"../../../assets/images/defaultSmallUserPhoto.png\";\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport preloaderStyle from \"../../common/Preloader/Preloader.module.css\";\r\nimport {ProfileStatus} from \"./ProfileStatus\";\r\n\r\n//types:\r\ntype  ProfileInfoPropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string | null\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n//functional component:\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    const state = props.profile;\r\n\r\n    if (!state) {\r\n        return (\r\n            <>\r\n                <div className={preloaderStyle.main}>\r\n                    <Preloader/>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={\r\n                    state.photos.large !== null\r\n                        ? state.photos.large\r\n                        : defaultSmallUserPhoto //defaultAsset\r\n                }/>\r\n                <div className={styles.items}>\r\n                    <div><b>{state.fullName}</b></div>\r\n                    <ProfileStatus\r\n                        updateStatus={props.updateStatus}\r\n                        status={props.status}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ProfileInfo\r\n}","import {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\r\nimport {Post} from \"./Post\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (id: number, isLiked: boolean)=>{\r\n            dispatch(addLike(id, isLiked));\r\n        },\r\n        removeLike: (id: number, isLiked: boolean)=> {\r\n            dispatch(removeLike(id, isLiked));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\r\n\r\nexport {\r\n    PostContainer\r\n}","import React from \"react\";\r\n\r\nimport style from \"./Post.module.css\"\r\nimport defaultSmallUserPhoto from \"../../../../assets/images/defaultSmallUserPhoto.png\"\r\n\r\n//types:\r\ntype PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//functional component:\r\nconst Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <hr/>\r\n            <div className={style.post}>\r\n                <div className={style.items}>\r\n                    <div>\r\n                        {/*need to fix: */}\r\n                        <img src={defaultSmallUserPhoto} alt=\"defaultSmallUserPhoto\"/>\r\n                        {/* <img src={\r\n                        u.photos.small !== null\r\n                            ? u.photos.small\r\n                            : defaultSmallUserPhoto //defaultAsset\r\n                    } alt=\"defaultSmallUserPhoto\"/>*/}\r\n                    </div>\r\n                    <div className={style.postMessage}>\r\n                        <div><b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}</div>\r\n                        <div><div>{props.message}</div></div>\r\n                    </div>\r\n                </div>\r\n                <div className={style.reactions}>\r\n                    <div>\r\n                        {\r\n                            props.isLiked\r\n                                ? <button onClick={() => {\r\n                                    props.removeLike(props.id, props.isLiked);\r\n                                }}>Liked ♥{props.likesCount}</button>\r\n                                :\r\n                                <button onClick={() => {\r\n                                    props.addLike(props.id, props.isLiked);\r\n                                }}>Like ♡{props.likesCount}</button>\r\n                        }\r\n                    </div>\r\n                    <div> <button> Write comment</button> </div>\r\n                    <div> <button> Share</button> </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport {\r\n    Post\r\n}","import {connect} from \"react-redux\";\r\n\r\nimport {ContentArea} from \"./ContentArea\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ContentAreaContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\r\n    addPost,\r\n    setNewPostText\r\n})(ContentArea);\r\n\r\nexport {\r\n    ContentAreaContainer\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\nimport style from \"./ContentArea.module.css\"\r\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {PostContainer} from \"./Post/PostContainer\";\r\n\r\n//types:\r\ntype ContentAreaPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//functional component:\r\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\r\n\r\n    const state = props.profilePage; //state!!!\r\n\r\n    let postsElements = state.posts.map(p => <PostContainer\r\n        key={p.id}\r\n        message={p.message}\r\n        id={p.id}\r\n        likesCount={p.likesCount}\r\n        isLiked={p.isLiked}\r\n    />);\r\n\r\n    const addPostHandler = () => {\r\n        if (state.newPostText) {\r\n            props.addPost(state.newPostText);\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewPostText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addPostHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.postBlock}>\r\n            <div className={style.inputAreaElements}>\r\n                <div><textarea\r\n                    value={state.newPostText}\r\n                    maxLength={100000}\r\n                    onChange={onChangeHandler}\r\n                    placeholder={\"What's new?\"}\r\n                    onKeyPress={onKeyPressHandler}\r\n                /></div>\r\n                <div>\r\n                    <button onClick={addPostHandler}>Post</button>\r\n                </div>\r\n            </div>\r\n            <div className={style.posts}>\r\n                {\r\n                    postsElements\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ContentArea\r\n}","import React from \"react\";\r\n\r\nimport styles from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\r\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string | null\r\n    updateStatus: (status: string) => void\r\n}\r\n\r\n//functional component:\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n            />\r\n            <ContentAreaContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Profile\r\n}","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getUserProfile, getUserStatus, ProfilePageType, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {Profile} from \"./Profile\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profile: ProfilePageType | null\r\n    status: string | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n    getUserStatus: (userId: number) => void\r\n    updateUserStatus: (status: string) => void\r\n}\r\ntype  PathParamsType = {\r\n    userId: string //number or string (STRING!!!)\r\n}\r\ntype ProfileClassContainerPropsType = mapStateToPropsType\r\n    & mapDispatchToPropsType\r\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n    }\r\n}\r\n\r\n//class container component:\r\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n\r\n        //profile userId:\r\n        let userId: string = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = \"8091\"; // test value!!!!\r\n        }\r\n\r\n        //usersAPI.getProfile() & profileAPI.getUserStatus() requests, (\"+\" for to string):\r\n        this.props.getUserProfile(+userId);\r\n        this.props.getUserStatus(+userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile\r\n                    {...this.props}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateUserStatus}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ProfileContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\r\n        mapStateToProps, {\r\n            getUserProfile,\r\n            getUserStatus,\r\n            updateUserStatus,\r\n        }\r\n    ),\r\n    withRouter,\r\n)(ProfileClassContainer);\r\n\r\nexport {\r\n    ProfileContainer\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n//types:\r\ntype MusicPropsType = {}\r\n\r\n//functional component:\r\nconst Music: React.FC<MusicPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Music Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Music\r\n}","import { Dispatch } from \"redux\";\r\n\r\nimport {usersAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersInitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: any[]\r\n}\r\nexport type UsersActionType = | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\n//initialState:\r\nconst initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n//reducer:\r\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/USERS/FOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/UNFOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/SET_USERS\": {\r\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]} (declined)\r\n        }\r\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case \"SN/USERS/SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const follow = (id: number) => {\r\n    return {type: \"SN/USERS/FOLLOW\", id} as const\r\n}\r\nexport const unFollow = (id: number) => {\r\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: \"SN/USERS/SET_USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\r\n}\r\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\r\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        } );\r\n    }\r\n}\r\nexport const unFollowThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const followThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(follow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    usersReducer\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\r\nimport defaultSmallUserPhoto from \"../../assets/images/defaultSmallUserPhoto.png\"\r\nimport style from \"./Users.module.css\";\r\n\r\n\r\n//types:\r\ntype UsersPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: any[]\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (p: number) => void\r\n\r\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\r\n    followThunkCreator: (userId: number) => void //need rename to follow\r\n}\r\n\r\n//functional component:\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const state = props.usersPage;\r\n\r\n    //pages for pagination:\r\n    const pagesCount = Math.ceil(state.totalUsersCount / state.pageSize) //.ceil rounds a number up to the next largest integer\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <div className={style.items}>\r\n            {\r\n                state.users.map(u => <div key={u.id}>\r\n                    {/*<hr/>*/}\r\n                    <div className={style.profile}>\r\n\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={\r\n                                u.photos.small !== null\r\n                                    ? u.photos.small\r\n                                    : defaultSmallUserPhoto //defaultAsset\r\n                            } alt=\"defaultSmallUserPhoto\"/>\r\n                        </NavLink>\r\n\r\n                        <div className={style.info}>\r\n                            <NavLink to={'/profile/' + u.id}>\r\n                                <div className={style.name}>{u.name}</div>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className={style.buttonsArea}>\r\n                        <div>\r\n                            {\r\n                                u.followed\r\n                                    ? <button\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.unFollowThunkCreator(u.id);\r\n                                        }}\r\n                                    >unfollow</button>\r\n                                    : <button\r\n                                        disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                        onClick={() => {\r\n                                            props.followThunkCreator(u.id);\r\n                                        }}\r\n                                    >follow</button>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <NavLink to={'/dialogs/' + u.id}> {/*<- NavLink!!!!!!*/}\r\n                                <button>{\"Write message\"}</button>\r\n                            </NavLink>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                </div>)\r\n\r\n            }\r\n            <div>\r\n\r\n                {\r\n                    pages.map(p => <span  //pagination\r\n                        className={p === state.currentPage\r\n                            ? style.selectedPage\r\n                            : ''\r\n                        }\r\n                        onClick={() => props.onPageChanged(p)}\r\n                    >{p}</span>)\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Users\r\n}","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { AppStateType } from \"../redux/redux-store\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n  isAuth: boolean;\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n  return {\r\n    isAuth: state.auth.isAuth,\r\n  }\r\n}\r\n\r\n\r\n//container component:\r\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) { //possible to make arrow function?\r\n\r\n  const RedirectComponent = (props: mapStateToPropsType) => {\r\n\r\n    const {isAuth, ...restProps} = props\r\n    if (!isAuth) {\r\n      return <Redirect to={\"/Login\"}/>\r\n    }\r\n\r\n    return <Component {...(restProps as T)} />\r\n  }\r\n\r\n  return connect(mapStateToProps)(RedirectComponent)\r\n}\r\n\r\nexport {\r\n  WithAuthRedirect\r\n}\r\n","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport {\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollowThunkCreator,\r\n    UsersInitialStateType,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\"\r\nimport {Users} from \"./Users\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any[]\r\n}\r\ntype mapDispatchToPropsType = {\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void // need rename to getUsers\r\n    unFollowThunkCreator: (userId: number) => void //need rename to follow\r\n    followThunkCreator: (userId: number) => void //need rename to unFollow\r\n}\r\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n\r\n//class container component:\r\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        //usersAPI.getUsers() request:\r\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);\r\n    }\r\n\r\n    //onChanged function for pagination:\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n\r\n        //request for re-render next page of users:\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching\r\n                        ? <div className={preloaderStyle.main}><Preloader/></div>\r\n                        : <div>\r\n                            <Users\r\n                                {...this.props}\r\n                                onPageChanged={this.onPageChanged}\r\n                            />\r\n                        </div>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n\r\n//HOC:\r\nconst UsersContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\r\n        mapStateToProps, {\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            setIsFetching,\r\n            getUsersThunkCreator, // need rename to getUsers\r\n            unFollowThunkCreator, //need rename to unFollow\r\n            followThunkCreator,  //need rename to follow\r\n        }),\r\n    WithAuthRedirect,\r\n)(UsersClassContainer);\r\n\r\nexport {\r\n    UsersContainer\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype NewsPropsType = {}\r\n\r\n//functional component:\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            News Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    News\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport style from \"./Navbar.module.css\";\r\n\r\n//types:\r\ntype NavbarPropsType = {}\r\n\r\n//functional component:\r\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n        <div className={style.navbar}>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/Profile\"} activeClassName={style.active}>My profile</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/News\"} activeClassName={style.active}>News</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/Dialogs\"} activeClassName={style.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/Users\"} activeClassName={style.active}>Users</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/Music\"} activeClassName={style.active}>Music</NavLink>\r\n            </div>\r\n            <div className={style.item}>\r\n                <NavLink to={\"/Settings\"} activeClassName={style.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Navbar\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype LoginFormPropsType = {}\r\ntype LoginPagePropsType = {}\r\n\r\n//functional component:\r\nconst LoginForm: React.FC<LoginFormPropsType> = (props) => {\r\n    return(\r\n        <form>\r\n            <div>\r\n                <input placeholder={\"Login\"}/>\r\n            </div>\r\n            <div>\r\n                <input placeholder={\"Password\"}/>\r\n            </div>\r\n\r\n            <div>\r\n                <input type={\"checkbox\"}/> remember me\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\n//functional component:\r\nconst LoginPage: React.FC<LoginPagePropsType> = () => {\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    LoginPage\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype SettingsPropsType = {}\r\n\r\n//functional component:\r\nconst Settings: React.FC<SettingsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Settings Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Settings\r\n}","import {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsInitialStateType = {\r\n    dialogs: Array<DialogsDataType>,\r\n    messages: Array<MessagesDataType>,\r\n    newMessageText: string\r\n}\r\nexport type DialogsActionType = ReturnType<typeof addMessage>\r\n    | ReturnType<typeof setNewMessageText>\r\n\r\n//initialState:\r\nconst initialState: DialogsInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Sasha\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\n//reducer:\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\r\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\r\n        const stateCopy = {...state}\r\n        const newMessage: MessagesDataType = {\r\n            id: Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method\r\n            message: stateCopy.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages, newMessage];\r\n        stateCopy.newMessageText = \"\";\r\n        return stateCopy;\r\n\r\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\r\n        const stateCopy = {...state};\r\n        stateCopy.newMessageText = action.newText;\r\n        return stateCopy;\r\n\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addMessage = (newMessage: string) => {\r\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\r\n}\r\nexport const setNewMessageText = (newText: string) => {\r\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\r\n}\r\n\r\nexport {\r\n    dialogsReducer\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport style from \"../Dialogs.module.css\";\r\n\r\n//types:\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n//functional component:\r\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={style.dialog + '' + style.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DialogItem\r\n}","import React from \"react\";\r\n\r\nimport dialogStyle from \"../Dialogs.module.css\";\r\nimport messageStyle from \"./Message.module.css\";\r\nimport defaultAvatar from \"../../../assets/images/defaultSmallUserPhoto.png\"\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n//function component:\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n\r\n    <div className={dialogStyle.text}>\r\n        <div className={messageStyle.message}>\r\n            <img className={messageStyle.img} alt=\"userPhoto\" src={defaultAvatar}/>\r\n            <div className={messageStyle.content}>\r\n                <div className={messageStyle.name}>userName</div>\r\n                <div className={messageStyle.text}>{props.message}</div>\r\n                <div className={messageStyle.time}>time</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Message\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\nimport style from \"./Dialogs.module.css\"\r\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\n\r\n\r\n//types:\r\nexport type DialogsPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\n\r\n//functional component:\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage;\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    const addMessageHandler = () => {\r\n        if (state.newMessageText) {\r\n            props.addMessage(state.newMessageText.trim());\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewMessageText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addMessageHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={style.dialogsPage}>\r\n\r\n            <div className={style.dialogs}>\r\n                {\r\n                    dialogElements\r\n                }\r\n            </div>\r\n\r\n            <div className={style.messages}>\r\n                <div className={style.messageElements}>\r\n                    {\r\n                        messageElements\r\n                    }\r\n                </div>\r\n                <hr/>\r\n                <div className={style.inputAreaElements}>\r\n                    <AddMessageForm/>\r\n                    <div>\r\n                        <textarea\r\n                            value={state.newMessageText}\r\n                            maxLength={500}\r\n                            onChange={onChangeHandler}\r\n                            placeholder={\"Write something\"}\r\n                            onKeyPress={onKeyPressHandler}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <button onClick={addMessageHandler}>Send</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n//functional component:\r\nconst AddMessageForm: React.FC<{}> = (props) => {\r\n    return(\r\n        <form>\r\n            {/*<div>\r\n                        <textarea\r\n                            value={state.newMessageText}\r\n                            maxLength={500}\r\n                            onChange={onChangeHandler}\r\n                            placeholder={\"Write something\"}\r\n                            onKeyPress={onKeyPressHandler}\r\n                        />\r\n            </div>\r\n            <div>\r\n                <button onClick={addMessageHandler}>Send</button>\r\n            </div>*/}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialogs\r\n}\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    addMessage,\r\n    DialogsInitialStateType,\r\n    setNewMessageText\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport { Dialogs } from \"./Dialogs\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n\r\n    return {\r\n        dialogsPage: state.dialogPage,\r\n    }\r\n}\r\n\r\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\r\n\r\n    render(){\r\n        return(\r\n            <Dialogs {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst DialogsContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\r\n        mapStateToProps, {addMessage, setNewMessageText}),\r\n    WithAuthRedirect,\r\n)(DialogsClassContainer);\r\n\r\nexport {\r\n    DialogsContainer\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {LoginPage} from \"./components/Login/Login\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\r\n\r\n\r\n//types:\r\ntype PropsType = {}\r\n\r\n//functional component:\r\nconst App: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={\"app-wrapper-content\"}>\r\n                <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer />}/>\r\n                <Route path={\"/News\"} render={() => <News/>}/>\r\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\r\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\r\n                <Route path={\"/Music\"} render={() => <Music/>}/>\r\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\r\n                <Route path={\"/Login\"} render={() => <LoginPage/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    App\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\r\n\r\n//types:\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT\r\n\r\n//store & rootReducer:\r\nexport const rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport {\r\n    store\r\n}","import React from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\nimport {App} from \"./App\";\r\nimport {AppStateType, store} from \"./redux/redux-store\";\r\n\r\n\r\nconst reRenderEntireThree = (state: AppStateType) => {\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n        , document.getElementById('root')\r\n    );\r\n}\r\n\r\nreRenderEntireThree(store.getState());\r\nstore.subscribe(() => {\r\n    reRenderEntireThree(store.getState())\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}