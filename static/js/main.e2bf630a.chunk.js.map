{"version":3,"sources":["components/Profile/Profile.module.css","components/common/Pagination/Pagination.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.ts","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/common/FormControls/FormControls.tsx","utils/validator.ts","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/app-reducer.ts","components/common/Preloader/three-dots.svg","components/common/Preloader/Preloader.tsx","redux/profile-reducer.ts","assets/images/default_user_photo.png","components/Profile/ProfileInfo/ProfileStatusWithHoocks.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/Profile.tsx","selectors/profile-selectors.ts","components/Profile/ProfileClassContainer.tsx","redux/users-reducer.ts","components/common/Pagination/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","hoc/WithAuthRedirect.tsx","selectors/user-selectors.ts","components/Users/UsersClassContainer.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","selectors/dialogs-selectors.ts","components/Dialogs/DialogsContainer.tsx","selectors/app-selectors.ts","components/common/Error404/Error404.tsx","App.tsx","redux/redux-store.ts","index.tsx","components/Users/Users.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css","components/common/Preloader/Preloader.module.css","components/Profile/ContentArea/ContentArea.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","authAPI","email","password","rememberMe","initialState","id","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","a","resultCode","logoutUserThunk","Header","props","className","styles","header","to","logoArea","src","logo1","alt","logo2","loginBlock","items","onClick","HeaderClassContainer","this","React","Component","HeaderContainer","connect","state","auth","Music","News","Navbar","style","navbar","item","PATH","PROFILE","activeClassName","active","NEWS","DIALOGS","USERS","MUSIC","SETTINGS","FormControl","input","meta","formControlValue","isError","touched","error","FormElement","formControl","requiredField","value","maxLengthCreator","maxValue","length","LoginReduxForm","reduxForm","form","handleSubmit","useState","passView","setPassView","passVariation","loginForm","onSubmit","Field","field","placeholder","name","component","validate","pass","cla","ssName","iconPass","formStyles","formSummaryError","checkBox","loginButton","LoginPageContainer","loginUserThunk","messages","stopSubmit","_error","loginPage","formData","Settings","initialized","_extends","Object","assign","target","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","cx","cy","r","attributeName","from","begin","dur","values","calcMode","repeatCount","fillOpacity","_ref4","SvgThreeDots","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","fill","ref","ForwardRef","Preloader","main","stroke","posts","message","likesCount","isLiked","newPostText","profile","setStatus","ProfileStatusWithHooks","editMode","setEditMode","useEffect","deactivateEditMode","onUpdateStatus","updateStatus","statusStaticMode","onDoubleClick","statusDefault","statusEditMode","autoFocus","onKeyPress","e","onChange","currentTarget","ProfileInfo","descriptionBlock","photos","large","defaultSmallUserPhoto","fullName","PostContainer","profilePage","addLike","removeLike","postMessage","reactions","ContentArea","memo","addPost","postsElements","setNewPostText","map","p","postBlock","PostMessageReduxForm","maxLength3","inputAreaElements","ContentAreaContainer","newText","Profile","getProfileSL","getStatusSL","getIsAuthSL","getAuthUserIdSL","ProfileClassContainer","match","params","authUserId","history","push","getUserProfile","ProfileContainer","compose","withRouter","users","totalUsersCount","isFetching","followingInProgress","setUsers","setCurrentPage","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Pagination","onPageChanged","pagesCount","Math","ceil","pages","selectedPage","User","user","unFollowThunkCreator","followThunkCreator","small","info","buttonsArea","followed","disabled","some","Users","usersPage","u","mapStateToProps","WithAuthRedirect","restProps","getUsersSL","getPageSizeSL","getTotalUsersCountSL","getCurrentPageSL","getIsFetchingSL","getFollowingInProgressSL","UsersClassContainer","pageNumber","getUsersThunkCreator","preloaderStyle","UsersContainer","dialogs","time","newMessageText","DialogItem","dialog","Message","img","defaultAvatar","content","text","Dialogs","dialogsPage","addMessage","dialogElements","d","messageElements","m","AddMessageReduxForm","getDialogsSL","dialogPage","DialogsClassContainer","DialogsContainer","newMessage","getInitializedSL","app","Error404","LOGIN","App","initializeApp","isInitialized","exact","path","render","promise","Promise","all","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","toLocaleString","newPost","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2bf630a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1LESU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Pagination_selectedPage__3hHKS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__27a1U\",\"item\":\"Navbar_item__2Sz7A\",\"active\":\"Navbar_active__3wMdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__2QSa1\",\"loginForm\":\"Login_loginForm__3_yRp\",\"field\":\"Login_field__1npoC\",\"pass\":\"Login_pass__2LVaL\",\"iconPass\":\"Login_iconPass__2mybm\",\"items\":\"Login_items__XJym6\",\"checkBox\":\"Login_checkBox__-IgJh\",\"loginButton\":\"Login_loginButton__34rpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1o5hr\",\"items\":\"ProfileInfo_items__Tow0c\",\"name\":\"ProfileInfo_name__3_29G\",\"statusStaticMode\":\"ProfileInfo_statusStaticMode__1JGsp\",\"statusEditMode\":\"ProfileInfo_statusEditMode__2KjhT\",\"statusDefault\":\"ProfileInfo_statusDefault__tIH07\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__30RqF\",\"dialogs\":\"Dialogs_dialogs__hPjJa\",\"dialog\":\"Dialogs_dialog__3R01s\",\"messages\":\"Dialogs_messages__2b5iv\",\"messageElements\":\"Dialogs_messageElements__BpFaC\",\"inputAreaElements\":\"Dialogs_inputAreaElements__1GU_0\",\"message\":\"Dialogs_message__2JtN6\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\theaders: {\n\t\t\"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\",\n\t},\n});\n\nexport const usersAPI = {\n\tgetUsers(currentPage: number, pageSize: number) {\n\t\treturn instance\n\t\t\t.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.data;\n\t\t\t});\n\t},\n\n\tfollow(userId: number) {\n\t\treturn instance.post(`follow/${userId}`);\n\t},\n\tunFollow(userId: number) {\n\t\treturn instance.delete(`follow/${userId}`);\n\t},\n\tgetProfile(userId: number) {\n\t\tconsole.warn('Obsolete method. Please use profileAPI object');\n\t\treturn profileAPI.getProfile(userId);\n\t},\n};\n\nexport const profileAPI = {\n\tgetProfile(userId: number) {\n\t\treturn instance.get(`profile/${userId}`);\n\t},\n\tgetUserStatus(userId: number) {\n\t\treturn instance.get(`/profile/status/${userId}`);\n\t},\n\tupdateUserStatus(status: string) {\n\t\treturn instance.put(`/profile/status`, {status});\n\t},\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance.get(`auth/me`);\n\t},\n\tlogin(email: string, password: string, rememberMe: boolean = false) {\n\t\treturn instance.post(`/auth/login`, {email, password, rememberMe});\n\t},\n\tlogout() {\n\t\treturn instance.delete(`/auth/login`);\n\t},\n};\n","import {Dispatch} from \"redux\";\n\nimport {authAPI} from \"../api/api\";\nimport {AppActionType, AppThunkType} from \"./redux-store\";\nimport {stopSubmit} from \"redux-form\";\n\n//types:\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\n\nexport type AuthInitialStateType = {\n    id: null | number\n    email: null | string\n    login: null | string\n    isAuth: boolean\n}\n\n//initialState:\nconst initialState: AuthInitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\n//reducer:\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\n    switch (action.type) {\n        case \"SN/AUTH/SET_AUTH_USER_DATA\": {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\n    return {type: \"SN/AUTH/SET_AUTH_USER_DATA\", payload: {id, email, login, isAuth} } as const\n}\n\n//thunk creators:\n/*export const getAuthUserData = (): AppThunk => {\n    return (dispatch: Dispatch<authReducerAT>) => {\n        return authAPI\n            .me()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, email, login} = response.data.data; //payload = id, email, login, isAuth\n                    dispatch(setAuthUserData(id, email, login,  true));\n                }\n            });\n    }\n}*/\nexport const getAuthUserData = (): AppThunkType => {\n    return async (dispatch: Dispatch<authReducerAT>) => {\n        const response = await authAPI.me();\n        if (response.data.resultCode === 0) {\n            let {id, email, login} = response.data.data; //payload = id, email, login, isAuth\n            dispatch(setAuthUserData(id, email, login, true));\n        }\n    }\n}\n\n/*export const loginUserThunk = (email: string, password: string, rememberMe: boolean) : AppThunk => {\n    return (dispatch) => {\n        authAPI\n            .login(email, password, rememberMe)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(getAuthUserData());\n                } else {\n                    let messages = response.data.messages.length > 0 ? response.data.messages : \"Some error\"\n                    //@ts-ignore\n                    dispatch(stopSubmit(\"login\",{_error: messages})); //TYPES !!!\n                }\n            });\n    }\n}*/\nexport const loginUserThunk = (email: string, password: string, rememberMe: boolean): AppThunkType => {\n    return async (dispatch) => {\n        let response = await authAPI.login(email, password, rememberMe)\n        if (response.data.resultCode === 0) {\n            dispatch(getAuthUserData());\n        } else {\n            let messages = response.data.messages.length > 0 ? response.data.messages : \"Some error\"\n            //@ts-ignore\n            dispatch(stopSubmit(\"login\", {_error: messages})); //TYPES !!!\n        }\n    }\n}\n\n/*export const logoutUserThunk = (): AppThunk => {\n    return (dispatch) => {\n        authAPI\n            .logout()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthUserData(null, null, null, false));\n                }\n            });\n    }\n}*/\nexport const logoutUserThunk = (): AppThunkType => {\n    return async (dispatch) => {\n        const response = await authAPI.logout();\n        if (response.data.resultCode === 0) {\n            dispatch(setAuthUserData(null, null, null, false));\n        }\n    }\n}\n\nexport {\n    authReducer\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from \"./Header.module.css\";\nimport logo1 from \"../../assets/images/logo_part_1.png\";\nimport logo2 from \"../../assets/images/logo_part_2.png\";\n\n//types:\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: null | string\n    logoutUserThunk: () => void\n}\n\n//functional component:\nconst Header: React.FC<HeaderPropsType> = (props) => {\n\n    const {\n        isAuth,\n        login,\n        logoutUserThunk,\n    } = props;\n\n    //logout request:\n    const logout = () => {\n        logoutUserThunk();\n    }\n\n    return (\n        <div className={styles.header}>\n\n            <NavLink to={\"/news\"} className={styles.logoArea}>\n                <div>\n                    <img src={logo1} alt=\"logoPart1\"/>\n                </div>\n                <div>\n                    <img src={logo2} alt=\"logoPart2\"/>\n                </div>\n            </NavLink>\n            <div className={styles.loginBlock}>\n                {\n                    isAuth\n                        ? <div className={styles.items}>\n                            <div>\n                                {/*<img src={                    //<-- no photo yet\n                                    props.photos.small !== null\n                                        ? props.photos.small\n                                        : defaultSmallUserPhoto //defaultAsset\n                                }/>*/}\n                            </div>\n                            <div>{login} </div>\n                            <NavLink to={\"/login\"} onClick={logout}>Logout</NavLink>\n                        </div>\n                        : <div className={styles.items}>\n                            <NavLink to={\"/login\"}>Login </NavLink>\n                            <NavLink to={\"/login\"}>Sign up </NavLink>\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Header\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport { logoutUserThunk, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Header} from \"./Header\";\n\n//types:\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: null | string\n}\ntype mapDispatchToPropsType = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => void\n    logoutUserThunk: () => void\n}\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\n\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\n\trender() {\n\t\treturn <Header {...this.props} />\n\t}\n}\n\n//HOC:\nconst HeaderContainer = connect<mapStateToPropsType,\n    mapDispatchToPropsType, {},\n    AppStateType>(mapStateToProps, {\n        setAuthUserData,\n        logoutUserThunk,\n    })(HeaderClassContainer);\n\nexport {\n    HeaderContainer\n}","import React from \"react\";\n\n//types:\ntype MusicPropsType = {}\n\n//functional component:\nconst Music: React.FC<MusicPropsType> = (props) => {\n    return (\n        <div>\n            Music Page's Content\n        </div>\n    )\n}\n\nexport {\n    Music\n}","import React from \"react\";\n\n//types:\ntype NewsPropsType = {}\n\n//functional component:\nconst News: React.FC<NewsPropsType> = (props) => {\n    return (\n        <div>\n            News Page's Content\n        </div>\n    )\n}\n\nexport {\n    News\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport style from \"./Navbar.module.css\";\nimport {PATH} from \"../../App\";\n\n//types:\ntype NavbarPropsType = {}\n\n//functional component:\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\n    return (\n        <div className={style.navbar}>\n            <div className={style.item}>\n                <NavLink to={PATH.PROFILE} activeClassName={style.active}>My profile</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={PATH.NEWS} activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={PATH.DIALOGS} activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={PATH.USERS} activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={PATH.MUSIC} activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={PATH.SETTINGS} activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Navbar\n}","import React from \"react\";\r\n\r\nimport styles from \"./FormControls.module.css\"\r\n\r\n//types:\r\ntype FormControlType = { input: any, meta: any, formControlValue: string} //need to fix any fnd check types!!! (meta has: touched, error...)\r\n\r\n//functional component:\r\nconst  FormControl: React.FC<FormControlType> = ({input, meta, ...props}) => {\r\n\r\n    const {\r\n        formControlValue,\r\n    } = props;\r\n\r\n    //if field is touched activate error\r\n    const isError = meta.touched && meta.error;\r\n    const FormElement = formControlValue;\r\n\r\n    return (\r\n        <div className={ isError && `${styles.formControl} ${styles.error}`}>\r\n            <div>\r\n                <FormElement {...input} {...props}/>\r\n            </div>\r\n            {isError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    FormControl\r\n}","//checking that а field are not empty:\r\nexport const requiredField = (value: any) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n//checking that а field has not much length than required:\r\nexport const maxLengthCreator = (maxValue: any) => {\r\n    return function (value: any) {\r\n        if (value && value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React, {useState} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {ThunkAction} from \"redux-thunk\";\n\nimport styles from \"./Login.module.css\"\nimport {authReducerAT, loginUserThunk, logoutUserThunk} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {FormControl} from \"../common/FormControls/FormControls\";\nimport {requiredField} from \"../../utils/validator\";\nimport formStyles from \"./../common/FormControls/FormControls.module.css\"\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype passType = 'password' | 'text'\ntype LoginPagePropsType = any //need to fix any\ntype LoginFormPropsType = any //need to fix any\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\ntype mapDispatchToPropsType = {\n    loginUserThunk: (\n        email: string,\n        password: string,\n        rememberMe: boolean\n    ) => ThunkAction<void, AppStateType, unknown, authReducerAT>\n    logoutUserThunk:  () => ThunkAction<void, AppStateType, unknown, authReducerAT>\n}\nexport type LoginPropertiesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    /*captcha: boolean*/\n}\n\n//functional component:\nconst LoginForm: React.FC<LoginFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n        error,\n    } = props;\n\n    //local state for password view type:\n    const [passView, setPassView] = useState<boolean>(false);\n    //style for password view:\n    const passVariation: passType = passView ?  'text' :  'password';\n\n    //change password view type handler function:\n    const showPasswordHandler = () => {\n        if (passView) {\n            setPassView(false);\n        } else {\n            setPassView(true);\n        }\n    }\n\n    return (\n        <div className={styles.loginForm}>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Field\n                        className={styles.field}\n                        placeholder={\"email\"}\n                        name={\"email\"}\n                        component={FormControl}\n                        formControlValue={\"input\"}\n                        validate={[requiredField]}\n                    />\n                </div>\n                <div className={styles.pass}>\n                    <Field\n                        cla ssName={styles.field}\n                        placeholder={\"Password\"}\n                        name={\"password\"}\n                        component={FormControl}\n                        formControlValue={\"input\"}\n                        validate={[requiredField]}\n                        type={passVariation}\n                    />\n                    <div className={styles.iconPass} onClick={showPasswordHandler}>👁</div>\n                </div>\n                <div>\n                    {\n                        error && <div className={formStyles.formSummaryError}>{error}</div> //not working !!!\n                    }\n                </div>\n                <div className={styles.items}>\n                    <div className={styles.checkBox}>\n                        <Field\n                            className={\"field\"}\n                            type={\"checkbox\"}\n                            name={\"rememberMe\"}\n                            component={\"input\"}\n                        /> remember me\n                    </div>\n                    <div className={styles.loginButton}>\n                        <button>Login</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n//reduxForm HOC:\nconst LoginReduxForm = reduxForm<confPropsType,any>({form: \"login\"})(LoginForm); //need to check types & fix any !!!\n\n//mapStateToProps & functional component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst LoginPage: React.FC<LoginPagePropsType> = (props) => {\n\n    const {\n        loginUserThunk,\n        isAuth,\n    } = props;\n\n    //login onClickHandler:\n    const onSubmit = (formData: LoginPropertiesType) => {\n        loginUserThunk(formData.email, formData.password, formData.rememberMe);\n    }\n\n    //redirect users to profile page after login:\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={styles.loginPage}>\n            <h1>Samurai Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\n//HOC:\nconst LoginPageContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps, {\n        loginUserThunk,\n        logoutUserThunk,\n    }\n)(LoginPage);\n\n\nexport {\n    LoginPageContainer\n}","import React from \"react\";\n\n//types:\ntype SettingsPropsType = {}\n\n//functional component:\nconst Settings: React.FC<SettingsPropsType> = (props) => {\n    return (\n        <div>\n            Settings Page's Content\n        </div>\n    )\n}\n\nexport {\n    Settings\n}","import {Dispatch} from \"redux\";\r\n\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {AppActionType, AppThunkType} from \"./redux-store\";\r\n\r\n//types:\r\ntype initialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppReducerActionType = any//ReturnType<typeof initialisedSuccess> //NEED TO FIX!!!\r\n\r\n\r\n//initialState:\r\nconst initialState: initialStateType = {\r\n    initialized: false\r\n}\r\n\r\n//reducer:\r\nconst appReducer = (state: initialStateType = initialState, action: AppActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/APP/INITIALISED_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const initializedSuccess = () => {\r\n    return {type: \"SN/APP/INITIALISED_SUCCESS\"} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const initializeApp = (): AppThunkType => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        let promise = dispatch(getAuthUserData());\r\n\r\n        Promise\r\n            .all([promise]) //Array - if we need more dispatches in future\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    appReducer\r\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 15,\n  r: 9,\n  fillOpacity: 0.3\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 9,\n  to: 9,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"9;15;9\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 0.5,\n  to: 0.5,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \".5;1;.5\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 105,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nfunction SvgThreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 120,\n    height: 30,\n    viewBox: \"0 0 120 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.b98a8c76.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport {ReactComponent as PreloaderLogo} from \"./three-dots.svg\";\nimport styles from \"./Preloader.module.css\";\n\n//types:\ntype PreloaderPropsType = {}\n\n//functional component:\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\n\n    //loading:\n    return (\n        <div className={styles.main}>\n            <PreloaderLogo fill=\"#2b3f4f\" stroke=\"current\"/>\n        </div>\n    )\n}\n\nexport {\n    Preloader\n}\n","import {Dispatch} from \"redux\";\n\nimport {profileAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype PostType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n}\nexport type ProfileInitialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: ProfilePageType | null\n    status: string | null\n}\n\nexport type ProfilePageType = {\n    aboutMe: string,\n    contacts: LinksType,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: null | string,\n    fullName: string,\n    userId: number,\n    photos: PhotosType\n}\ntype LinksType = {\n    facebook: null | string,\n    website: null | string,\n    vk: null | string,\n    twitter: null | string,\n    instagram: null | string,\n    youtube: null | string,\n    github: null | string,\n    mainLink: null | string\n}\nexport type PhotosType = { small: string, large: string }\n\nexport type ProfileActionType = ReturnType<typeof addPost>\n    | ReturnType<typeof setNewPostText>\n    | ReturnType<typeof addLike>\n    | ReturnType<typeof removeLike>\n    | ReturnType<typeof setProfile>\n    | ReturnType<typeof setStatus>\n    | ReturnType<typeof deletePost>\n\n\n//initialState:\nconst initialState: ProfileInitialStateType = {\n    posts: [\n        {\n            id: 21313,\n            message: \"testPost\",\n            likesCount: 1,\n            isLiked: false,\n        }\n    ],\n    newPostText: \"\",\n    profile: null,\n    status: \"\",\n}\n\n//reducer:\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\n\n    switch (action.type) {\n        case \"SN/PROFILE/ADD_POST\": {\n            const stateCopy = {...state}\n            const newPost: PostType = {\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\n                message: action.newPostText,\n                likesCount: 0,\n                isLiked: false\n            };\n            stateCopy.posts = [newPost, ...state.posts];\n\n            return stateCopy;\n        }\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\n            const stateCopy = {...state};\n            stateCopy.newPostText = action.newText;\n            return stateCopy;\n        }\n        case \"SN/PROFILE/ADD_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/REMOVE_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/SET_PROFILE\": {\n            return {...state, profile: action.profile}\n        }\n        case \"SN/PROFILE/SET_STATUS\": {\n            return {...state, status: action.status}\n        }\n        case \"SN/PROFILE/DELETE_POST\": {\n            const stateCopy = {\n                ...state,\n                posts: state.posts.filter(p=> p.id !== action.id)\n            }\n            return stateCopy;\n              }\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const addPost = (newPostText: string) => {\n    return {type: \"SN/PROFILE/ADD_POST\", newPostText} as const\n}\nexport const setNewPostText = (newText: string) => {\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\n}\nexport const addLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\n}\nexport const removeLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\n}\nexport const setProfile = (profile: ProfilePageType) => {\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\n}\nexport const setStatus = (status: string) => {\n    return {type: \"SN/PROFILE/SET_STATUS\", status} as const\n}\nexport const deletePost = (id: number) => {\n    return {type: \"SN/PROFILE/DELETE_POST\", id} as const\n}\n\n\n//thunk creators:\n/*export const getUserProfile = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getProfile(userId)\n            .then(response => {\n                dispatch(setProfile(response.data));\n            });\n    }\n}*/\nexport const getUserProfile = (userId: number) => {\n    return async (dispatch: Dispatch<AppActionType>) => {\n        const response = await profileAPI.getProfile(userId);\n        dispatch(setProfile(response.data));\n    }\n}\n\n/*export const getUserStatus = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getUserStatus(userId) //+userId ??\n            .then(response => {\n                dispatch(setStatus(response.data));\n            });\n    }\n}*/\nexport const getUserStatus = (userId: number) => {\n    return async (dispatch: Dispatch<AppActionType>) => {\n        const response = await profileAPI.getUserStatus(userId); //+userId ??\n        dispatch(setStatus(response.data));\n    }\n}\n\n/*export const updateUserStatus = (status: string) =>  {\n    return (dispatch: Dispatch<AppActionType>) =>  {\n        profileAPI\n            .updateUserStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0){\n                    dispatch(setStatus(status));\n                }\n            });\n    }\n}*/\nexport const updateUserStatus = (status: string) => {\n    return async (dispatch: Dispatch<AppActionType>) => {\n        const response = await profileAPI.updateUserStatus(status);\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status));\n        }\n    }\n}\n\nexport {\n    profileReducer\n}","export default __webpack_public_path__ + \"static/media/default_user_photo.5364f1ba.png\";","import React, {useEffect, useState} from \"react\";\n\nimport styles from \"./ProfileInfo.module.css\"\n\n//types:\ntype ProfileStatusPropsType = {\n    status: string | null\n    updateStatus: (status: string) => void\n}\ntype LocalStateType = {\n    editMode: boolean\n    status: string | null\n}\n\n//class component:\nconst ProfileStatusWithHooks: React.FC<ProfileStatusPropsType> = (props) => {\n\n    //localState for status:\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const [status, setStatus] = useState<string | null>(props.status);\n\n    //re-rendering of status's local state if its props have changed\n    useEffect(()=>{\n        setStatus(props.status);\n    },[props.status])\n\n    //on&off edit mode of status:\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        onUpdateStatus();\n    }\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            deactivateEditMode();\n        }\n    }\n\n    //onchange localState of status:\n    const onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    //update status callback  function from local state to global state:\n    const onUpdateStatus = () => {\n        if (status) {\n            props.updateStatus(status);\n        } else {\n            props.updateStatus('');\n        }\n    }\n\n    /*//re-rendering of status's local state if its props have changed:\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: any) { //need to check types!!!\n        if (prevProps.status !== this.props.status){\n            this.setState({status: this.props.status});\n        }\n    }*/\n\n    return (\n        <>\n            {\n                !editMode &&\n                <div>\n                    <div className={styles.statusStaticMode} onDoubleClick={activateEditMode}>{\n                        props.status\n                            ? props.status\n                            : <div className={`${styles.statusStaticMode} ${styles.statusDefault}`}>{\"set status\"}</div>\n                    }</div>\n                </div>\n            }\n\n            {\n                editMode &&\n                <div className={`${styles.statusEditMode}`}>\n                    <div>\n                        <input\n                            autoFocus\n                            /*onBlur={this.deactivateEditMode}*/\n                            onKeyPress={onKeyPressHandler}\n                            value={`${status}`}\n                            onChange={onStatusChange}\n                        />\n                    </div>\n                    <div>\n                        <button\n                            onClick={deactivateEditMode}\n                        >save\n                        </button>\n                    </div>\n                </div>\n            }\n\n        </>\n    )\n\n}\n\nexport {\n    ProfileStatusWithHooks\n}","import React from \"react\";\n\nimport defaultSmallUserPhoto from \"../../../assets/images/default_user_photo.png\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\nimport styles from \"./ProfileInfo.module.css\";\nimport {ProfileStatus} from \"./ProfileStatus\";\nimport { ProfileStatusWithHooks } from \"./ProfileStatusWithHoocks\";\n\n//types:\ntype  ProfileInfoPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n}\n\n//functional component:\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n    } = props;\n\n    //user would see preloader while response has not confirmed: // added to profileContainer\n    if (!profile) {\n        return (\n            <div>\n                <Preloader/>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <div className={styles.descriptionBlock}>\n\n                <img src={\n                    profile?.photos.large !== null\n                        ? profile?.photos.large\n                        : defaultSmallUserPhoto //defaultAsset\n                } alt={\"smallUserPhoto\"}/>\n\n                <div className={styles.items}>\n                    <div className={styles.name}>\n                        <b>{profile?.fullName}</b>\n                    </div>\n                    <ProfileStatusWithHooks\n                        updateStatus={updateStatus}\n                        status={status}\n                    />\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    ProfileInfo\n}","import {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {AppStateType} from \"../../../../redux/redux-store\";\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\nimport {Post} from \"./Post\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addLike: (id: number, isLiked: boolean)=>{\n            dispatch(addLike(id, isLiked));\n        },\n        removeLike: (id: number, isLiked: boolean)=> {\n            dispatch(removeLike(id, isLiked));\n        }\n    }\n}\n\n//HOC:\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\n\nexport {\n    PostContainer\n}","import React from \"react\";\n\nimport style from \"./Post.module.css\"\nimport defaultSmallUserPhoto from \"../../../../assets/images/default_user_photo.png\"\n\n//types:\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//functional component:\nconst Post: React.FC<PostPropsType> = (props) => {\n\n    return (\n        <>\n            <hr/>\n            <div className={style.post}>\n                <div className={style.items}>\n                    <div>\n                        {/*need to fix: */}\n                        <img src={defaultSmallUserPhoto} alt=\"defaultSmallUserPhoto\"/>\n                        {/* <img src={\n                        u.photos.small !== null\n                            ? u.photos.small\n                            : defaultSmallUserPhoto //defaultAsset\n                    } alt=\"defaultSmallUserPhoto\"/>*/}\n                    </div>\n                    <div className={style.postMessage}>\n                        <div className={style.name}>\n                            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\n                        </div>\n                        <div className={style.message}>\n                            <div>{props.message}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.reactions}>\n                    <div>\n                        {\n                            props.isLiked\n                                ? <button onClick={() => {\n                                    props.removeLike(props.id, props.isLiked);\n                                }}>Liked ♥{props.likesCount}</button>\n                                :\n                                <button onClick={() => {\n                                    props.addLike(props.id, props.isLiked);\n                                }}>Like ♡{props.likesCount}</button>\n                        }\n                    </div>\n                    <div> <button> Write comment</button> </div>\n                    <div> <button> Share</button> </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport {\n    Post\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./ContentArea.module.css\"\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\nimport {PostContainer} from \"./Post/PostContainer\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validator\";\nimport {FormControl} from \"../../common/FormControls/FormControls\";\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype PostMessageFormType = any //need to fix any!!!\ntype ContentAreaPropsType = {\n    profilePage: ProfileInitialStateType\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//functional component:\nconst ContentArea: React.FC<ContentAreaPropsType> = React.memo((props) => {\n\n    /*shouldComponentUpdate(nextProps: Readonly<ContentAreaPropsType>, nextState: Readonly<{}>): boolean {\n        return nextProps !== this.props || nextState !== this.state\n    }*/\n\n    const {\n        profilePage,\n        addPost,\n        setNewPostText, //need to delete\n    } = props;\n\n    let postsElements = profilePage.posts.map(p =>\n        <PostContainer\n            key={p.id}\n            message={p.message}\n            id={p.id}\n            likesCount={p.likesCount}\n            isLiked={p.isLiked}\n        />\n    )\n\n    const addPostHandler = (value: any) => { //need to fix any!!!\n        if (value.newPostText) {\n            addPost(value.newPostText);\n        }\n    }\n\n    return (\n        <div className={styles.postBlock}>\n            <PostMessageReduxForm onSubmit={addPostHandler}/>\n            <div className={styles.posts}>\n                {\n                    postsElements\n                }\n            </div>\n        </div>\n    );\n})\n\nconst maxLength3 = maxLengthCreator(3);//test value!!!\n\nconst PostMessageForm: React.FC<PostMessageFormType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.inputAreaElements}>\n            <div>\n                <Field\n                    placeholder={\"What's new?\"}\n                    name={\"newPostText\"}\n                    component={FormControl}\n                    formControlValue={\"textarea\"}\n                    validate={[requiredField, maxLength3]}\n                />\n            </div>\n            <div>\n                <button>Post</button>\n            </div>\n        </form>\n    );\n}\n\n//reduxForm HOC:\nconst PostMessageReduxForm = reduxForm<confPropsType, any>({form: 'postMessageReduxForm'})(PostMessageForm); //need to check types!!!\n\nexport {\n    ContentArea\n}","import {connect} from \"react-redux\";\n\nimport {ContentArea} from \"./ContentArea\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\n//HOC:\nconst ContentAreaContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost,\n    setNewPostText\n})(ContentArea);\n\nexport {\n    ContentAreaContainer\n}","import React from \"react\";\n\nimport styles from \"./Profile.module.css\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n//types:\ntype ProfilePropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n    isAuth: boolean\n}\n\n//functional component:\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n        isAuth,\n    } = props;\n\n    //redirect users to loginPage after logout:\n    if (!isAuth){\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n            <ContentAreaContainer/>\n        </div>\n    )\n}\n\nexport {\n    Profile\n}","import {AppStateType} from \"../redux/redux-store\";\r\n\r\nexport const getProfileSL = (state: AppStateType) => {\r\n    return state.profilePage.profile\r\n}\r\nexport const getStatusSL = (state: AppStateType) => {\r\n    return  state.profilePage.status\r\n}\r\n\r\nexport const getIsAuthSL = (state: AppStateType) => {\r\n    return state.auth.isAuth\r\n}\r\n\r\nexport const getAuthUserIdSL = (state: AppStateType) => {\r\n    return state.auth.id\r\n}\r\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, getUserStatus, ProfilePageType, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {Profile} from \"./Profile\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport {getAuthUserIdSL, getIsAuthSL, getProfileSL, getStatusSL} from \"../../selectors/profile-selectors\";\n\n//types:\ntype mapStateToPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    isAuth: boolean\n    authUserId: number | null  // number or string ???\n}\ntype mapDispatchToPropsType = {\n    getUserProfile: (userId: number) => void\n    getUserStatus: (userId: number) => void\n    updateUserStatus: (status: string) => void\n}\ntype  PathParamsType = {\n    userId: string //need string\n}\ntype ProfileClassContainerPropsType = mapStateToPropsType\n    & mapDispatchToPropsType\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profile: getProfileSL(state),\n        status: getStatusSL(state),\n        isAuth: getIsAuthSL(state),\n        authUserId: getAuthUserIdSL(state),\n    }\n}\n\n//class container component:\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\n\n    componentDidMount() {\n        //profile userId:\n        let userId: string = this.props.match.params.userId;\n\n        if (!userId) {\n            userId = `${this.props.authUserId}`\n            if(!userId){\n                this.props.history.push('/login'); //test method?!\n            }\n        }\n        if (userId) {\n            //usersAPI.getProfile() & profileAPI.getUserStatus() responses, (\"+\" symbol for to string):\n            this.props.getUserProfile(+userId);\n            this.props.getUserStatus(+userId);\n        }\n    }\n\n    render() {\n        return <>\n            {\n                this.props.profile\n                    ? <Profile\n                        {...this.props}\n                        profile={this.props.profile}\n                        status={this.props.status}\n                        updateStatus={this.props.updateUserStatus}\n                    />\n                    //user would see preloader while response has not confirmed:\n                    : <Preloader/> //need to delete this from profileInfo?\n            }\n        </>\n    }\n}\n\n//HOC:\nconst ProfileContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            getUserProfile,\n            getUserStatus,\n            updateUserStatus,\n        }\n    ),\n    withRouter,\n)(ProfileClassContainer);\n\nexport {\n    ProfileContainer\n}\n\n","import { Dispatch } from \"redux\";\n\nimport {usersAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype LocationType = {\n    country: string\n    city: string\n}\ntype PhotosType = {\n    small: string\n    large: string\n}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    photos: PhotosType\n    name: string\n    status: string\n    location: LocationType\n}\nexport type UsersInitialStateType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: any[]\n}\nexport type UsersActionType = | ReturnType<typeof follow>\n    | ReturnType<typeof unFollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setFollowingProgress>\n\n//initialState:\nconst initialState: UsersInitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 19,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\n//reducer:\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\n    switch (action.type) {\n        case \"SN/USERS/FOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/UNFOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/SET_USERS\": {\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]} (declined)\n        }\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\n            return {...state, currentPage: action.currentPage}\n        }\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case \"SN/USERS/SET_IS_FETCHING\": {\n            return {...state, isFetching: action.isFetching}\n        }\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\n            return {...state, followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.id]\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n//action creators:\nexport const follow = (id: number) => {\n    return {type: \"SN/USERS/FOLLOW\", id} as const\n}\nexport const unFollow = (id: number) => {\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\n}\nexport const setUsers = (users: Array<UsersType>) => {\n    return {type: \"SN/USERS/SET_USERS\", users} as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\n}\nexport const setIsFetching = (isFetching: boolean) => {\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\n}\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\n}\n\n//thunk creators:\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setIsFetching(true));\n        dispatch(setCurrentPage(currentPage)); //????!!!!\n\n        usersAPI\n            .getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(setIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n            });\n    }\n}\nexport const unFollowThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\nexport const followThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(follow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\n\nexport {\n    usersReducer\n}","import React from \"react\";\n\nimport style from \"./Pagination.module.css\";\n\n//types:\ntype PaginationPropsType = {\n    currentPage: number\n    onPageChanged: (p: number) => void\n    totalUsersCount: number\n    pageSize: number\n}\n\n//functional component:\nconst Pagination: React.FC<PaginationPropsType> = (props) => {\n\n    const {\n        pageSize,\n        totalUsersCount,\n        currentPage,\n        onPageChanged,\n    } = props;\n\n    //pages for pagination:\n    const pagesCount = Math.ceil(totalUsersCount / pageSize); //.ceil rounds a number up to the next largest integer\n    const pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return <div>\n        {pages.map(p => <span\n            className={\n                p === currentPage\n                    ? style.selectedPage\n                    : ''\n            }\n            onClick={() =>\n                onPageChanged(p)\n            }>{p}</span>\n        )}\n    </div>\n}\n\nexport {\n    Pagination\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport defaultSmallUserPhoto from \"../../assets/images/default_user_photo.png\"\nimport style from \"./Users.module.css\";\n\n//types:\ntype UsersPropsType = {\n    user: any\n    followingInProgress: any[]\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\n    followThunkCreator: (userId: number) => void //need rename to follow\n}\n\n//functional component:\nconst User: React.FC<UsersPropsType> = (props) => {\n\n    const {\n        user,\n        followingInProgress,\n        unFollowThunkCreator,\n        followThunkCreator,\n    } = props;\n\n    return <div key={user.id}>\n            <div className={style.profile}>\n                <NavLink to={'/profile/' + user.id}>\n                    <img src={\n                        user.photos.small !== null\n                            ? user.photos.small\n                            : defaultSmallUserPhoto //defaultAsset\n                    } alt=\"smallUserPhoto\"/>\n                </NavLink>\n                <div className={style.info}>\n                    <NavLink to={'/profile/' + user.id}>\n                        <div className={style.name}>{user.name}</div>\n                    </NavLink>\n                </div>\n            </div>\n            <div className={style.buttonsArea}>\n                <div>\n                    {\n                        user.followed\n                            ? <button\n                                disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    unFollowThunkCreator(user.id);\n                                }}\n                            >unfollow</button>\n                            : <button\n                                disabled={followingInProgress.some(id => id === user.id)}\n                                onClick={() => {\n                                    followThunkCreator(user.id);\n                                }}\n                            >follow</button>\n                    }\n                </div>\n                <div>\n                    {/*(in progress) NavLink to dialogs with user we clicked:*/}\n                    <NavLink to={'/dialogs/' + user.id}>\n                        <button>{\"Write message\"}</button>\n                    </NavLink>\n                </div>\n            </div>\n            <hr/>\n        </div>\n}\n\nexport {\n    User\n}","import React from \"react\";\n\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\nimport style from \"./Users.module.css\";\nimport {Pagination} from \"../common/Pagination/Paginator\";\nimport {User} from \"./User\";\n\n\n//types:\ntype UsersPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    followingInProgress: any[]\n    setUsers: (users: Array<UsersType>) => void //need to delete and remove from props\n    setCurrentPage: (pageNumber: number) => void //need to delete and remove from props\n    setTotalUsersCount: (totalCount: number) => void //need to delete and remove from props\n    onPageChanged: (p: number) => void\n\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\n    followThunkCreator: (userId: number) => void //need rename to follow\n}\n\n//functional component:\nconst Users: React.FC<UsersPropsType> = (props) => {\n\n    const {\n        usersPage,\n        pageSize,\n        totalUsersCount,\n        currentPage,\n        followingInProgress,\n        setUsers, //need to delete\n        setCurrentPage, //need to delete\n        setTotalUsersCount, //need to delete\n        onPageChanged,\n        unFollowThunkCreator,\n        followThunkCreator,\n    } = props;\n\n    return <div className={style.items}>\n        {usersPage.users.map(u => <User\n                key={u.id}\n                user={u}\n                followingInProgress={followingInProgress}\n                unFollowThunkCreator={unFollowThunkCreator}\n                followThunkCreator={followThunkCreator}\n            />\n        )}\n        <Pagination\n            currentPage={currentPage}\n            pageSize={pageSize}\n            onPageChanged={onPageChanged}\n            totalUsersCount={totalUsersCount}\n        />\n    </div>\n}\n\nexport {\n    Users\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { AppStateType } from \"../redux/redux-store\";\n\n//types:\ntype mapStateToPropsType = {\n  isAuth: boolean;\n};\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\n\n//container component:\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) { //possible to make arrow function?\n\n  const RedirectComponent: React.FC<mapStateToPropsType> = (props) => {\n\n    const {\n      isAuth,\n      ...restProps\n    } = props;\n\n    if (!isAuth) {\n      return <Redirect to={\"/Login\"}/>\n    }\n    return <Component {...(restProps as T)} />\n  };\n\n  return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport {\n  WithAuthRedirect\n};\n","import {AppStateType} from \"../redux/redux-store\";\r\n\r\nexport const getUsersSL = (state: AppStateType) => {\r\n    return state.usersPage\r\n}\r\nexport const getPageSizeSL = (state: AppStateType) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSL = (state: AppStateType) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSL = (state: AppStateType) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetchingSL = (state: AppStateType) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgressSL = (state: AppStateType) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage,\n    setIsFetching,\n    setTotalUsersCount,\n    setUsers,\n    unFollowThunkCreator,\n    UsersInitialStateType,\n    UsersType,\n} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\"\nimport {Users} from \"./Users\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {\n    getCurrentPageSL,\n    getFollowingInProgressSL,\n    getIsFetchingSL,\n    getPageSizeSL,\n    getTotalUsersCountSL,\n    getUsersSL,\n} from \"../../selectors/user-selectors\";\n\n//types:\ntype mapStateToPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: any[]\n}\ntype mapDispatchToPropsType = {\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setIsFetching: (isFetching: boolean) => void\n\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void // need rename to getUsers\n    unFollowThunkCreator: (userId: number) => void //need rename to follow\n    followThunkCreator: (userId: number) => void //need rename to unFollow\n}\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n\n//class container component:\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\n\n    componentDidMount() {\n        //usersAPI.getUsers() request:\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);\n    };\n\n    //onChanged function for pagination:\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setIsFetching(true);\n\n        //request for re-render next page of users:\n        usersAPI\n            .getUsers(this.props.currentPage, this.props.pageSize)\n            .then(data => {\n                this.props.setIsFetching(false);\n                this.props.setUsers(data.items);\n            });\n    };\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.isFetching\n                        //user would see preloader while response has not confirmed:\n                        ? <div className={preloaderStyle.main}><Preloader/></div>\n                        : <div>\n                            <Users\n                                {...this.props}\n                                onPageChanged={this.onPageChanged}\n                            />\n                        </div>\n                }\n            </>\n        );\n    };\n}\n\n\n/*const mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersPage: state.usersPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    };\n};*/\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersPage: getUsersSL(state),\n        pageSize: getPageSizeSL(state),\n        totalUsersCount: getTotalUsersCountSL(state),\n        currentPage:getCurrentPageSL(state),\n        isFetching: getIsFetchingSL(state),\n        followingInProgress: getFollowingInProgressSL(state),\n    };\n};\n\n//HOC:\nconst UsersContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            setUsers,\n            setCurrentPage,\n            setTotalUsersCount,\n            setIsFetching,\n            getUsersThunkCreator, //need rename to getUsers\n            unFollowThunkCreator, //need rename to unFollow\n            followThunkCreator,  //need rename to follow\n        }),\n    WithAuthRedirect,\n)(UsersClassContainer);\n\nexport {\n    UsersContainer\n};","import {AppActionType} from \"./redux-store\";\n\n//types:\nexport type DialogsDataType = {\n    id: number\n    name: string\n}\nexport type MessagesDataType = {\n    id: number\n    message: string\n    time: string\n}\nexport type DialogsInitialStateType = {\n    dialogs: Array<DialogsDataType>,\n    messages: Array<MessagesDataType>,\n    newMessageText: string\n}\nexport type DialogsActionType = ReturnType<typeof addMessage>\n\n//initialState:\nconst initialState: DialogsInitialStateType = {\n    dialogs: [\n        {id: 1, name: \"Dima\"},\n        {id: 2, name: \"Sasha\"},\n    ],\n    messages: [\n        {id: 1, message: \"hello\", time: \"test 4/1/2022, 10:38:18 PM\"},\n        {id: 2, message: \"How are you?\", time: \"test 4/1/2022, 10:39:22 PM\"},\n\n    ],\n    newMessageText: \"\"\n}\n\n//reducer:\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\n        const stateCopy = {...state}\n        const newMessage: MessagesDataType = {\n            id: /*action.newId,*/ Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method\n            message: action.newMessage,\n            time: /*action.newDate*/new Date().toLocaleString(), //Get Current Date & Time function\n        };\n        stateCopy.messages = [...state.messages, newMessage];\n        return stateCopy;\n    } else {\n        return state;\n    }\n}\n\n//action creators:\nexport const addMessage = (/*newId: number,*/ newMessage: string, /*newDate: string*/) => {\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", /*newId,*/ newMessage, /*newDate*/} as const\n}\n\nexport {\n    dialogsReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport style from \"../Dialogs.module.css\";\n\n//types:\ntype DialogPropsType = {\n    id: number\n    name: string\n}\n\n//functional component:\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\n\n    const {\n        id,\n        name,\n    } = props;\n\n    return (\n        <div className={style.dialog + '' + style.active}>\n            <NavLink to={\"/dialogs/\" + id}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport {\n    DialogItem\n}","import React from \"react\";\n\nimport styles from \"./Message.module.css\";\nimport defaultAvatar from \"../../../assets/images/default_user_photo.png\"\n\n//types:\ntype MessagePropsType = {\n    id: number //?\n    message: string\n    time: string\n}\n\n//function component:\nconst Message: React.FC<MessagePropsType> = (props) => {\n\n    const {\n        id, //?\n        message,\n        time,\n    } = props;\n\n    return (\n        <div className={styles.message}>\n            <img className={styles.img} alt=\"userPhoto\" src={defaultAvatar}/>\n            <div className={styles.content}>\n                <div className={styles.name}>userName</div>\n                <div className={styles.text}>{message}</div>\n                <div className={styles.time}>{time}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport {\n    Message\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./Dialogs.module.css\"\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {FormControl} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validator\";\n\n\n//types:\ntype confPropsType = {\n    form: string\n}\n\ntype AddMessageFormPropsType = any //need to fix any!!!\ntype DialogsPropsType = {\n    dialogsPage: DialogsInitialStateType\n    addMessage: (/*newId: number,*/ newMessageText: string, /*newDate: string*/) => void\n    /*newId: number\n    newDate: string */\n}\n\n//functional component:\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n\n    const {\n        dialogsPage,\n        addMessage,\n        /*newId,\n        newDate,*/\n    } = props;\n\n    //users list:\n    let dialogElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n\n    //messages history:\n    let messageElements = dialogsPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id} time={m.time}/>);\n\n    const addNewMessage = (value: any) => { //need to fix any!!!\n        if (value.newMessageText) {\n            addMessage(/*newId,*/ value.newMessageText/*, newDate*/);\n        }\n    }\n\n    return (\n        <div className={styles.dialogsPage}>\n            <div className={styles.dialogs}>\n                {\n                    dialogElements\n                }\n            </div>\n            <div className={styles.messages}>\n                <div className={styles.messageElements}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <hr/>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength3 = maxLengthCreator(3);//test value!!!\n\n//functional component:\nconst AddMessageForm: React.FC<AddMessageFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.inputAreaElements}> {/* <--need to rename class*/}\n            <div>\n                <Field\n                    placeholder={\"Write something\"}\n                    name={\"newMessageText\"}\n                    component={FormControl}\n                    formControlValue={\"textarea\"}\n                    validate={[requiredField, maxLength3]}\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n//reduxForm HOC:\nconst AddMessageReduxForm = reduxForm<confPropsType,any>({form: 'profileAddPostReduxForm'})(AddMessageForm); //need to check types & fix any !!!\n\nexport {\n    Dialogs\n}\n","import {AppStateType} from \"../redux/redux-store\";\r\n\r\nexport const getDialogsSL = (state: AppStateType) => {\r\n    return state.dialogPage\r\n}","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addMessage,\n    DialogsInitialStateType,\n} from \"../../redux/dialogs-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport { Dialogs } from \"./Dialogs\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\nimport {getDialogsSL} from \"../../selectors/dialogs-selectors\";\n\n//types:\ntype mapStateToPropsType = {\n    dialogsPage: DialogsInitialStateType\n}\n\ntype mapDispatchToPropsType = {\n    addMessage: (/*newId: number,*/ newMessageText: string, /*newDate: string*/) => void\n}\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//need to fix! (sideEffects):\n/*const createId = () => {\n    return Math.floor(new Date().valueOf() * Math.random()); //Creating a unique number with javascript time method\n}\nconst createDate = () => {\n    return new Date().toLocaleString(); //Get Current Date & Time function\n}*/\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogsPage: getDialogsSL(state),\n    }\n}\n\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\n\n    render(){\n        return(\n            <Dialogs\n                {...this.props}\n                /*newId={createId()}\n                newDate={createDate()}*/\n            />\n        )\n    }\n}\n\n//HOC:\nconst DialogsContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {addMessage, }),\n    WithAuthRedirect,\n)(DialogsClassContainer);\n\nexport {\n    DialogsContainer\n}\n\n\n","import {AppStateType} from \"../redux/redux-store\";\r\n\r\nexport const getInitializedSL = (state: AppStateType) => {\r\n    return state.app.initialized\r\n}","import React from \"react\";\r\n\r\nexport const Error404: React.FC = ()=>{\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\nimport {Redirect, Route, Switch, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport \"./App.css\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {LoginPageContainer} from \"./components/Login/Login\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {getInitializedSL} from \"./selectors/app-selectors\";\nimport { Error404 } from \"./components/common/Error404/Error404\";\n\n\n//types:\ntype mapStateToPropsType = {\n    isInitialized: boolean\n}\ntype mapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppClassComponentPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isInitialized: getInitializedSL(state)\n    }\n}\n\nexport const PATH = {\n    PROFILE: \"/Profile\",\n    NEWS: \"/News\",\n    DIALOGS: \"/Dialogs\",\n    USERS: \"/Users\",\n    MUSIC: \"/Music\",\n    SETTINGS: \"/Settings\",\n    LOGIN: \"/login\",\n}\n\nclass App extends React.Component<AppClassComponentPropsType> {\n\n    componentDidMount() {\n        //auth request:\n        this.props.initializeApp();\n    }\n\n    render() {\n        const {\n            isInitialized,\n        } = this.props\n\n        return (\n            <>\n                {   //users don't see anything before app would be initialized:\n                    !isInitialized\n                        ? <Preloader/>\n                        : <div className={\"app-main\"}>\n                            <div className={\"app-wrapper\"}>\n                                <HeaderContainer/>\n                                <Navbar/>\n                                <div className={\"app-wrapper-content\"}>\n                                    {/*redirect from default path to main page when the app start: */}\n                                    <Switch>\n                                        <Route exact path='/way-of-samurai-social-network/' render={() => <Redirect to={PATH.PROFILE} />} />\n                                        <Route exact path='/' render={() => <Redirect to={PATH.PROFILE} />} />\n\n                                        {/*redirect user to his own profile page using userId: */}\n                                        <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer />} />\n\n                                        <Route path={PATH.NEWS} render={() => <News />} />\n                                        <Route path={PATH.DIALOGS} render={() => <DialogsContainer />} />\n                                        <Route path={PATH.USERS} render={() => <UsersContainer />} />\n                                        <Route path={PATH.MUSIC} render={() => <Music />} />\n                                        <Route path={PATH.SETTINGS} render={() => <Settings />} />\n                                        <Route path={PATH.LOGIN} render={() => <LoginPageContainer />} />\n                                        <Route render={() => <Error404/>}/>\n                                    </Switch>\n                                </div>\n                            </div>\n                        </div>\n                }\n            </>\n        );\n    }\n}\n\n//HOC:\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {initializeApp}\n    )\n)(App);","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\n\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\nimport {appReducer, AppReducerActionType} from \"./app-reducer\";\n\n//types:\nexport type AppStateType = ReturnType<typeof rootReducer>;\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT | AppReducerActionType\nexport type AppThunkType = ThunkAction<void, AppStateType, unknown, authReducerAT>\n\n//rootReducer & store:\nexport const rootReducer = combineReducers({\n    dialogPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport {\n    store\n}","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__-cuhe\",\"profile\":\"Users_profile__2q_da\",\"info\":\"Users_info__2hM-q\",\"name\":\"Users_name__3uZmM\",\"buttonsArea\":\"Users_buttonsArea__3uP-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__L3g4m\",\"items\":\"Post_items__TiuHf\",\"postMessage\":\"Post_postMessage__2R7XL\",\"name\":\"Post_name__7buCm\",\"message\":\"Post_message__1YmDS\",\"reactions\":\"Post_reactions__3uWF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1pl0m\",\"content\":\"Message_content__28Hls\",\"name\":\"Message_name__gkaLH\",\"text\":\"Message_text__1FzPC\",\"time\":\"Message_time__322cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pKV4\",\"logoArea\":\"Header_logoArea__3SqBW\",\"loginBlock\":\"Header_loginBlock__2NGhc\",\"items\":\"Header_items__2DQpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1PKUq\",\"error\":\"FormControls_error__3kHja\",\"formSummaryError\":\"FormControls_formSummaryError__2VRhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__BgsaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__2Fp-K\",\"posts\":\"ContentArea_posts__3qIIz\",\"inputAreaElements\":\"ContentArea_inputAreaElements__ijd0W\"};"],"sourceRoot":""}