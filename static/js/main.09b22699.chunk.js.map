{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ContentArea/ContentArea.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Header/Header.tsx","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","redux/users-reducer.tsx"," assets/images/defaultSmallUserPhoto.png","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","components/Users/UsersClassContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","App.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","props","className","styles","header","Navbar","navbar","item","to","activeClassName","active","DialogItem","dialog","id","name","Message","message","initialState","dialogs","messages","newMessageText","DialogsContainer","connect","state","dialogsPage","dialogPage","addMessage","newMessage","type","setNewMessageText","newText","dialogElements","map","d","messageElements","m","addMessageHandler","trim","value","maxLength","onChange","e","currentTarget","placeholder","onKeyPress","key","preventDefault","onClick","Music","News","Settings","users","pageSize","totalUsersCount","currentPage","isFetching","Users","usersPage","pagesCount","Math","ceil","pages","i","push","items","p","selectedPage","onPageChanged","u","src","photos","small","defaultSmallUserPhoto","style","textDecoration","color","followed","unFollow","follow","location","country","city","Preloader","UsersClassContainer","pageNumber","setCurrentPage","setIsFetching","axios","get","response","setUsers","data","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","ProfileInfo","alt","descriptionBlock","posts","likesCount","isLiked","newPostText","profile","PostContainer","profilePage","dispatch","addLike","removeLike","ContentAreaContainer","addPost","newPost","setNewPostText","postsElements","addPostHandler","postBlock","Profile","ProfileClassContainer","setProfile","ProfileContainer","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","store","createStore","reRenderEntireThree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.09b22699.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__2-zGa\",\"dialogs\":\"Dialogs_dialogs__3K-Xy\",\"dialog\":\"Dialogs_dialog__ZEC-O\",\"messages\":\"Dialogs_messages__3kr4z\",\"message\":\"Dialogs_message__nXIdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__sAzYH\",\"selectedPage\":\"Users_selectedPage__UEP4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__3Ivjo\",\"posts\":\"ContentArea_posts__2_nbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__WdcwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__1-enr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3S2BG\",\"item\":\"Navbar_item__k2Crj\",\"active\":\"Navbar_active__28fRt\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\n\r\n//types:\r\ntype HeaderPropsType = {}\r\n\r\n//function component:\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            Header\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Header\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\n//types:\r\ntype NavbarPropsType = {}\r\n\r\n//function component:\r\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Profile\"} activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Dialogs\"} activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Users\"} activeClassName={styles.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/News\"} activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Music\"} activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Settings\"} activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Navbar\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types:\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n//function component:\r\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.dialog + '' + styles.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DialogItem\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n\r\n}\r\n\r\n//function component:\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Message\r\n}","import {ActionType} from \"./redux-store\"\r\n\r\n//types:\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsInitialStateType = {\r\n    dialogs: Array<DialogsDataType>,\r\n    messages: Array<MessagesDataType>,\r\n    newMessageText: string\r\n}\r\n\r\n//initialState:\r\nconst initialState: DialogsInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Sasha\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\n//reducer:\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: ActionType) => { //need to rename to dialogReducer\r\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\r\n        const stateCopy = {...state}\r\n        const newMessage: MessagesDataType = {\r\n            id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number with javascript time\r\n            message: stateCopy.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages, newMessage];\r\n        stateCopy.newMessageText = \"\";\r\n        return stateCopy;\r\n\r\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\r\n        const stateCopy = {...state};\r\n        stateCopy.newMessageText = action.newText;\r\n        return stateCopy;\r\n\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addMessage = (newMessage: string) => {\r\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\r\n}\r\nexport const setNewMessageText = (newText: string) => {\r\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\r\n}\r\n\r\nexport {\r\n    dialogsReducer\r\n}","import {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addMessage, DialogsInitialStateType, setNewMessageText} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    sendMessage: (newMessageText: string) => void\r\n    updateNewMessageText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogPage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst DialogsContainer = connect(mapStateToProps, {addMessage,setNewMessageText})(Dialogs);\r\n\r\nexport {\r\n    DialogsContainer\r\n}\r\n\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\r\n\r\n//types:\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\n\r\n//function component:\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage; // state!!!\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    const addMessageHandler = () => {\r\n        if (state.newMessageText) {\r\n            props.addMessage(state.newMessageText.trim());\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewMessageText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addMessageHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogsPage}>\r\n\r\n            <div className={styles.dialogs}>\r\n                {\r\n                    dialogElements\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                {\r\n                    messageElements\r\n                }\r\n                <div>\r\n                    <hr/>\r\n                    <textarea\r\n                        value={state.newMessageText}\r\n                        maxLength={100000}\r\n                        onChange={onChangeHandler}\r\n                        placeholder={\"Write something\"}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <span>\r\n                        <button onClick={addMessageHandler}>Send</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialogs\r\n}\r\n","import React from \"react\";\r\n\r\n//types:\r\ntype MusicPropsType = {}\r\n\r\n//function component:\r\nconst Music: React.FC<MusicPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Music Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Music\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype NewsPropsType = {}\r\n\r\n//function component:\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            News Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    News\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype SettingsPropsType = {}\r\n\r\n//function component:\r\nconst Settings: React.FC<SettingsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Settings Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Settings\r\n}","import {ActionType} from \"./redux-store\";\r\n\r\n//types:\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersInitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean\r\n}\r\n\r\n//initialState:\r\nconst initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\n//reducer:\r\nconst usersReducer = (state: UsersInitialStateType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/USERS/FOLLOW\": {\r\n            return  {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/UNFOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/SET_USERS\": {\r\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case \"SN/USERS/SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const follow = (id: number) => {\r\n    return {type: \"SN/USERS/FOLLOW\", id} as const\r\n}\r\nexport const unFollow = (id: number) => {\r\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: \"SN/USERS/SET_USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\r\n}\r\n\r\nexport {\r\n    usersReducer\r\n}","export default __webpack_public_path__ + \"static/media/defaultSmallUserPhoto.8101612b.png\";","import React from \"react\";\r\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\r\nimport defaultSmallUserPhoto from \"../../ assets/images/defaultSmallUserPhoto.png\"\r\nimport styles from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//types:\r\nexport type UsersPropsType = { //duplicate UsersPropsType!!!\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n\r\n    //callBacksTypes (mapDispatchToPropsType):\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (p: number) => void\r\n}\r\n\r\n//functional component:\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const state = props.usersPage; //state!!!\r\n\r\n    //pages for pagination:\r\n    const pagesCount = Math.ceil(state.totalUsersCount / state.pageSize) //.ceil rounds a number up to the next largest integer\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.items}>\r\n            Users:\r\n\r\n            <div>\r\n                { //paginator:\r\n                    pages.map(p => <span\r\n                        className={p === state.currentPage\r\n                            ? styles.selectedPage\r\n                            : ''\r\n                        }\r\n                        onClick={() => props.onPageChanged(p)} //callBack?\r\n                    >{p}</span>)\r\n                }\r\n            </div>\r\n\r\n            <hr/>\r\n            {\r\n                state.users.map(u => <div key={u.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={\r\n                            u.photos.small !== null\r\n                                ? u.photos.small\r\n                                : defaultSmallUserPhoto //defaultAsset\r\n                        }/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div><b>{u.name}</b></div>\r\n                    <div style={{textDecoration: \"underline\", color: \"blue\"}}>{\"Write message\"}</div>{/*//need to fix*/}\r\n                    <div>\r\n                        {\r\n                            u.followed\r\n                                ?\r\n                                <button onClick={() => {\r\n                                    props.unFollow(u.id);\r\n                                }}>unfollow</button>\r\n                                :\r\n                                <button onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }}>follow</button>\r\n                        }\r\n                    </div>\r\n\r\n                    {/*description of location:*/}\r\n                    <div>{\"country:\"}\r\n                        {\r\n                            u.location?.country //missed value\r\n                                ? u.location.country\r\n                                : \" - \"\r\n                        }\r\n                    </div>\r\n                    <div>{\"city:\"}\r\n                        {\r\n                            u.location?.city //missed value\r\n                                ? u.location.city\r\n                                : \" - \"\r\n                        }\r\n                    </div>\r\n\r\n                    <hr/>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Users\r\n}","import React from \"react\";\r\nimport \"./Preloader.css\"\r\nimport PreloaderLogo from \"./preloaderLogo.png\"\r\n\r\ntype PreloaderPropsType = {\r\n}\r\n\r\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        /*<div className=\"Preloader\">\r\n            <header className=\"Preloader-header\">\r\n                <img src={PreloaderLogo} className=\"Preloader-logo\" alt=\"logo\"/>\r\n                <br/>\r\n            </header>\r\n        </div>*/\r\n        <h1>\r\n            loading...\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport {\r\n    Preloader\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollow,\r\n    UsersInitialStateType,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\n//types:\r\ntype UsersPropsType = { //duplicate UsersPropsType!!!\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n\r\n    //callBacksTypes (mapDispatchToPropsType):\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n}\r\n\r\n//class container component:\r\nclass UsersClassContainer extends React.Component<UsersPropsType, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    //onPageChanged Fn for pagination:\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.isFetching ? <Preloader/> : null}\r\n                <Users\r\n                    usersPage={this.props.usersPage}\r\n                    pageSize={this.props.pageSize}\r\n                    totalUsersCount={this.props.totalUsersCount}\r\n                    currentPage={this.props.currentPage}\r\n                    follow={this.props.follow}\r\n                    unFollow={this.props.unFollow}\r\n                    setUsers={this.props.setUsers}\r\n                    setCurrentPage={this.props.setCurrentPage}\r\n                    setTotalUsersCount={this.props.setTotalUsersCount}\r\n                    onPageChanged={this.onPageChanged}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n\r\n//HOC:\r\nconst UsersContainer = connect(mapStateToProps, {\r\n    follow,\r\n    unFollow,\r\n    setUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount,\r\n    setIsFetching\r\n})(UsersClassContainer);\r\n\r\n\r\nexport {\r\n    UsersContainer\r\n}","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\n//types:\r\ntype  ProfileInfoPropsType = {}\r\n\r\n//function component:\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://i.redd.it/om4a8r7glhx21.png\" alt=\"\"/>\r\n            </div>\r\n            <div className={styles.descriptionBlock}>\r\n                Ava + description\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ProfileInfo\r\n}","import {ActionType} from \"./redux-store\";\r\n\r\n//types:\r\nexport type PostsDataType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n}\r\nexport type ProfileInitialStateType = {\r\n    posts: Array<PostsDataType>\r\n    newPostText: string\r\n    profile: any//!!!!\r\n}\r\n\r\n//initialState:\r\nconst initialState: ProfileInitialStateType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi dude\", likesCount: 2, isLiked: false},\r\n        {id: 2, message: \"nice photos!\", likesCount: 1, isLiked: false},\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null\r\n}\r\n\r\n//reducer:\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD_POST\": {\r\n            const stateCopy = {...state}\r\n            const newPost: PostsDataType = {\r\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number with javascript time\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n                isLiked: false\r\n            };\r\n            stateCopy.posts = [newPost, ...state.posts];\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\r\n            const stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/ADD_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/REMOVE_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/SET_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addPost = (newPost: string) => {\r\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\r\n}\r\nexport const setNewPostText = (newText: string) => {\r\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\r\n}\r\nexport const addLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\r\n}\r\nexport const removeLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\r\n}\r\nexport const setProfile = (profile: ProfileInitialStateType) => {\r\n    return{ type: \"SN/PROFILE/SET_PROFILE\", profile} as const\r\n}\r\n\r\nexport {\r\n    profileReducer\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\r\nimport {Post} from \"./Post\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//Container Component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (id: number, isLiked: boolean)=>{\r\n            dispatch(addLike(id, isLiked));\r\n        },\r\n        removeLike: (id: number, isLiked: boolean)=> {\r\n            dispatch(removeLike(id, isLiked));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\r\n\r\nexport {\r\n    PostContainer\r\n}","import React from \"react\";\r\nimport styles from \"./Post.module.css\"\r\n\r\n//types:\r\ntype PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//Fn Component:\r\nconst Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.items}>\r\n            <img src='https://cdn4.iconfinder.com/data/icons/spring-festival/512/man-512.png' alt=\"\"/>\r\n            <span>{props.message}</span>\r\n            {/*<span >♥{props.likesCount}</span>*/}\r\n            <div>\r\n            {\r\n                props.isLiked\r\n                    ? <button onClick={() => {\r\n                        props.removeLike(props.id, props.isLiked);\r\n                    }}>Liked ♥{props.likesCount}</button>\r\n                    :\r\n                    <button onClick={() => {\r\n                        props.addLike(props.id, props.isLiked);\r\n                    }}>Like ♡{props.likesCount}</button>\r\n            }\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Post\r\n}","import {AppStateType} from \"../../../redux/redux-store\";\r\nimport {ContentArea} from \"./ContentArea\";\r\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ContentAreaContainer = connect(mapStateToProps, {addPost, setNewPostText})(ContentArea);\r\n\r\nexport {\r\n    ContentAreaContainer\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./ContentArea.module.css\"\r\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {PostContainer} from \"./Post/PostContainer\";\r\n\r\n//types:\r\ntype ContentAreaPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//function component:\r\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\r\n\r\n    const state = props.profilePage; //state!!!\r\n\r\n    let postsElements = state.posts.map(p => <PostContainer\r\n        key={p.id}\r\n        message={p.message}\r\n        id={p.id}\r\n        likesCount={p.likesCount}\r\n        isLiked={p.isLiked}\r\n    />);\r\n\r\n    const addPostHandler = () => {\r\n        if (state.newPostText) {\r\n            props.addPost(state.newPostText);\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewPostText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addPostHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <textarea\r\n                value={state.newPostText}\r\n                maxLength={100000}\r\n                onChange={onChangeHandler}\r\n                placeholder={\"What's new?\"}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n            <span>\r\n                <button onClick={addPostHandler}>Post</button>\r\n            </span>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ContentArea\r\n}","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\r\n\r\n//types:\r\ntype ProfilePropsType = {}\r\n\r\n//function component:\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo/>\r\n            <ContentAreaContainer/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport\r\n{\r\n    Profile\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {ProfileInitialStateType, setProfile} from \"../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n//types:\r\ntype ProfilePropsType = {\r\n    setProfile: (profile: ProfileInitialStateType) => void\r\n}\r\n\r\n//function component:\r\nclass ProfileClassContainer extends React.Component<ProfilePropsType, any> {\r\n\r\n    componentDidMount() {\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/3`).then(response => {\r\n            this.props.setProfile(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Profile{...this.props}/>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType)  => {\r\n    return{\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ProfileContainer = connect(mapStateToProps,{setProfile})(ProfileClassContainer);\r\n\r\nexport\r\n{\r\n    ProfileContainer\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\r\n\r\n//types:\r\ntype PropsType = {}\r\n\r\n//function component:\r\nconst App: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <Header/>\r\n            <Navbar/>\r\n            <div className={\"app-wrapper-content\"}>\r\n                <Route path={\"/Profile\"} render={() => <ProfileContainer/>}/>\r\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\r\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\r\n                <Route path={\"/News\"} render={() => <News/>}/>\r\n                <Route path={\"/Music\"} render={() => <Music/>}/>\r\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport {addMessage, dialogsReducer, setNewMessageText} from \"./dialogs-reducer\";\r\nimport {addLike, addPost, profileReducer, removeLike, setNewPostText, setProfile} from \"./profile-reducer\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollow,\r\n    usersReducer\r\n} from \"./users-reducer\";\r\n\r\n//types:\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type RootReduxStoreType = typeof store;\r\nexport type ActionType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setNewPostText>\r\n    | ReturnType<typeof addLike>\r\n    | ReturnType<typeof removeLike>\r\n    | ReturnType<typeof setProfile>\r\n    | ReturnType<typeof addMessage>\r\n    | ReturnType<typeof setNewMessageText>\r\n    | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n\r\n//store & rootReducer:\r\nexport const rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport {\r\n    store\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {AppStateType} from './redux/redux-store';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nconst reRenderEntireThree = (state: AppStateType) => {\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n        ,document.getElementById('root')\r\n    );\r\n}\r\n\r\nreRenderEntireThree(store.getState());\r\nstore.subscribe(() => {\r\n    reRenderEntireThree(store.getState())\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}