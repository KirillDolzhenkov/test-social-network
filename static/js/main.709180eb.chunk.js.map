{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css","components/Profile/ContentArea/ContentArea.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.tsx","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","hoc/WithAuthRedirect.tsx","redux/profile-reducer.tsx","assets/images/defaultSmallUserPhoto.png","components/common/Preloader/Preloader.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","components/Music/Music.tsx","redux/users-reducer.tsx","components/Users/Users.tsx","components/Users/UsersClassContainer.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","App.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","authAPI","initialState","id","email","login","isAuth","Header","props","className","style","header","to","logoArea","src","logo1","alt","logo2","loginBlock","color","HeaderClassContainer","this","getAuthUserData","React","Component","HeaderContainer","connect","state","auth","dispatch","resultCode","type","setAuthUserData","mapStateToProps","posts","newPostText","profile","Preloader","ProfileInfo","styles","descriptionBlock","photos","large","defaultSmallUserPhoto","fullName","aboutMe","PostContainer","profilePage","addLike","isLiked","removeLike","items","message","onClick","likesCount","ContentAreaContainer","addPost","newPost","setNewPostText","newText","postsElements","map","p","addPostHandler","postBlock","value","maxLength","onChange","e","currentTarget","placeholder","onKeyPress","key","preventDefault","Profile","ProfileClassContainer","match","params","getUserProfile","ProfileContainer","compose","withRouter","restProps","Music","users","totalUsersCount","isFetching","followingInProgress","follow","unFollow","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","pagesCount","Math","ceil","pages","i","push","selectedPage","onPageChanged","u","small","name","textDecoration","followed","disabled","some","unFollowThunkCreator","followThunkCreator","location","country","city","UsersClassContainer","pageNumber","setCurrentPage","getUsersThunkCreator","UsersContainer","News","Navbar","navbar","item","activeClassName","active","Login","Settings","dialogs","messages","newMessageText","DialogItem","dialog","Message","dialogStyle","text","messageStyle","img","defaultAvatar","content","time","Dialogs","dialogsPage","dialogElements","d","messageElements","m","addMessageHandler","addMessage","trim","setNewMessageText","DialogsClassContainer","DialogsContainer","dialogPage","newMessage","App","path","render","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","filter","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.709180eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__2-zGa\",\"dialogs\":\"Dialogs_dialogs__3K-Xy\",\"dialog\":\"Dialogs_dialog__ZEC-O\",\"messages\":\"Dialogs_messages__3kr4z\",\"messageElements\":\"Dialogs_messageElements__2LS4-\",\"message\":\"Dialogs_message__nXIdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1PLc7\",\"content\":\"Message_content__3ejf4\",\"name\":\"Message_name__2xhc0\",\"text\":\"Message_text__2qUk0\",\"time\":\"Message_time__18dck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__WdcwP\",\"logoArea\":\"Header_logoArea__MJ2oM\",\"loginBlock\":\"Header_loginBlock__38Nj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__3Ivjo\",\"posts\":\"ContentArea_posts__2_nbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__sAzYH\",\"selectedPage\":\"Users_selectedPage__UEP4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__1-enr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3S2BG\",\"item\":\"Navbar_item__k2Crj\",\"active\":\"Navbar_active__28fRt\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers: {\r\n        \"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\"\r\n    }\r\n});\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data;\r\n            });\r\n    },\r\n\r\n    follow(userId: number) {\r\n        return instance.post(`follow/${userId}`);\r\n    },\r\n    unFollow(userId: number) {\r\n        return instance.delete(`follow/${userId}`);\r\n\r\n    },\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`);\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    }\r\n}\r\n","import {Dispatch} from \"redux\";\r\n\r\nimport {authAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\r\nexport type AuthInitialStateType = {\r\n    id: null | number,\r\n    email: null | string,\r\n    login: null | string,\r\n    isAuth: boolean\r\n}\r\n\r\n//initialState:\r\nconst initialState: AuthInitialStateType = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n//reducer:\r\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/SET_AUTH_USER_DATA\": {\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                isAuth: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const setAuthUserData = (data: AuthInitialStateType) => {\r\n    return {type: \"SN/SET_AUTH_USER_DATA\", data} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getAuthUserData = () => {\r\n    return (dispatch: Dispatch<authReducerAT>) => {\r\n        authAPI.me()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    let data = response.data.data;\r\n                    dispatch(setAuthUserData(data));\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    authReducer\r\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport style from \"./Header.module.css\";\r\nimport logo1 from \"../../assets/images/logo_part_1.png\";\r\nimport logo2 from \"../../assets/images/logo_part_2.png\";\r\n\r\n//types:\r\ntype HeaderPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\n\r\n//functional component:\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={style.header}>\r\n            <NavLink to={\"/news\"} className={style.logoArea}>\r\n                <div>\r\n                    <img src={logo1} alt=\"logoName1\"/>\r\n                </div>\r\n                <div>\r\n                    <img src={logo2} alt=\"logoName2\"/>\r\n                </div>\r\n            </NavLink>\r\n            <div className={style.loginBlock}>\r\n                {\r\n                    props.isAuth\r\n                        ? <div>\r\n                            <span style={{color: \"white\"}}>{props.login} </span> {/*need to create own style*/}\r\n                            <NavLink to={\"/login\"}>Logout</NavLink>\r\n                        </div>\r\n                        : <div>\r\n                            <NavLink to={\"/login\"}>Login </NavLink>\r\n                            <NavLink to={\"/login\"}>Signup </NavLink>\r\n                        </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Header\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\r\nimport { Header } from \"./Header\";\r\n\r\n//types:\r\ntype HeaderContainerPropsType = {}\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n    login: null | string\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getAuthUserData: () => void;\r\n}\r\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\n\r\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\r\n    componentDidMount() {\r\n        this.props.getAuthUserData();\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Header {...this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\n//HOC\r\nconst HeaderContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    HeaderContainerPropsType,\r\n    AppStateType>(mapStateToProps, {getAuthUserData})(HeaderClassContainer);\r\n\r\nexport {\r\n    HeaderContainer\r\n}","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>)  {\r\n\r\n    const RedirectComponent = (props: mapStateToPropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n\r\n        if (!isAuth) {\r\n            return <Redirect to={\"/Login\"}/>\r\n        }\r\n        return <Component {...restProps as T}/>\r\n    }\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\r\n    return ConnectedRedirectComponent;\r\n}\r\n\r\n\r\nexport {\r\n    WithAuthRedirect\r\n}","import {Dispatch} from \"redux\";\r\n\r\nimport {usersAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\nimport {getUsersThunkCreator, setFollowingProgress} from \"./users-reducer\";\r\n\r\n//types:\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n}\r\nexport type ProfileInitialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfilePageType | null\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    aboutMe: string,\r\n    contacts: LinksType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: null | string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\ntype LinksType = {\r\n    facebook: null | string,\r\n    website: null | string,\r\n    vk: null | string,\r\n    twitter: null | string,\r\n    instagram: null | string,\r\n    youtube: null | string,\r\n    github: null | string,\r\n    mainLink: null | string\r\n}\r\nexport type PhotosType = { small: string, large: string }\r\n\r\nexport type ProfileActionType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setNewPostText>\r\n    | ReturnType<typeof addLike>\r\n    | ReturnType<typeof removeLike>\r\n    | ReturnType<typeof setProfile>\r\n\r\n\r\n//initialState:\r\nconst initialState: ProfileInitialStateType = {\r\n    posts: [],\r\n    newPostText: \"\",\r\n    profile: null\r\n}\r\n\r\n//reducer:\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD_POST\": {\r\n            const stateCopy = {...state}\r\n            const newPost: PostType = {\r\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n                isLiked: false\r\n            };\r\n            stateCopy.posts = [newPost, ...state.posts];\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\r\n            const stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/ADD_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/REMOVE_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/SET_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addPost = (newPost: string) => {\r\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\r\n}\r\nexport const setNewPostText = (newText: string) => {\r\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\r\n}\r\nexport const addLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\r\n}\r\nexport const removeLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\r\n}\r\nexport const setProfile = (profile: ProfilePageType) => {\r\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getUserProfile = (userId: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        usersAPI.getProfile(userId).then(response => {\r\n            dispatch(setProfile(response.data));\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    profileReducer\r\n}","export default __webpack_public_path__ + \"static/media/defaultSmallUserPhoto.8101612b.png\";","import React from \"react\";\r\n\r\nimport \"./Preloader.css\"\r\n/*import PreloaderLogo from \"preloaderLogo.png\"*/\r\n\r\n//types:\r\ntype PreloaderPropsType = {}\r\n\r\n//functional component:\r\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        /*<div className=\"Preloader\">\r\n            <header className=\"Preloader-header\">\r\n                <img src={PreloaderLogo} className=\"Preloader-logo\" alt=\"logo\"/>\r\n                <br/>\r\n            </header>\r\n        </div>*/\r\n        <h1>\r\n            loading...\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport {\r\n    Preloader\r\n}\r\n","import React from \"react\";\r\n\r\nimport defaultSmallUserPhoto from \"../../../assets/images/defaultSmallUserPhoto.png\";\r\nimport { Preloader } from \"../../common/Preloader/Preloader\";\r\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\n\r\n//types:\r\ntype  ProfileInfoPropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//functional component:\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    const state = props.profile; //!!!\r\n\r\n    if (!state) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={\r\n                    state.photos.large !== null\r\n                        ? state.photos.large\r\n                        : defaultSmallUserPhoto //defaultAsset\r\n                }/>\r\n                <div>\r\n                    <div><b>{state.fullName}</b></div>\r\n                    <div>{state.aboutMe}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ProfileInfo\r\n}","import {Dispatch} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\r\nimport {Post} from \"./Post\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (id: number, isLiked: boolean)=>{\r\n            dispatch(addLike(id, isLiked));\r\n        },\r\n        removeLike: (id: number, isLiked: boolean)=> {\r\n            dispatch(removeLike(id, isLiked));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\r\n\r\nexport {\r\n    PostContainer\r\n}","import React from \"react\";\r\n\r\nimport styles from \"./Post.module.css\"\r\n\r\n//types:\r\ntype PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//functional component:\r\nconst Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.items}>\r\n            <img src='https://cdn4.iconfinder.com/data/icons/spring-festival/512/man-512.png' alt=\"\"/>\r\n            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\r\n            <span>{props.message}</span>\r\n            {/*<span >♥{props.likesCount}</span>*/}\r\n            <div>\r\n            {\r\n                props.isLiked\r\n                    ? <button onClick={() => {\r\n                        props.removeLike(props.id, props.isLiked);\r\n                    }}>Liked ♥{props.likesCount}</button>\r\n                    :\r\n                    <button onClick={() => {\r\n                        props.addLike(props.id, props.isLiked);\r\n                    }}>Like ♡{props.likesCount}</button>\r\n            }\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Post\r\n}","import {connect} from \"react-redux\";\r\n\r\nimport {ContentArea} from \"./ContentArea\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype ContentAreaType = {}\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ContentAreaContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    ContentAreaType,\r\n    AppStateType>(mapStateToProps, {addPost, setNewPostText})(ContentArea);\r\n\r\nexport {\r\n    ContentAreaContainer\r\n}","import React, {ChangeEvent} from \"react\";\r\n\r\nimport styles from \"./ContentArea.module.css\"\r\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {PostContainer} from \"./Post/PostContainer\";\r\n\r\n//types:\r\ntype ContentAreaPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//functional component:\r\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\r\n\r\n    const state = props.profilePage; //state!!!\r\n\r\n    let postsElements = state.posts.map(p => <PostContainer\r\n        key={p.id}\r\n        message={p.message}\r\n        id={p.id}\r\n        likesCount={p.likesCount}\r\n        isLiked={p.isLiked}\r\n    />);\r\n\r\n    const addPostHandler = () => {\r\n        if (state.newPostText) {\r\n            props.addPost(state.newPostText);\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewPostText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addPostHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <textarea\r\n                value={state.newPostText}\r\n                maxLength={100000}\r\n                onChange={onChangeHandler}\r\n                placeholder={\"What's new?\"}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n            <span>\r\n                <button onClick={addPostHandler}>Post</button>\r\n            </span>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ContentArea\r\n}","import React from \"react\";\r\n\r\nimport styles from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\r\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//functional component:\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <ContentAreaContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport\r\n{\r\n    Profile\r\n}","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {getUserProfile, ProfilePageType} from \"../../redux/profile-reducer\";\r\nimport {Profile} from \"./Profile\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profile: ProfilePageType | null\r\n    isAuth: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    getUserProfile: (userId: number) => void\r\n}\r\ntype  PathParamsType = {\r\n    userId: string //number or string\r\n}\r\ntype ProfileClassContainerPropsType = mapStateToPropsType\r\n    & mapDispatchToPropsType\r\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId: string = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = \"2\";\r\n        }\r\n        this.props.getUserProfile(+userId); //usersAPI.getProfile()\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Profile{...this.props} profile={this.props.profile}/>\r\n        </>\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ProfileContainer = compose<React.FC>(connect<mapStateToPropsType,\r\n    mapDispatchToPropsType, {}, AppStateType>(mapStateToProps,\r\n    {getUserProfile}), withRouter,\r\n    WithAuthRedirect)(ProfileClassContainer);\r\n\r\nexport {\r\n    ProfileContainer\r\n}\r\n\r\n","import React from \"react\";\r\n\r\n//types:\r\ntype MusicPropsType = {}\r\n\r\n//functional component:\r\nconst Music: React.FC<MusicPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Music Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Music\r\n}","import { Dispatch } from \"redux\";\r\n\r\nimport {usersAPI} from \"../api/api\";\r\nimport {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersInitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: any[]\r\n}\r\nexport type UsersActionType = | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n    | ReturnType<typeof setFollowingProgress>\r\n\r\n//initialState:\r\nconst initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\n//reducer:\r\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/USERS/FOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/UNFOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/SET_USERS\": {\r\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case \"SN/USERS/SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\r\n            return {...state, followingInProgress: action.followingInProgress\r\n                    ? [...state.followingInProgress, action.id]\r\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const follow = (id: number) => {\r\n    return {type: \"SN/USERS/FOLLOW\", id} as const\r\n}\r\nexport const unFollow = (id: number) => {\r\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: \"SN/USERS/SET_USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\r\n}\r\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\r\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setIsFetching(true));\r\n\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        } );\r\n    }\r\n}\r\nexport const unFollowThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.unFollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unFollow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const followThunkCreator =(userId: number)=> {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        dispatch(setFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0){\r\n                    dispatch(follow(userId));\r\n                }\r\n                dispatch(setFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    usersReducer\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\r\nimport defaultSmallUserPhoto from \"../../assets/images/defaultSmallUserPhoto.png\"\r\nimport styles from \"./Users.module.css\";\r\n\r\n\r\n//types:\r\ntype UsersPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: any[]\r\n\r\n    //callBacksTypes (mapDispatchToPropsType):\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (p: number) => void\r\n    setFollowingProgress: (followingProgress: boolean, id: number) => void\r\n\r\n    //thunkTypes:\r\n    unFollowThunkCreator: (userId: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n}\r\n\r\n//functional component:\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const state = props.usersPage; //state!!!\r\n\r\n    //pages for pagination:\r\n    const pagesCount = Math.ceil(state.totalUsersCount / state.pageSize) //.ceil rounds a number up to the next largest integer\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.items}>\r\n            <div>\r\n                { //pagination:\r\n                    pages.map(p => <span\r\n                        className={p === state.currentPage\r\n                            ? styles.selectedPage\r\n                            : ''\r\n                        }\r\n                        onClick={() => props.onPageChanged(p)} //callBack?\r\n                    >{p}</span>)\r\n                }\r\n            </div>\r\n            <hr/>\r\n\r\n            {\r\n                state.users.map(u => <div key={u.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={\r\n                                u.photos.small !== null\r\n                                    ? u.photos.small\r\n                                    : defaultSmallUserPhoto //defaultAsset\r\n                            }/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div><b>{u.name}</b></div>\r\n                    <div style={{textDecoration: \"underline\", color: \"blue\"}}>{\"Write message\"}</div>{/*need to create style at styleModule*/}\r\n                    <div>\r\n                        {\r\n                            u.followed\r\n                                ? <button\r\n                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.unFollowThunkCreator(u.id);\r\n                                    }}\r\n                                >unfollow</button>\r\n                                : <button\r\n                                    disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                    onClick={() => {\r\n                                        props.followThunkCreator(u.id);\r\n                                    }}\r\n                                >follow</button>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        {\"country:\"}{u.location?.country ? u.location.country : \" - \"}\r\n                    </div>\r\n                    <div>\r\n                        {\"city:\"}{u.location?.city ? u.location.city : \" - \"}\r\n                    </div>\r\n                    <hr/>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Users\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\nimport {\r\n    follow,\r\n    followThunkCreator,\r\n    getUsersThunkCreator,\r\n    setCurrentPage,\r\n    setFollowingProgress,\r\n    setIsFetching,\r\n    setTotalUsersCount,\r\n    setUsers,\r\n    unFollow,\r\n    unFollowThunkCreator,\r\n    UsersInitialStateType,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport {usersAPI} from \"../../api/api\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\nimport {Users} from \"./Users\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: any[]\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n    setFollowingProgress: (toggleFollowingProgress: boolean, id: number) => void\r\n\r\n    //thunkTypes:\r\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void\r\n    unFollowThunkCreator: (userId: number) => void\r\n    followThunkCreator: (userId: number) => void\r\n}\r\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize); //usersAPI.getUsers()\r\n    }\r\n\r\n    //onPageChanged Fn for pagination:\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n\r\n        usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n            .then(data => {\r\n                this.props.setIsFetching(false);\r\n                this.props.setUsers(data.items);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching\r\n                        ? <Preloader/>\r\n                        : <Users\r\n                            usersPage={this.props.usersPage}\r\n                            pageSize={this.props.pageSize}\r\n                            totalUsersCount={this.props.totalUsersCount}\r\n                            currentPage={this.props.currentPage}\r\n                            follow={this.props.follow}\r\n                            unFollow={this.props.unFollow}\r\n                            setUsers={this.props.setUsers}\r\n                            setCurrentPage={this.props.setCurrentPage}\r\n                            setTotalUsersCount={this.props.setTotalUsersCount}\r\n                            onPageChanged={this.onPageChanged}\r\n                            followingInProgress={ this.props.followingInProgress}\r\n                            setFollowingProgress={this.props.setFollowingProgress}\r\n                            unFollowThunkCreator={this.props.unFollowThunkCreator}\r\n                            followThunkCreator={this.props.followThunkCreator}\r\n                        />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching,\r\n        followingInProgress: state.usersPage.followingInProgress\r\n    }\r\n}\r\n\r\n\r\n//HOC:\r\nconst UsersContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps,\r\n        {\r\n            follow,\r\n            unFollow,\r\n            setUsers,\r\n            setCurrentPage,\r\n            setTotalUsersCount,\r\n            setIsFetching,\r\n            setFollowingProgress,\r\n\r\n            //thunkCreators:\r\n            getUsersThunkCreator,\r\n            unFollowThunkCreator,\r\n            followThunkCreator\r\n        }),\r\n)(UsersClassContainer);\r\n\r\n\r\nexport {\r\n    UsersContainer\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype NewsPropsType = {}\r\n\r\n//functional component:\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            News Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    News\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from \"./Navbar.module.css\";\r\n\r\n//types:\r\ntype NavbarPropsType = {}\r\n\r\n//functional component:\r\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Profile\"} activeClassName={styles.active}>My profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/News\"} activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Dialogs\"} activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Users\"} activeClassName={styles.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Music\"} activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Settings\"} activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Navbar\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype LoginPropsType = {}\r\n\r\n//functional component:\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n    return(\r\n        <div>\r\n            LoginPage\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Login\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype SettingsPropsType = {}\r\n\r\n//functional component:\r\nconst Settings: React.FC<SettingsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Settings Page's Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Settings\r\n}","import {AppActionType} from \"./redux-store\";\r\n\r\n//types:\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsInitialStateType = {\r\n    dialogs: Array<DialogsDataType>,\r\n    messages: Array<MessagesDataType>,\r\n    newMessageText: string\r\n}\r\nexport type DialogsActionType = ReturnType<typeof addMessage>\r\n    | ReturnType<typeof setNewMessageText>\r\n\r\n//initialState:\r\nconst initialState: DialogsInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Sasha\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\n//reducer:\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\r\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\r\n        const stateCopy = {...state}\r\n        const newMessage: MessagesDataType = {\r\n            id: Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method\r\n            message: stateCopy.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages, newMessage];\r\n        stateCopy.newMessageText = \"\";\r\n        return stateCopy;\r\n\r\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\r\n        const stateCopy = {...state};\r\n        stateCopy.newMessageText = action.newText;\r\n        return stateCopy;\r\n\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addMessage = (newMessage: string) => {\r\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\r\n}\r\nexport const setNewMessageText = (newText: string) => {\r\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\r\n}\r\n\r\nexport {\r\n    dialogsReducer\r\n}","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\n//types:\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n//functional component:\r\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.dialog + '' + styles.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DialogItem\r\n}","import React from \"react\";\r\n\r\nimport dialogStyle from \"../Dialogs.module.css\";\r\nimport messageStyle from \"./Message.module.css\";\r\nimport defaultAvatar from \"../../../assets/images/defaultSmallUserPhoto.png\"\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\n//function component:\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n\r\n    <div className={dialogStyle.text}>\r\n        <div className={messageStyle.message}>\r\n            <img className={messageStyle.img} alt=\"userPhoto\" src={defaultAvatar}/>\r\n            <div className={messageStyle.content}>\r\n                <div className={messageStyle.name}>userName</div>\r\n                <div className={messageStyle.text}>{props.message}</div>\r\n                <div className={messageStyle.time}>time</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Message\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport styles from \"./Dialogs.module.css\"\r\nimport { DialogsInitialStateType } from \"../../redux/dialogs-reducer\";\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\n\r\n\r\n//types:\r\nexport type DialogsPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\n\r\n//functional component:\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage; // state!!!\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    const addMessageHandler = () => {\r\n        if (state.newMessageText) {\r\n            props.addMessage(state.newMessageText.trim());\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewMessageText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addMessageHandler();\r\n        }\r\n    }\r\n\r\n\r\n    if (!props.isAuth){ //auth Redirect!!!\r\n        return <Redirect to={\"/Login\"}/>\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogsPage}>\r\n\r\n            <div className={styles.dialogs}>\r\n                {\r\n                    dialogElements\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                <div className={styles.messageElements}>\r\n                    {\r\n                        messageElements\r\n                    }\r\n                </div>\r\n                <div>\r\n                    <hr/>\r\n                    <textarea\r\n                        value={state.newMessageText}\r\n                        maxLength={100000}\r\n                        onChange={onChangeHandler}\r\n                        placeholder={\"Write something\"}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <span>\r\n                        <button onClick={addMessageHandler}>Send</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialogs\r\n}\r\n","import React from \"react\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {\r\n    addMessage,\r\n    DialogsInitialStateType,\r\n    setNewMessageText\r\n} from \"../../redux/dialogs-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport { Dialogs } from \"./Dialogs\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    isAuth: boolean //delete?\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogPage,\r\n        isAuth: state.auth.isAuth //delete?\r\n    }\r\n}\r\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\r\n    render(){\r\n        return(\r\n            <Dialogs {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst DialogsContainer = compose<React.FC>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType,\r\n        {}, AppStateType>(mapStateToProps, {addMessage,setNewMessageText}),\r\n)(DialogsClassContainer);\r\n\r\nexport {\r\n    DialogsContainer\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\n\r\nimport \"./App.css\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Login} from \"./components/Login/Login\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\r\n\r\n\r\n//types:\r\ntype PropsType = {}\r\n\r\n//functional component:\r\nconst App: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={\"app-wrapper-content\"}>\r\n                <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer />}/>\r\n                <Route path={\"/News\"} render={() => <News/>}/>\r\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\r\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\r\n                <Route path={\"/Music\"} render={() => <Music/>}/>\r\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\r\n                <Route path={\"/Login\"} render={() => <Login/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {\r\n    App\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\n\r\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\r\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\r\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\r\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\r\n\r\n//types:\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT\r\n\r\n//store & rootReducer:\r\nexport const rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport {\r\n    store\r\n}","import React from \"react\";\r\nimport {Provider} from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport \"./index.css\";\r\nimport {App} from \"./App\";\r\nimport {AppStateType, store} from \"./redux/redux-store\";\r\n\r\n\r\nconst reRenderEntireThree = (state: AppStateType) => {\r\n\r\n    ReactDOM.render(\r\n        <BrowserRouter>\r\n            <Provider store={store}>\r\n                <App/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n        , document.getElementById('root')\r\n    );\r\n}\r\n\r\nreRenderEntireThree(store.getState());\r\nstore.subscribe(() => {\r\n    reRenderEntireThree(store.getState())\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}