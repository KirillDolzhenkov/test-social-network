{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ContentArea/ContentArea.module.css","components/Header/Header.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Navbar/Navbar.module.css","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","redux/dialogs-reducer.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Settings/Settings.tsx","redux/users-reducer.tsx","assets/images/defaultSmallUserPhoto.png","components/Users/Users.tsx","components/common/Preloader/Preloader.tsx","components/Users/UsersClassContainer.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","redux/profile-reducer.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/Profile.tsx","components/Profile/ProfileClassContainer.tsx","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","App.tsx","redux/auth-reducer.tsx","redux/redux-store.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","props","className","styles","navbar","item","to","activeClassName","active","DialogItem","dialog","id","name","Message","message","initialState","dialogs","messages","newMessageText","DialogsContainer","connect","state","dialogsPage","dialogPage","addMessage","newMessage","type","setNewMessageText","newText","dialogElements","map","d","messageElements","m","addMessageHandler","trim","value","maxLength","onChange","e","currentTarget","placeholder","onKeyPress","key","preventDefault","onClick","Music","News","Settings","users","pageSize","totalUsersCount","currentPage","isFetching","Users","usersPage","pagesCount","Math","ceil","pages","i","push","items","p","selectedPage","onPageChanged","u","src","photos","small","defaultSmallUserPhoto","style","textDecoration","color","followed","unFollow","follow","location","country","city","Preloader","UsersClassContainer","pageNumber","setCurrentPage","setIsFetching","axios","get","response","setUsers","data","this","setTotalUsersCount","totalCount","React","Component","UsersContainer","ProfileInfo","profile","alt","descriptionBlock","large","fullName","posts","likesCount","isLiked","newPostText","PostContainer","profilePage","dispatch","addLike","removeLike","ContentAreaContainer","addPost","newPost","setNewPostText","postsElements","addPostHandler","postBlock","Profile","ProfileClassContainer","userId","match","params","setProfile","WithUrlDataContainerComponent","withRouter","ProfileContainer","Header","header","logo1","logo2","loginBlock","HeaderContainer","App","path","render","email","login","isAuth","rootReducer","combineReducers","action","stateCopy","floor","Date","valueOf","random","auth","store","createStore","reRenderEntireThree","ReactDOM","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.60f3dc88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__2-zGa\",\"dialogs\":\"Dialogs_dialogs__3K-Xy\",\"dialog\":\"Dialogs_dialog__ZEC-O\",\"messages\":\"Dialogs_messages__3kr4z\",\"message\":\"Dialogs_message__nXIdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__sAzYH\",\"selectedPage\":\"Users_selectedPage__UEP4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__3Ivjo\",\"posts\":\"ContentArea_posts__2_nbj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__WdcwP\",\"loginBlock\":\"Header_loginBlock__38Nj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1_i-h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Post_items__1-enr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__3S2BG\",\"item\":\"Navbar_item__k2Crj\",\"active\":\"Navbar_active__28fRt\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from \"./Navbar.module.css\";\r\n\r\n//types:\r\ntype NavbarPropsType = {}\r\n\r\n//function component:\r\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.navbar}>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Profile\"} activeClassName={styles.active}>Profile</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Dialogs\"} activeClassName={styles.active}>Messages</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Users\"} activeClassName={styles.active}>Users</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/News\"} activeClassName={styles.active}>News</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Music\"} activeClassName={styles.active}>Music</NavLink>\r\n            </div>\r\n            <div className={styles.item}>\r\n                <NavLink to={\"/Settings\"} activeClassName={styles.active}>Settings</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Navbar\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n//types:\r\ntype DialogPropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\n//function component:\r\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.dialog + '' + styles.active}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    DialogItem\r\n}","import React from \"react\";\r\nimport styles from \"../Dialogs.module.css\";\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    id: number\r\n    message: string\r\n\r\n}\r\n\r\n//function component:\r\nconst Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={styles.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Message\r\n}","//types:\r\nexport type DialogsDataType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type MessagesDataType = {\r\n    id: number\r\n    message: string\r\n}\r\nexport type DialogsInitialStateType = {\r\n    dialogs: Array<DialogsDataType>,\r\n    messages: Array<MessagesDataType>,\r\n    newMessageText: string\r\n}\r\nexport type DialogsActionType = ReturnType<typeof addMessage>\r\n    | ReturnType<typeof setNewMessageText>\r\n\r\n//initialState:\r\nconst initialState: DialogsInitialStateType = {\r\n    dialogs: [\r\n        {id: 1, name: \"Dima\"},\r\n        {id: 2, name: \"Sasha\"},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"hello\"},\r\n        {id: 2, message: \"How are you?\"},\r\n    ],\r\n    newMessageText: \"\"\r\n}\r\n\r\n//reducer:\r\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: DialogsActionType) => { //need to rename to dialogReducer\r\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\r\n        const stateCopy = {...state}\r\n        const newMessage: MessagesDataType = {\r\n            id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number with javascript time\r\n            message: stateCopy.newMessageText,\r\n        };\r\n        stateCopy.messages = [...state.messages, newMessage];\r\n        stateCopy.newMessageText = \"\";\r\n        return stateCopy;\r\n\r\n    } else if (action.type === \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\") {\r\n        const stateCopy = {...state};\r\n        stateCopy.newMessageText = action.newText;\r\n        return stateCopy;\r\n\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addMessage = (newMessage: string) => {\r\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newMessage} as const\r\n}\r\nexport const setNewMessageText = (newText: string) => {\r\n    return {type: \"SN/DIALOGS/SET_NEW_MESSAGE_TEXT\", newText} as const\r\n}\r\n\r\nexport {\r\n    dialogsReducer\r\n}","import {AppStateType} from \"../../redux/redux-store\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {addMessage, DialogsInitialStateType, setNewMessageText} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//types:\r\ntype DialogsContainerPropsType = {}\r\n\r\ntype mapStateToPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType):mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogPage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst DialogsContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    DialogsContainerPropsType,\r\n    AppStateType>(mapStateToProps, {addMessage,setNewMessageText})(Dialogs);\r\n\r\nexport {\r\n    DialogsContainer\r\n}\r\n\r\n\r\n","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./Dialogs.module.css\"\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\r\n\r\n//types:\r\nexport type DialogsPropsType = {\r\n    dialogsPage: DialogsInitialStateType\r\n    addMessage: (newMessageText: string) => void\r\n    setNewMessageText: (newText: string) => void\r\n}\r\n\r\n//function component:\r\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage; // state!!!\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} id={m.id}/>);\r\n\r\n    const addMessageHandler = () => {\r\n        if (state.newMessageText) {\r\n            props.addMessage(state.newMessageText.trim());\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewMessageText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addMessageHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.dialogsPage}>\r\n\r\n            <div className={styles.dialogs}>\r\n                {\r\n                    dialogElements\r\n                }\r\n            </div>\r\n\r\n            <div className={styles.messages}>\r\n                {\r\n                    messageElements\r\n                }\r\n                <div>\r\n                    <hr/>\r\n                    <textarea\r\n                        value={state.newMessageText}\r\n                        maxLength={100000}\r\n                        onChange={onChangeHandler}\r\n                        placeholder={\"Write something\"}\r\n                        onKeyPress={onKeyPressHandler}\r\n                    />\r\n                    <span>\r\n                        <button onClick={addMessageHandler}>Send</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Dialogs\r\n}\r\n","import React from \"react\";\r\n\r\n//types:\r\ntype MusicPropsType = {}\r\n\r\n//function component:\r\nconst Music: React.FC<MusicPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Music Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Music\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype NewsPropsType = {}\r\n\r\n//function component:\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            News Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    News\r\n}","import React from \"react\";\r\n\r\n//types:\r\ntype SettingsPropsType = {}\r\n\r\n//function component:\r\nconst Settings: React.FC<SettingsPropsType> = (props) => {\r\n    return (\r\n        <div>\r\n            Settings Page Content\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Settings\r\n}","//types:\r\ntype LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\ntype PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UsersType = {\r\n    id: number\r\n    followed: boolean\r\n    photos: PhotosType\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersInitialStateType = {\r\n    users: Array<UsersType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number,\r\n    isFetching: boolean\r\n}\r\nexport type UsersActionType = | ReturnType<typeof follow>\r\n    | ReturnType<typeof unFollow>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setIsFetching>\r\n\r\n//initialState:\r\nconst initialState: UsersInitialStateType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 19,\r\n    currentPage: 1,\r\n    isFetching: false\r\n}\r\n\r\n//reducer:\r\nconst usersReducer = (state: UsersInitialStateType = initialState, action: UsersActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/USERS/FOLLOW\": {\r\n            return  {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/UNFOLLOW\": {\r\n            return {\r\n                ...state, users: state.users.map(u => {\r\n                    if (u.id === action.id) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        }\r\n        case \"SN/USERS/SET_USERS\": {\r\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]}\r\n        }\r\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\r\n            return {...state, totalUsersCount: action.totalCount}\r\n        }\r\n        case \"SN/USERS/SET_IS_FETCHING\": {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const follow = (id: number) => {\r\n    return {type: \"SN/USERS/FOLLOW\", id} as const\r\n}\r\nexport const unFollow = (id: number) => {\r\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\r\n}\r\nexport const setUsers = (users: Array<UsersType>) => {\r\n    return {type: \"SN/USERS/SET_USERS\", users} as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\r\n}\r\nexport const setTotalUsersCount = (totalCount: number) => {\r\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\r\n}\r\nexport const setIsFetching = (isFetching: boolean) => {\r\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\r\n}\r\n\r\nexport {\r\n    usersReducer\r\n}","export default __webpack_public_path__ + \"static/media/defaultSmallUserPhoto.8101612b.png\";","import React from \"react\";\r\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\r\nimport defaultSmallUserPhoto from \"../../assets/images/defaultSmallUserPhoto.png\"\r\nimport styles from \"./Users.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//types:\r\nexport type UsersPropsType = { //duplicate UsersPropsType!!!\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n\r\n    //callBacksTypes (mapDispatchToPropsType):\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    onPageChanged: (p: number) => void\r\n}\r\n\r\n//functional component:\r\nconst Users: React.FC<UsersPropsType> = (props) => {\r\n\r\n    const state = props.usersPage; //state!!!\r\n\r\n    //pages for pagination:\r\n    const pagesCount = Math.ceil(state.totalUsersCount / state.pageSize) //.ceil rounds a number up to the next largest integer\r\n    const pages = []\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className={styles.items}>\r\n            Users:\r\n\r\n            <div>\r\n                { //paginator:\r\n                    pages.map(p => <span\r\n                        className={p === state.currentPage\r\n                            ? styles.selectedPage\r\n                            : ''\r\n                        }\r\n                        onClick={() => props.onPageChanged(p)} //callBack?\r\n                    >{p}</span>)\r\n                }\r\n            </div>\r\n\r\n            <hr/>\r\n            {\r\n                state.users.map(u => <div key={u.id}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                        <img src={\r\n                            u.photos.small !== null\r\n                                ? u.photos.small\r\n                                : defaultSmallUserPhoto //defaultAsset\r\n                        }/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div><b>{u.name}</b></div>\r\n                    <div style={{textDecoration: \"underline\", color: \"blue\"}}>{\"Write message\"}</div>{/*//need to fix*/}\r\n                    <div>\r\n                        {\r\n                            u.followed\r\n                                ?\r\n                                <button onClick={() => {\r\n                                    props.unFollow(u.id);\r\n                                }}>unfollow</button>\r\n                                :\r\n                                <button onClick={() => {\r\n                                    props.follow(u.id);\r\n                                }}>follow</button>\r\n                        }\r\n                    </div>\r\n\r\n                    {/*description of location:*/}\r\n                    <div>{\"country:\"}\r\n                        {\r\n                            u.location?.country //missed value\r\n                                ? u.location.country\r\n                                : \" - \"\r\n                        }\r\n                    </div>\r\n                    <div>{\"city:\"}\r\n                        {\r\n                            u.location?.city //missed value\r\n                                ? u.location.city\r\n                                : \" - \"\r\n                        }\r\n                    </div>\r\n\r\n                    <hr/>\r\n                </div>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Users\r\n}","import React from \"react\";\r\nimport \"./Preloader.css\"\r\nimport PreloaderLogo from \"./preloaderLogo.png\"\r\n\r\ntype PreloaderPropsType = {\r\n}\r\n\r\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\r\n    return (\r\n        /*<div className=\"Preloader\">\r\n            <header className=\"Preloader-header\">\r\n                <img src={PreloaderLogo} className=\"Preloader-logo\" alt=\"logo\"/>\r\n                <br/>\r\n            </header>\r\n        </div>*/\r\n        <h1>\r\n            loading...\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport {\r\n    Preloader\r\n}\r\n","import React from \"react\";\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    setIsFetching,\r\n    setTotalUsersCount, setUsers, unFollow,\r\n    UsersInitialStateType,\r\n    UsersType\r\n} from \"../../redux/users-reducer\";\r\nimport axios from \"axios\";\r\nimport {Users} from \"./Users\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Preloader} from \"../common/Preloader/Preloader\";\r\n\r\n//types:\r\ntype UsersContainerPropsType = {}\r\ntype mapStateToPropsType = {\r\n    usersPage: UsersInitialStateType\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n}\r\ntype mapDispatchToPropsType = {\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n    setUsers: (users: Array<UsersType>) => void\r\n    setCurrentPage: (pageNumber: number) => void\r\n    setTotalUsersCount: (totalCount: number) => void\r\n    setIsFetching: (isFetching: boolean) => void\r\n}\r\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\r\n\r\n//class container component:\r\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType, any> {\r\n\r\n    componentDidMount() {\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n            this.props.setTotalUsersCount(response.data.totalCount);\r\n        });\r\n    }\r\n\r\n    //onPageChanged Fn for pagination:\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.setIsFetching(true);\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\r\n            this.props.setIsFetching(false);\r\n            this.props.setUsers(response.data.items);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isFetching\r\n                        ? <Preloader/>\r\n                        : <Users\r\n                            usersPage={this.props.usersPage}\r\n                            pageSize={this.props.pageSize}\r\n                            totalUsersCount={this.props.totalUsersCount}\r\n                            currentPage={this.props.currentPage}\r\n                            follow={this.props.follow}\r\n                            unFollow={this.props.unFollow}\r\n                            setUsers={this.props.setUsers}\r\n                            setCurrentPage={this.props.setCurrentPage}\r\n                            setTotalUsersCount={this.props.setTotalUsersCount}\r\n                            onPageChanged={this.onPageChanged}\r\n                        />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        usersPage: state.usersPage,\r\n        pageSize: state.usersPage.pageSize,\r\n        totalUsersCount: state.usersPage.totalUsersCount,\r\n        currentPage: state.usersPage.currentPage,\r\n        isFetching: state.usersPage.isFetching\r\n    }\r\n}\r\n\r\n\r\n//HOC:\r\nconst UsersContainer = connect<mapStateToPropsType,mapDispatchToPropsType,UsersContainerPropsType,AppStateType>(mapStateToProps,\r\n    {\r\n        follow,\r\n        unFollow,\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        setIsFetching,\r\n    }\r\n)(UsersClassContainer);\r\n\r\n\r\nexport {\r\n    UsersContainer\r\n}","import React from \"react\";\r\nimport styles from \"./ProfileInfo.module.css\";\r\nimport {Preloader} from \"../../common/Preloader/Preloader\";\r\nimport {ProfilePageType} from \"../../../redux/profile-reducer\";\r\nimport defaultSmallUserPhoto from \"../../../assets/images/defaultSmallUserPhoto.png\";\r\n\r\n//types:\r\ntype  ProfileInfoPropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//function component:\r\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\r\n\r\n    const state = props.profile;//!!!\r\n\r\n    if (!state) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <img src=\"https://i.redd.it/om4a8r7glhx21.png\" alt=\"\"/>\r\n            </div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={\r\n                    state.photos.large !== null\r\n                        ? state.photos.large\r\n                        : defaultSmallUserPhoto //defaultAsset\r\n                }/>\r\n                <b>{state.fullName}</b>\r\n                {/*<div>{state.aboutMe}</div>*/}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ProfileInfo\r\n}","//types:\r\ntype PostType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n}\r\nexport type ProfileInitialStateType = {\r\n    posts: Array<PostType>\r\n    newPostText: string\r\n    profile: ProfilePageType | null\r\n}\r\n\r\nexport type ProfilePageType = {\r\n    aboutMe: string,\r\n    contacts: LinksType,\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: null | string,\r\n    fullName: string,\r\n    userId: number,\r\n    photos: PhotosType\r\n}\r\ntype LinksType = {\r\n    facebook: null | string,\r\n    website: null | string,\r\n    vk: null | string,\r\n    twitter: null | string,\r\n    instagram: null | string,\r\n    youtube: null | string,\r\n    github: null | string,\r\n    mainLink: null | string\r\n}\r\nexport type PhotosType = { small: string, large: string }\r\n\r\nexport type ProfileActionType = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setNewPostText>\r\n    | ReturnType<typeof addLike>\r\n    | ReturnType<typeof removeLike>\r\n    | ReturnType<typeof setProfile>\r\n\r\n//initialState:\r\nconst initialState: ProfileInitialStateType = {\r\n    posts: [\r\n        {id: 1, message: \"Hi dude\", likesCount: 2, isLiked: false},\r\n        {id: 2, message: \"nice photos!\", likesCount: 1, isLiked: false},\r\n    ],\r\n    newPostText: \"\",\r\n    profile: null\r\n}\r\n\r\n//reducer:\r\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: ProfileActionType): ProfileInitialStateType => {\r\n    switch (action.type) {\r\n        case \"SN/PROFILE/ADD_POST\": {\r\n            const stateCopy = {...state}\r\n            const newPost: PostType = {\r\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number with javascript time\r\n                message: state.newPostText,\r\n                likesCount: 0,\r\n                isLiked: false\r\n            };\r\n            stateCopy.posts = [newPost, ...state.posts];\r\n            stateCopy.newPostText = \"\";\r\n            return stateCopy;\r\n        }\r\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\r\n            const stateCopy = {...state};\r\n            stateCopy.newPostText = action.newText;\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/ADD_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/REMOVE_LIKE\": {\r\n            const stateCopy = {\r\n                ...state, posts: state.posts.map(p => {\r\n                    if (p.id === action.id) {\r\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n            return stateCopy;\r\n        }\r\n        case \"SN/PROFILE/SET_PROFILE\": {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const addPost = (newPost: string) => {\r\n    return {type: \"SN/PROFILE/ADD_POST\", newPost} as const\r\n}\r\nexport const setNewPostText = (newText: string) => {\r\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\r\n}\r\nexport const addLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\r\n}\r\nexport const removeLike = (id: number, isLiked: boolean) => {\r\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\r\n}\r\nexport const setProfile = (profile: ProfilePageType) => {\r\n    return{ type: \"SN/PROFILE/SET_PROFILE\", profile} as const\r\n}\r\n\r\nexport {\r\n    profileReducer\r\n}","import {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\r\nimport {Post} from \"./Post\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\r\n    return {\r\n        addLike: (id: number, isLiked: boolean)=>{\r\n            dispatch(addLike(id, isLiked));\r\n        },\r\n        removeLike: (id: number, isLiked: boolean)=> {\r\n            dispatch(removeLike(id, isLiked));\r\n        }\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\r\n\r\nexport {\r\n    PostContainer\r\n}","import React from \"react\";\r\nimport styles from \"./Post.module.css\"\r\n\r\n//types:\r\ntype PostPropsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n    isLiked: boolean\r\n    addLike: (id: number, isLiked: boolean) => void\r\n    removeLike: (id: number, isLiked: boolean) => void\r\n}\r\n\r\n//Functional Component:\r\nconst Post: React.FC<PostPropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.items}>\r\n            <img src='https://cdn4.iconfinder.com/data/icons/spring-festival/512/man-512.png' alt=\"\"/>\r\n            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\r\n            <span>{props.message}</span>\r\n            {/*<span >♥{props.likesCount}</span>*/}\r\n            <div>\r\n            {\r\n                props.isLiked\r\n                    ? <button onClick={() => {\r\n                        props.removeLike(props.id, props.isLiked);\r\n                    }}>Liked ♥{props.likesCount}</button>\r\n                    :\r\n                    <button onClick={() => {\r\n                        props.addLike(props.id, props.isLiked);\r\n                    }}>Like ♡{props.likesCount}</button>\r\n            }\r\n            </div>\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Post\r\n}","import {AppStateType} from \"../../../redux/redux-store\";\r\nimport {ContentArea} from \"./ContentArea\";\r\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n//types:\r\ntype mapStateToPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n}\r\ntype mapDispatchToPropsType = {\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//container component:\r\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst ContentAreaContainer = connect(mapStateToProps, {addPost, setNewPostText})(ContentArea);\r\n\r\nexport {\r\n    ContentAreaContainer\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport styles from \"./ContentArea.module.css\"\r\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\r\nimport {PostContainer} from \"./Post/PostContainer\";\r\n\r\n//types:\r\ntype ContentAreaPropsType = {\r\n    profilePage: ProfileInitialStateType\r\n    addPost: (newPostText: string) => void\r\n    setNewPostText: (newText: string) => void\r\n}\r\n\r\n//function component:\r\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\r\n\r\n    const state = props.profilePage; //state!!!\r\n\r\n    let postsElements = state.posts.map(p => <PostContainer\r\n        key={p.id}\r\n        message={p.message}\r\n        id={p.id}\r\n        likesCount={p.likesCount}\r\n        isLiked={p.isLiked}\r\n    />);\r\n\r\n    const addPostHandler = () => {\r\n        if (state.newPostText) {\r\n            props.addPost(state.newPostText);\r\n        }\r\n    }\r\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n        const newText = e.currentTarget?.value;\r\n        props.setNewPostText(newText);\r\n    }\r\n    const onKeyPressHandler = (e: React.KeyboardEvent<HTMLElement>) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault();\r\n            addPostHandler();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postBlock}>\r\n            <textarea\r\n                value={state.newPostText}\r\n                maxLength={100000}\r\n                onChange={onChangeHandler}\r\n                placeholder={\"What's new?\"}\r\n                onKeyPress={onKeyPressHandler}\r\n            />\r\n            <span>\r\n                <button onClick={addPostHandler}>Post</button>\r\n            </span>\r\n            <div className={styles.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    ContentArea\r\n}","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\r\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\r\n\r\n//types:\r\ntype ProfilePropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\n\r\n//function component:\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n\r\n    return (\r\n        <div className={styles.profile}>\r\n            <ProfileInfo profile={props.profile}/>\r\n            <ContentAreaContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport\r\n{\r\n    Profile\r\n}","import React from \"react\";\r\nimport {Profile} from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {ProfilePageType, setProfile} from \"../../redux/profile-reducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\n\r\n//types:\r\ntype ProfileContainerPropsType = {}\r\n\r\ntype mapStateToPropsType = {\r\n    profile: ProfilePageType | null\r\n}\r\ntype mapDispatchToPropsType = {\r\n    setProfile: (profile: ProfilePageType) => void\r\n}\r\ntype  PathParamsType = {\r\n    userId: any //number or string\r\n}\r\ntype ProfileClassContainerPropsType = mapStateToPropsType\r\n    & mapDispatchToPropsType\r\n    & RouteComponentProps<PathParamsType>//.props.match.params FIX\r\n\r\n//class container component:\r\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = 2;\r\n        }\r\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/` + userId).then(response => {\r\n            this.props.setProfile(response.data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Profile{...this.props} profile={this.props.profile}/>\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\n//HOC:\r\nconst WithUrlDataContainerComponent = withRouter<any, any>(ProfileClassContainer);//need add types!!!\r\n\r\nconst ProfileContainer = connect<mapStateToPropsType,\r\n    mapDispatchToPropsType,\r\n    ProfileContainerPropsType,\r\n    AppStateType>(mapStateToProps, {setProfile})(WithUrlDataContainerComponent);\r\n\r\nexport {\r\n    ProfileContainer\r\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport logo1 from \"../../assets/images/logo_part_1.png\"\r\nimport logo2 from \"../../assets/images/logo_part_2.png\"\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n//types:\r\ntype HeaderPropsType = {}\r\n\r\n//function component:\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    return (\r\n        <div className={styles.header}>\r\n            <img src={logo1}/>\r\n            <img src={logo2}/>\r\n            <div className={styles.loginBlock}>\r\n                <NavLink to={\"/profile\"}>login</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    Header\r\n}","import React from \"react\";\r\nimport {Header} from \"./Header\";\r\n\r\n//types:\r\ntype HeaderContainerPropsType = {}\r\n\r\n//function component:\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <>\r\n            <Header {...this.props}/>\r\n        </>\r\n    }\r\n}\r\n\r\nexport {\r\n    HeaderContainer\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {Header} from \"./components/Header/Header\";\r\nimport {Navbar} from \"./components/Navbar/Navbar\";\r\nimport {Route} from \"react-router-dom\";\r\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\r\nimport {Music} from \"./components/Music/Music\";\r\nimport {News} from \"./components/News/News\";\r\nimport {Settings} from \"./components/Settings/Settings\";\r\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\r\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\r\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\r\n\r\n//types:\r\ntype PropsType = {}\r\n\r\n//function component:\r\nconst App: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className=\"app-wrapper\">\r\n            <HeaderContainer/>\r\n            <Navbar/>\r\n            <div className={\"app-wrapper-content\"}>\r\n                <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer/>}/>\r\n                <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\r\n                <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\r\n                <Route path={\"/News\"} render={() => <News/>}/>\r\n                <Route path={\"/Music\"} render={() => <Music/>}/>\r\n                <Route path={\"/Settings\"} render={() => <Settings/>}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","//types:\r\n\r\ntype authReducerAT = ReturnType<typeof setAuthUserData>\r\ntype authInitialStateType = {\r\n    userId: any //number?\r\n    email: any //string?\r\n    login: any //string?\r\n    isAuth: boolean\r\n}\r\n\r\n//initialState:\r\nconst initialState: authInitialStateType = {\r\n    userId: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n//reducer:\r\nconst authReducer = (state: authInitialStateType = initialState, action: authReducerAT) => {\r\n    switch (action.type) {\r\n        case \"SN/SET_AUTH_USER_DATA\":{\r\n            return state;\r\n        }\r\n        default: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const setAuthUserData = (data: authInitialStateType) => {\r\n    return {type: \"SN/SET_AUTH_USER_DATA\", data} as const\r\n}\r\n\r\nexport {\r\n    authReducer\r\n}","import {combineReducers, createStore} from \"redux\";\r\nimport {dialogsReducer} from \"./dialogs-reducer\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {usersReducer} from \"./users-reducer\";\r\nimport {authReducer} from \"./auth-reducer\";\r\n\r\n//types:\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\n\r\n//store & rootReducer:\r\nexport const rootReducer = combineReducers({\r\n    dialogPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport {\r\n    store\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport {AppStateType} from './redux/redux-store';\r\nimport {store} from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nconst reRenderEntireThree = (state: AppStateType) => {\r\n\r\n    ReactDOM.render(\r\n        <React.StrictMode>\r\n            <BrowserRouter>\r\n                <Provider store={store}>\r\n                    <App/>\r\n                </Provider>\r\n            </BrowserRouter>\r\n        </React.StrictMode>\r\n        ,document.getElementById('root')\r\n    );\r\n}\r\n\r\nreRenderEntireThree(store.getState());\r\nstore.subscribe(() => {\r\n    reRenderEntireThree(store.getState())\r\n});\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}