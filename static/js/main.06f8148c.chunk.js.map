{"version":3,"sources":["components/Profile/Profile.module.css","components/Navbar/Navbar.module.css","components/Login/Login.module.css","components/Dialogs/Dialogs.module.css","reportWebVitals.ts","api/api.tsx","redux/auth-reducer.ts","assets/images/logo_part_1.png","assets/images/logo_part_2.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/profile-reducer.ts","assets/images/default_user_photo.png","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/ContentArea/Post/PostContainer.tsx","components/Profile/ContentArea/Post/Post.tsx","utils/validator.ts","components/common/FormControls/FormControls.tsx","components/Profile/ContentArea/ContentArea.tsx","components/Profile/ContentArea/ContentAreaContainer.tsx","components/Profile/Profile.tsx","components/common/Preloader/three-dots.svg","components/common/Preloader/Preloader.tsx","components/Profile/ProfileClassContainer.tsx","components/Music/Music.tsx","redux/users-reducer.ts","components/Users/Users.tsx","hoc/WithAuthRedirect.tsx","components/Users/UsersClassContainer.tsx","components/News/News.tsx","components/Navbar/Navbar.tsx","components/Login/Login.tsx","components/Settings/Settings.tsx","redux/dialogs-reducer.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx","redux/app-reducer.ts","App.tsx","redux/redux-store.ts","index.tsx","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ContentArea/Post/Post.module.css","components/Users/Users.module.css","components/Dialogs/Message/Message.module.css","components/common/Preloader/Preloader.module.css","components/Header/Header.module.css","components/common/FormControls/FormControls.module.css","components/Profile/ContentArea/ContentArea.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","response","data","userId","post","delete","profileAPI","getProfile","getUserStatus","updateUserStatus","status","put","authAPI","email","password","rememberMe","initialState","id","login","isAuth","setAuthUserData","type","payload","getAuthUserData","dispatch","resultCode","logoutUserThunk","Header","props","className","styles","header","to","logoArea","src","logo1","alt","logo2","loginBlock","items","onClick","HeaderClassContainer","this","React","Component","HeaderContainer","connect","state","auth","posts","message","likesCount","isLiked","newPostText","profile","setStatus","ProfileStatus","editMode","activateEditMode","setState","deactivateEditMode","onUpdateStatus","onKeyPressHandler","e","key","onStatusChange","currentTarget","value","updateStatus","prevProps","prevState","statusStaticMode","onDoubleClick","statusEditMode","autoFocus","onKeyPress","onChange","ProfileInfo","descriptionBlock","photos","large","defaultSmallUserPhoto","name","fullName","PostContainer","profilePage","addLike","removeLike","style","postMessage","reactions","requiredField","maxLengthCreator","maxValue","length","FormControl","input","meta","formControlValue","isError","touched","error","FormElement","formControl","maxLength3","PostMessageReduxForm","reduxForm","form","handleSubmit","onSubmit","inputAreaElements","Field","placeholder","component","validate","ContentAreaContainer","addPost","setNewPostText","newText","postsElements","map","p","postBlock","Profile","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","cx","cy","r","attributeName","from","begin","dur","values","calcMode","repeatCount","_ref3","fillOpacity","_ref4","SvgThreeDots","_ref","svgRef","title","titleId","width","height","viewBox","xmlns","fill","ref","ForwardRef","Preloader","main","stroke","ProfileClassContainer","match","params","authUserId","getUserProfile","preloaderStyle","ProfileContainer","compose","withRouter","Music","users","totalUsersCount","isFetching","followingInProgress","setUsers","setTotalUsersCount","totalCount","setIsFetching","setFollowingProgress","Users","usersPage","onPageChanged","setCurrentPage","unFollowThunkCreator","followThunkCreator","pagesCount","Math","ceil","pages","push","u","small","info","buttonsArea","followed","disabled","some","selectedPage","mapStateToProps","WithAuthRedirect","restProps","UsersClassContainer","pageNumber","getUsersThunkCreator","UsersContainer","News","Navbar","navbar","item","activeClassName","active","LoginReduxForm","useState","passView","setPassView","passVariation","loginForm","field","pass","cla","ssName","iconPass","formStyles","formSummaryError","checkBox","loginButton","LoginPageContainer","loginUserThunk","messages","stopSubmit","_error","loginPage","formData","Settings","dialogs","time","newMessageText","DialogItem","dialog","Message","img","defaultAvatar","content","text","Dialogs","dialogsPage","addMessage","newId","newDate","dialogElements","d","messageElements","m","AddMessageReduxForm","DialogsClassContainer","floor","Date","valueOf","random","toLocaleString","DialogsContainer","dialogPage","newMessage","initialized","App","initializeApp","isInitialized","path","render","app","promise","Promise","all","rootReducer","combineReducers","action","stateCopy","newPost","filter","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","__store__","reRenderEntireThree","ReactDOM","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.06f8148c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1LESU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__27a1U\",\"item\":\"Navbar_item__2Sz7A\",\"active\":\"Navbar_active__3wMdQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__2QSa1\",\"loginForm\":\"Login_loginForm__3_yRp\",\"field\":\"Login_field__1npoC\",\"pass\":\"Login_pass__2LVaL\",\"iconPass\":\"Login_iconPass__2mybm\",\"items\":\"Login_items__XJym6\",\"checkBox\":\"Login_checkBox__-IgJh\",\"loginButton\":\"Login_loginButton__34rpb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogsPage\":\"Dialogs_dialogsPage__30RqF\",\"dialogs\":\"Dialogs_dialogs__hPjJa\",\"dialog\":\"Dialogs_dialog__3R01s\",\"messages\":\"Dialogs_messages__2b5iv\",\"messageElements\":\"Dialogs_messageElements__BpFaC\",\"inputAreaElements\":\"Dialogs_inputAreaElements__1GU_0\",\"message\":\"Dialogs_message__2JtN6\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\nconst instance = axios.create({\n\twithCredentials: true,\n\tbaseURL: `https://social-network.samuraijs.com/api/1.0/`,\n\theaders: {\n\t\t\"API-KEY\": \"2f53ebc7-6e0c-44af-b6eb-a755cbe3639f\",\n\t},\n});\n\nexport const usersAPI = {\n\tgetUsers(currentPage: number, pageSize: number) {\n\t\treturn instance\n\t\t\t.get(`users?page=${currentPage}&count=${pageSize}`)\n\t\t\t.then((response) => {\n\t\t\t\treturn response.data;\n\t\t\t});\n\t},\n\n\tfollow(userId: number) {\n\t\treturn instance.post(`follow/${userId}`);\n\t},\n\tunFollow(userId: number) {\n\t\treturn instance.delete(`follow/${userId}`);\n\t},\n\tgetProfile(userId: number) {\n\t\tconsole.warn('Obsolete method. Please use profileAPI object');\n\t\treturn profileAPI.getProfile(userId);\n\t},\n};\n\nexport const profileAPI = {\n\tgetProfile(userId: number) {\n\t\treturn instance.get(`profile/${userId}`);\n\t},\n\tgetUserStatus(userId: number) {\n\t\treturn instance.get(`/profile/status/${userId}`);\n\t},\n\tupdateUserStatus(status: string) {\n\t\treturn instance.put(`/profile/status`, {status});\n\t},\n}\n\nexport const authAPI = {\n\tme() {\n\t\treturn instance.get(`auth/me`);\n\t},\n\tlogin(email: string, password: string, rememberMe: boolean = false) {\n\t\treturn instance.post(`/auth/login`, {email, password, rememberMe});\n\t},\n\tlogout() {\n\t\treturn instance.delete(`/auth/login`);\n\t},\n};\n","import {Dispatch} from \"redux\";\n\nimport {authAPI} from \"../api/api\";\nimport {AppActionType, AppStateType, AppThunk} from \"./redux-store\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {stopSubmit} from \"redux-form\";\n\n//types:\nexport type authReducerAT = ReturnType<typeof setAuthUserData>\n\nexport type AuthInitialStateType = {\n    id: null | number\n    email: null | string\n    login: null | string\n    isAuth: boolean\n}\n\n//initialState:\nconst initialState: AuthInitialStateType = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false,\n}\n\n//reducer:\nconst authReducer = (state: AuthInitialStateType = initialState, action: AppActionType): AuthInitialStateType => {\n    switch (action.type) {\n        case \"SN/AUTH/SET_AUTH_USER_DATA\": {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\n    return {type: \"SN/AUTH/SET_AUTH_USER_DATA\", payload: {id, email, login, isAuth} } as const\n}\n\n//thunk creators:\nexport const getAuthUserData = (): AppThunk => {\n    return (dispatch: Dispatch<authReducerAT>) => {\n        return authAPI\n            .me()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    let {id, email, login} = response.data.data; //payload = id, email, login, isAuth\n\n                    debugger\n                    dispatch(setAuthUserData(id, email, login,  true));\n                }\n            });\n    }\n}\n\nexport const loginUserThunk = (email: string, password: string, rememberMe: boolean) : AppThunk => {\n    return (dispatch) => {\n        authAPI\n            .login(email, password, rememberMe)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(getAuthUserData());\n                } else {\n                    let messages = response.data.messages.length > 0 ? response.data.messages : \"Some error\"\n                    //@ts-ignore\n                    dispatch(stopSubmit(\"login\",{_error: messages})); //TYPES !!!\n                }\n            });\n    }\n}\n\nexport const logoutUserThunk = (): AppThunk => {\n    return (dispatch) => {\n        authAPI\n            .logout()\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(setAuthUserData(null, null, null, false));\n                }\n            });\n    }\n}\n\nexport {\n    authReducer\n}","export default __webpack_public_path__ + \"static/media/logo_part_1.230df42a.png\";","export default __webpack_public_path__ + \"static/media/logo_part_2.7aafc755.png\";","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport styles from \"./Header.module.css\";\nimport logo1 from \"../../assets/images/logo_part_1.png\";\nimport logo2 from \"../../assets/images/logo_part_2.png\";\n\n//types:\ntype HeaderPropsType = {\n    isAuth: boolean\n    login: null | string\n    logoutUserThunk: () => void\n}\n\n//functional component:\nconst Header: React.FC<HeaderPropsType> = (props) => {\n\n    const {\n        isAuth,\n        login,\n        logoutUserThunk,\n    } = props;\n\n    //logout request:\n    const logout = () => {\n        logoutUserThunk();\n    }\n\n    return (\n        <div className={styles.header}>\n\n            <NavLink to={\"/news\"} className={styles.logoArea}>\n                <div>\n                    <img src={logo1} alt=\"logoPart1\"/>\n                </div>\n                <div>\n                    <img src={logo2} alt=\"logoPart2\"/>\n                </div>\n            </NavLink>\n            <div className={styles.loginBlock}>\n                {\n                    isAuth\n                        ? <div className={styles.items}>\n                            <div>\n                                {/*<img src={                    //<-- no photo yet\n                                    props.photos.small !== null\n                                        ? props.photos.small\n                                        : defaultSmallUserPhoto //defaultAsset\n                                }/>*/}\n                            </div>\n                            <div>{login} </div>\n                            <NavLink to={\"/login\"} onClick={logout}>Logout</NavLink>\n                        </div>\n                        : <div className={styles.items}>\n                            <NavLink to={\"/login\"}>Login </NavLink>\n                            <NavLink to={\"/login\"}>Sign up </NavLink>\n                        </div>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Header\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\n\nimport { logoutUserThunk, setAuthUserData} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Header} from \"./Header\";\n\n//types:\ntype mapStateToPropsType = {\n    isAuth: boolean\n    login: null | string\n}\n\ntype mapDispatchToPropsType = {\n    setAuthUserData: (userId: number | null, email: string | null, login: string | null, isAuth: boolean) => void //test\n    logoutUserThunk: () => void\n}\ntype HeaderClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n        login: state.auth.login,\n    }\n}\n\nclass HeaderClassContainer extends React.Component<HeaderClassContainerPropsType> {\n\trender() {\n\t\treturn <Header {...this.props} />\n\t}\n}\n\n//HOC:\nconst HeaderContainer = connect<mapStateToPropsType,\n    mapDispatchToPropsType, {},\n    AppStateType>(mapStateToProps, {\n        setAuthUserData,\n        logoutUserThunk,\n    })(HeaderClassContainer);\n\nexport {\n    HeaderContainer\n}","import {Dispatch} from \"redux\";\n\nimport {profileAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype PostType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n}\nexport type ProfileInitialStateType = {\n    posts: Array<PostType>\n    newPostText: string\n    profile: ProfilePageType | null\n    status: string | null\n}\n\nexport type ProfilePageType = {\n    aboutMe: string,\n    contacts: LinksType,\n    lookingForAJob: boolean,\n    lookingForAJobDescription: null | string,\n    fullName: string,\n    userId: number,\n    photos: PhotosType\n}\ntype LinksType = {\n    facebook: null | string,\n    website: null | string,\n    vk: null | string,\n    twitter: null | string,\n    instagram: null | string,\n    youtube: null | string,\n    github: null | string,\n    mainLink: null | string\n}\nexport type PhotosType = { small: string, large: string }\n\nexport type ProfileActionType = ReturnType<typeof addPost>\n    | ReturnType<typeof setNewPostText>\n    | ReturnType<typeof addLike>\n    | ReturnType<typeof removeLike>\n    | ReturnType<typeof setProfile>\n    | ReturnType<typeof setStatus>\n\n\n//initialState:\nconst initialState: ProfileInitialStateType = {\n    posts: [\n        {\n            id: 21313,\n            message: \"testPost\",\n            likesCount: 1,\n            isLiked: false\n        }\n    ],\n    newPostText: \"\",\n    profile: null,\n    status: null\n}\n\n//reducer:\nconst profileReducer = (state: ProfileInitialStateType = initialState, action: AppActionType): ProfileInitialStateType => {\n\n    switch (action.type) {\n        case \"SN/PROFILE/ADD_POST\": {\n            const stateCopy = {...state}\n            const newPost: PostType = {\n                id: Math.floor(new Date().valueOf() * Math.random()), //Create a unique number using javaScriptTime\n                message: action.newPostText,\n                likesCount: 0,\n                isLiked: false\n            };\n            stateCopy.posts = [newPost, ...state.posts];\n\n            return stateCopy;\n        }\n        case\"SN/PROFILE/SET_NEW_POST_TEXT\": {\n            const stateCopy = {...state};\n            stateCopy.newPostText = action.newText;\n            return stateCopy;\n        }\n        case \"SN/PROFILE/ADD_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: true, likesCount: p.likesCount + 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/REMOVE_LIKE\": {\n            const stateCopy = {\n                ...state, posts: state.posts.map(p => {\n                    if (p.id === action.id) {\n                        return {...p, isLiked: false, likesCount: p.likesCount - 1}\n                    }\n                    return p;\n                })\n            }\n            return stateCopy;\n        }\n        case \"SN/PROFILE/SET_PROFILE\": {\n            return {...state, profile: action.profile}\n        }\n        case \"SN/PROFILE/SET_STATUS\":\n            return {...state, status: action.status}\n        default:\n            return state;\n    }\n}\n\n//action creators:\nexport const addPost = (newPostText: string) => {\n    return {type: \"SN/PROFILE/ADD_POST\", newPostText} as const\n}\nexport const setNewPostText = (newText: string) => {\n    return {type: \"SN/PROFILE/SET_NEW_POST_TEXT\", newText} as const\n}\nexport const addLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/ADD_LIKE\", id, isLiked} as const\n}\nexport const removeLike = (id: number, isLiked: boolean) => {\n    return {type: \"SN/PROFILE/REMOVE_LIKE\", id, isLiked} as const\n}\nexport const setProfile = (profile: ProfilePageType) => {\n    return {type: \"SN/PROFILE/SET_PROFILE\", profile} as const\n}\nexport const setStatus = (status: string) => {\n    return {type: \"SN/PROFILE/SET_STATUS\", status} as const\n}\n\n\n//thunk creators:\nexport const getUserProfile = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getProfile(userId)\n            .then(response => {\n                dispatch(setProfile(response.data));\n            });\n    }\n}\nexport const getUserStatus = (userId: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .getUserStatus(userId) //+userId ??\n            .then(response => {\n                dispatch(setStatus(response.data));\n            });\n    }\n}\nexport const updateUserStatus = (status: string) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        profileAPI\n            .updateUserStatus(status)\n            .then(response => {\n                if (response.data.resultCode === 0){\n                    dispatch(setStatus(status));\n                }\n            });\n    }\n}\n\nexport {\n    profileReducer\n}","export default __webpack_public_path__ + \"static/media/default_user_photo.5364f1ba.png\";","import React from \"react\";\n\nimport styles from \"./ProfileInfo.module.css\"\n\n//types:\ntype ProfileStatusPropsType = {\n    status: string | null\n    updateStatus: (status: string) => void\n}\ntype LocalStateType = {\n    editMode: boolean\n    status: string | null\n}\n\n//class component:\nclass ProfileStatus extends React.Component<ProfileStatusPropsType> {\n\n    //localState for status:\n    state: LocalStateType = {\n        editMode: false,\n        status: this.props.status,\n    }\n\n    //on&off edit mode of status:\n    activateEditMode = () => {\n        this.setState({editMode: true});\n    }\n    deactivateEditMode = () => {\n        this.setState({editMode: false});\n        this.onUpdateStatus();\n    }\n    onKeyPressHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            this.deactivateEditMode();\n        }\n    }\n\n    //onchange localState of status:\n    onStatusChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        this.setState({status: e.currentTarget.value});\n    }\n\n    //update status callback  function from local state to global state:\n    onUpdateStatus = () => {\n        if (this.state.status){\n            this.props.updateStatus( this.state.status);\n        } else {\n            this.props.updateStatus( ''); //NEED TO FIX !!!!\n        }\n    }\n\n    //re-rendering of status's local state if its props have changed:\n    componentDidUpdate(prevProps: ProfileStatusPropsType, prevState: any) { //need to check types!!!\n        if (prevProps.status !== this.props.status){\n            this.setState({status: this.props.status});\n        }\n    }\n\n    render() {\n        return (\n            <>\n                {\n                    !this.state.editMode &&\n                        <div>\n                            <div className={styles.statusStaticMode} onDoubleClick={this.activateEditMode}>{\n                                this.props.status\n                                    ? this.props.status\n                                    : \"set status\"\n                            }</div>\n                        </div>\n                }\n\n                {\n                    this.state.editMode &&\n                        <div className={`${styles.statusEditMode}`}>\n                            <div>\n                                <input\n                                    autoFocus\n                                    /*onBlur={this.deactivateEditMode}*/\n                                    onKeyPress={this.onKeyPressHandler}\n                                    value={`${this.state.status}`}  //NEED TO FIX !!!!\n                                    onChange={this.onStatusChange}\n                                />\n                            </div>\n                            <div>\n                                <button\n                                onClick={this.deactivateEditMode}\n                                >save</button>\n                            </div>\n                        </div>\n                }\n\n            </>\n        )\n    }\n}\n\nexport  {\n    ProfileStatus\n}","import React from \"react\";\n\nimport defaultSmallUserPhoto from \"../../../assets/images/default_user_photo.png\";\nimport { Preloader } from \"../../common/Preloader/Preloader\";\nimport { ProfilePageType } from \"../../../redux/profile-reducer\";\nimport styles from \"./ProfileInfo.module.css\";\nimport preloaderStyle from \"../../common/Preloader/Preloader.module.css\";\nimport {ProfileStatus} from \"./ProfileStatus\";\n\n//types:\ntype  ProfileInfoPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n}\n\n//functional component:\nconst ProfileInfo: React.FC<ProfileInfoPropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n    } = props;\n\n    //user would see preloader while response has not confirmed: // added to profileContainer\n    /*if (!profile) {\n        return (\n            <>\n                <div className={preloaderStyle.main}>\n                    <Preloader/>\n                </div>\n            </>\n        )\n    }*/\n\n    return (\n        <div>\n            <div className={styles.descriptionBlock}>\n\n                <img src={\n                    profile?.photos.large !== null\n                        ? profile?.photos.large\n                        : defaultSmallUserPhoto //defaultAsset\n                } alt={\"smallUserPhoto\"}/>\n\n                <div className={styles.items}>\n                    <div className={styles.name}>\n                        <b>{profile?.fullName}</b>\n                    </div>\n                    <ProfileStatus\n                        updateStatus={updateStatus}\n                        status={status}\n                    />\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    ProfileInfo\n}","import {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {AppStateType} from \"../../../../redux/redux-store\";\nimport {addLike, ProfileInitialStateType, removeLike} from \"../../../../redux/profile-reducer\";\nimport {Post} from \"./Post\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\nconst mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addLike: (id: number, isLiked: boolean)=>{\n            dispatch(addLike(id, isLiked));\n        },\n        removeLike: (id: number, isLiked: boolean)=> {\n            dispatch(removeLike(id, isLiked));\n        }\n    }\n}\n\n//HOC:\nconst PostContainer = connect(mapStateToProps,mapDispatchToProps)(Post);\n\nexport {\n    PostContainer\n}","import React from \"react\";\n\nimport style from \"./Post.module.css\"\nimport defaultSmallUserPhoto from \"../../../../assets/images/default_user_photo.png\"\n\n//types:\ntype PostPropsType = {\n    id: number\n    message: string\n    likesCount: number\n    isLiked: boolean\n    addLike: (id: number, isLiked: boolean) => void\n    removeLike: (id: number, isLiked: boolean) => void\n}\n\n//functional component:\nconst Post: React.FC<PostPropsType> = (props) => {\n\n    return (\n        <>\n            <hr/>\n            <div className={style.post}>\n                <div className={style.items}>\n                    <div>\n                        {/*need to fix: */}\n                        <img src={defaultSmallUserPhoto} alt=\"defaultSmallUserPhoto\"/>\n                        {/* <img src={\n                        u.photos.small !== null\n                            ? u.photos.small\n                            : defaultSmallUserPhoto //defaultAsset\n                    } alt=\"defaultSmallUserPhoto\"/>*/}\n                    </div>\n                    <div className={style.postMessage}>\n                        <div className={style.name}>\n                            <b>{\"UserName\"} </b> {/*<-- props.UserName !!!*/}\n                        </div>\n                        <div className={style.message}>\n                            <div>{props.message}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className={style.reactions}>\n                    <div>\n                        {\n                            props.isLiked\n                                ? <button onClick={() => {\n                                    props.removeLike(props.id, props.isLiked);\n                                }}>Liked ♥{props.likesCount}</button>\n                                :\n                                <button onClick={() => {\n                                    props.addLike(props.id, props.isLiked);\n                                }}>Like ♡{props.likesCount}</button>\n                        }\n                    </div>\n                    <div> <button> Write comment</button> </div>\n                    <div> <button> Share</button> </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport {\n    Post\n}","//checking that а field are not empty:\r\nexport const requiredField = (value: any) => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\n//checking that а field has not much length than required:\r\nexport const maxLengthCreator = (maxValue: any) => {\r\n    return function (value: any) {\r\n        if (value && value.length > maxValue) return `Max length is ${maxValue} symbols`;\r\n        return undefined;\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport styles from \"./FormControls.module.css\"\r\n\r\n//types:\r\ntype FormControlType = any //{ input: any, meta: any, FormValue: string} //need to fix any fnd check types!!! (meta has: touched, error...)\r\n\r\n//functional component:\r\nconst  FormControl: React.FC<FormControlType> = ({input, meta, ...props}) => {\r\n\r\n    const {\r\n        formControlValue,\r\n    } = props;\r\n\r\n    //if field is touched activate error\r\n    const isError = meta.touched && meta.error;\r\n    const FormElement = formControlValue;\r\n\r\n    return (\r\n        <div className={ isError && `${styles.formControl} ${styles.error}`}>\r\n            <div>\r\n                <FormElement {...input} {...props}/>\r\n            </div>\r\n            {isError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {\r\n    FormControl\r\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./ContentArea.module.css\"\nimport {ProfileInitialStateType} from \"../../../redux/profile-reducer\";\nimport {PostContainer} from \"./Post/PostContainer\";\nimport {maxLengthCreator, requiredField} from \"../../../utils/validator\";\nimport {FormControl} from \"../../common/FormControls/FormControls\";\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype PostMessageFormType = any //need to fix any!!!\ntype ContentAreaPropsType = {\n    profilePage: ProfileInitialStateType\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//functional component:\nconst ContentArea: React.FC<ContentAreaPropsType> = (props) => {\n\n    const {\n        profilePage,\n        addPost,\n        setNewPostText, //need to delete\n    } = props;\n\n    let postsElements = profilePage.posts.map(p =>\n        <PostContainer\n            key={p.id}\n            message={p.message}\n            id={p.id}\n            likesCount={p.likesCount}\n            isLiked={p.isLiked}\n        />\n    )\n\n    const addPostHandler = (value: any) => { //need to fix any!!!\n        if (value.newPostText) {\n            addPost(value.newPostText);\n        }\n    }\n\n    return (\n        <div className={styles.postBlock}>\n            <PostMessageReduxForm onSubmit={addPostHandler}/>\n            <div className={styles.posts}>\n                {\n                    postsElements\n                }\n            </div>\n        </div>\n    );\n}\n\nconst maxLength3 = maxLengthCreator(3);//test value!!!\n\nconst PostMessageForm: React.FC<PostMessageFormType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.inputAreaElements}>\n            <div>\n                <Field\n                    placeholder={\"What's new?\"}\n                    name={\"newPostText\"}\n                    component={FormControl}\n                    formControlValue={\"textarea\"}\n                    validate={[requiredField, maxLength3]}\n                />\n            </div>\n            <div>\n                <button>Post</button>\n            </div>\n        </form>\n    );\n}\n\n//reduxForm HOC:\nconst PostMessageReduxForm = reduxForm<confPropsType, any>({form: 'postMessageReduxForm'})(PostMessageForm); //need to check types!!!\n\nexport {\n    ContentArea\n}","import {connect} from \"react-redux\";\n\nimport {ContentArea} from \"./ContentArea\";\nimport {AppStateType} from \"../../../redux/redux-store\";\nimport {addPost, ProfileInitialStateType, setNewPostText} from \"../../../redux/profile-reducer\";\n\n//types:\ntype mapStateToPropsType = {\n    profilePage: ProfileInitialStateType\n}\ntype mapDispatchToPropsType = {\n    addPost: (newPostText: string) => void\n    setNewPostText: (newText: string) => void\n}\n\n//container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        profilePage: state.profilePage\n    }\n}\n\n//HOC:\nconst ContentAreaContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(mapStateToProps, {\n    addPost,\n    setNewPostText\n})(ContentArea);\n\nexport {\n    ContentAreaContainer\n}","import React from \"react\";\n\nimport styles from \"./Profile.module.css\";\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {ContentAreaContainer} from \"./ContentArea/ContentAreaContainer\";\nimport {ProfilePageType} from \"../../redux/profile-reducer\";\nimport {Redirect} from \"react-router-dom\";\n\n//types:\ntype ProfilePropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    updateStatus: (status: string) => void\n    isAuth: boolean\n}\n\n//functional component:\nconst Profile: React.FC<ProfilePropsType> = (props) => {\n\n    const {\n        profile,\n        status,\n        updateStatus,\n        isAuth,\n    } = props;\n\n    //redirect users to loginPage after logout:\n    if (!isAuth){\n        return <Redirect to={\"/login\"}/>\n    }\n\n    return (\n        <div className={styles.profile}>\n            <ProfileInfo\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n\n            <ContentAreaContainer/>\n        </div>\n    )\n}\n\nexport {\n    Profile\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 15,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 60,\n  cy: 15,\n  r: 9,\n  fillOpacity: 0.3\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 9,\n  to: 9,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"9;15;9\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 0.5,\n  to: 0.5,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \".5;1;.5\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 105,\n  cy: 15,\n  r: 15\n}, /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"r\",\n  from: 15,\n  to: 15,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"15;9;15\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), /*#__PURE__*/React.createElement(\"animate\", {\n  attributeName: \"fill-opacity\",\n  from: 1,\n  to: 1,\n  begin: \"0s\",\n  dur: \"0.8s\",\n  values: \"1;.5;1\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}));\n\nfunction SvgThreeDots(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 120,\n    height: 30,\n    viewBox: \"0 0 120 30\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"#fff\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3, _ref4);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThreeDots);\nexport default __webpack_public_path__ + \"static/media/three-dots.b98a8c76.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\n\nimport {ReactComponent as PreloaderLogo} from \"./three-dots.svg\";\nimport styles from \"./Preloader.module.css\";\n\n//types:\ntype PreloaderPropsType = {}\n\n//functional component:\nconst Preloader: React.FC<PreloaderPropsType> = (props) => {\n\n    //loading:\n    return (\n        <div className={styles.main}>\n            <PreloaderLogo fill=\"#2b3f4f\" stroke=\"current\"/>\n        </div>\n    )\n}\n\nexport {\n    Preloader\n}\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\n\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {getUserProfile, getUserStatus, ProfilePageType, updateUserStatus} from \"../../redux/profile-reducer\";\nimport {Profile} from \"./Profile\";\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\n\n//types:\ntype mapStateToPropsType = {\n    profile: ProfilePageType | null\n    status: string | null\n    isAuth: boolean\n    authUserId: number | null  // number or string ???\n}\ntype mapDispatchToPropsType = {\n    getUserProfile: (userId: number) => void\n    getUserStatus: (userId: number) => void\n    updateUserStatus: (status: string) => void\n}\ntype  PathParamsType = {\n    userId: string //need string\n}\ntype ProfileClassContainerPropsType = mapStateToPropsType\n    & mapDispatchToPropsType\n    & RouteComponentProps<PathParamsType> //.props.match.params FIX\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n\n    return {\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        isAuth: state.auth.isAuth,\n        authUserId: state.auth.id\n\n    }\n}\n\n//class container component:\nclass ProfileClassContainer extends React.Component<ProfileClassContainerPropsType> {\n\n\n    componentDidMount() {\n\n        //profile userId:\n        let userId: string = this.props.match.params.userId;\n\n        if (!userId) {\n            userId = `${this.props.authUserId}`\n        }\n        if (userId) {\n            //usersAPI.getProfile() & profileAPI.getUserStatus() responses, (\"+\" for to string):\n            this.props.getUserProfile(+userId);\n            this.props.getUserStatus(+userId);\n        }\n    }\n\n    render() {\n        return <>\n            {\n                this.props.profile\n                    ? <Profile\n                        {...this.props}\n                        profile={this.props.profile}\n                        status={this.props.status}\n                        updateStatus={this.props.updateUserStatus}\n                    />\n                    //user would see preloader while response has not confirmed:\n                    : <div className={preloaderStyle.main}><Preloader/></div> //need to delete this from profileInfo?\n            }\n        </>\n    }\n}\n\n//HOC:\nconst ProfileContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            getUserProfile,\n            getUserStatus,\n            updateUserStatus,\n        }\n    ),\n    withRouter,\n)(ProfileClassContainer);\n\nexport {\n    ProfileContainer\n}\n\n","import React from \"react\";\n\n//types:\ntype MusicPropsType = {}\n\n//functional component:\nconst Music: React.FC<MusicPropsType> = (props) => {\n    return (\n        <div>\n            Music Page's Content\n        </div>\n    )\n}\n\nexport {\n    Music\n}","import { Dispatch } from \"redux\";\n\nimport {usersAPI} from \"../api/api\";\nimport {AppActionType} from \"./redux-store\";\n\n//types:\ntype LocationType = {\n    country: string\n    city: string\n}\ntype PhotosType = {\n    small: string\n    large: string\n}\nexport type UsersType = {\n    id: number\n    followed: boolean\n    photos: PhotosType\n    name: string\n    status: string\n    location: LocationType\n}\nexport type UsersInitialStateType = {\n    users: Array<UsersType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number,\n    isFetching: boolean,\n    followingInProgress: any[]\n}\nexport type UsersActionType = | ReturnType<typeof follow>\n    | ReturnType<typeof unFollow>\n    | ReturnType<typeof setUsers>\n    | ReturnType<typeof setCurrentPage>\n    | ReturnType<typeof setTotalUsersCount>\n    | ReturnType<typeof setIsFetching>\n    | ReturnType<typeof setFollowingProgress>\n\n//initialState:\nconst initialState: UsersInitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 19,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\n//reducer:\nconst usersReducer = (state: UsersInitialStateType = initialState, action: AppActionType) => {\n    switch (action.type) {\n        case \"SN/USERS/FOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: true}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/UNFOLLOW\": {\n            return {\n                ...state, users: state.users.map(u => {\n                    if (u.id === action.id) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        }\n        case \"SN/USERS/SET_USERS\": {\n            return {...state, users: [...action.users]} //need to return {...state, users: [...state.users, ...action.users]} (declined)\n        }\n        case \"SN/USERS/SET_CURRENT_PAGE\": {\n            return {...state, currentPage: action.currentPage}\n        }\n        case \"SN/USERS/SET_TOTAL_USERS_COUNT\": {\n            return {...state, totalUsersCount: action.totalCount}\n        }\n        case \"SN/USERS/SET_IS_FETCHING\": {\n            return {...state, isFetching: action.isFetching}\n        }\n        case \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\": {\n            return {...state, followingInProgress: action.followingInProgress\n                    ? [...state.followingInProgress, action.id]\n                    : [...state.followingInProgress.filter(id => id !== action.id)]\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\n//action creators:\nexport const follow = (id: number) => {\n    return {type: \"SN/USERS/FOLLOW\", id} as const\n}\nexport const unFollow = (id: number) => {\n    return {type: \"SN/USERS/UNFOLLOW\", id} as const\n}\nexport const setUsers = (users: Array<UsersType>) => {\n    return {type: \"SN/USERS/SET_USERS\", users} as const\n}\nexport const setCurrentPage = (currentPage: number) => {\n    return {type: \"SN/USERS/SET_CURRENT_PAGE\", currentPage} as const\n}\nexport const setTotalUsersCount = (totalCount: number) => {\n    return {type: \"SN/USERS/SET_TOTAL_USERS_COUNT\", totalCount} as const\n}\nexport const setIsFetching = (isFetching: boolean) => {\n    return {type: \"SN/USERS/SET_IS_FETCHING\", isFetching} as const\n}\nexport const setFollowingProgress = (followingInProgress: boolean, id: number) => {\n    return {type: \"SN/USERS/TOGGLE_IS_FOLLOWING_PROGRESS\", followingInProgress, id} as const\n}\n\n//thunk creators:\nexport const getUsersThunkCreator = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setIsFetching(true));\n        usersAPI\n            .getUsers(currentPage, pageSize)\n            .then(data => {\n                dispatch(setIsFetching(false));\n                dispatch(setUsers(data.items));\n                dispatch(setTotalUsersCount(data.totalCount));\n            });\n    }\n}\nexport const unFollowThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .unFollow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(unFollow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\nexport const followThunkCreator =(userId: number)=> {\n    return (dispatch: Dispatch<AppActionType>) => {\n        dispatch(setFollowingProgress(true, userId));\n        usersAPI\n            .follow(userId)\n            .then(response => {\n                if (response.data.resultCode === 0) {\n                    dispatch(follow(userId));\n                }\n                dispatch(setFollowingProgress(false, userId));\n            });\n    }\n}\n\nexport {\n    usersReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport {UsersInitialStateType, UsersType} from \"../../redux/users-reducer\";\nimport defaultSmallUserPhoto from \"../../assets/images/default_user_photo.png\"\nimport style from \"./Users.module.css\";\n\n\n//types:\ntype UsersPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    followingInProgress: any[]\n    setUsers: (users: Array<UsersType>) => void //need to delete\n    setCurrentPage: (pageNumber: number) => void //need to delete\n    setTotalUsersCount: (totalCount: number) => void //need to delete\n    onPageChanged: (p: number) => void\n\n    unFollowThunkCreator: (userId: number) => void //need rename to unFollow\n    followThunkCreator: (userId: number) => void //need rename to follow\n}\n\n//functional component:\nconst Users: React.FC<UsersPropsType> = (props) => {\n\n    const {\n        usersPage,\n        pageSize,\n        totalUsersCount,\n        currentPage,\n        followingInProgress,\n        setUsers, //need to delete\n        setCurrentPage, //need to delete\n        setTotalUsersCount, //need to delete\n        onPageChanged,\n        unFollowThunkCreator,\n        followThunkCreator,\n    } = props;\n\n    //pages for pagination:\n    const pagesCount = Math.ceil(totalUsersCount / pageSize); //.ceil rounds a number up to the next largest integer\n    const pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    return (\n        <div className={style.items}>\n            {\n                usersPage.users.map(u => <div key={u.id}>\n                    <div className={style.profile}>\n\n                        <NavLink to={'/profile/' + u.id}>\n                            <img src={\n                                u.photos.small !== null\n                                    ? u.photos.small\n                                    : defaultSmallUserPhoto //defaultAsset\n                            } alt=\"smallUserPhoto\"/>\n                        </NavLink>\n\n                        <div className={style.info}>\n                            <NavLink to={'/profile/' + u.id}>\n                                <div className={style.name}>{u.name}</div>\n                            </NavLink>\n                        </div>\n                    </div>\n\n                    <div className={style.buttonsArea}>\n                        <div>\n                            {\n                                u.followed\n                                    ? <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            unFollowThunkCreator(u.id);\n                                        }}\n                                    >unfollow</button>\n                                    : <button\n                                        disabled={followingInProgress.some(id => id === u.id)}\n                                        onClick={() => {\n                                            followThunkCreator(u.id);\n                                        }}\n                                    >follow</button>\n                            }\n                        </div>\n                        <div>\n                            <NavLink to={'/dialogs/' + u.id}> {/*<- NavLink!!!!!!*/}\n                                <button>{\"Write message\"}</button>\n                            </NavLink>\n                        </div>\n                    </div>\n                    <hr/>\n                </div>)\n            }\n            <div>\n                {\n                    pages.map(p =>\n                        <span  //pagination\n                            className={\n                                p === currentPage\n                                    ? style.selectedPage\n                                    : ''\n                            }\n                            onClick={() => onPageChanged(p)}\n                        >{p}</span>\n                    )\n                }\n            </div>\n        </div>\n    );\n}\n\nexport {\n    Users\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport { AppStateType } from \"../redux/redux-store\";\n\n//types:\ntype mapStateToPropsType = {\n  isAuth: boolean;\n};\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n  return {\n    isAuth: state.auth.isAuth,\n  };\n};\n\n\n//container component:\nfunction WithAuthRedirect<T>(Component: React.ComponentType<T>) { //possible to make arrow function?\n\n  const RedirectComponent: React.FC<mapStateToPropsType> = (props) => {\n\n    const {\n      isAuth,\n      ...restProps\n    } = props;\n\n    if (!isAuth) {\n      return <Redirect to={\"/Login\"}/>\n    }\n    return <Component {...(restProps as T)} />\n  };\n\n  return connect(mapStateToProps)(RedirectComponent)\n}\n\nexport {\n  WithAuthRedirect\n};\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport {\n    followThunkCreator,\n    getUsersThunkCreator,\n    setCurrentPage,\n    setIsFetching,\n    setTotalUsersCount,\n    setUsers,\n    unFollowThunkCreator,\n    UsersInitialStateType,\n    UsersType\n} from \"../../redux/users-reducer\";\nimport {usersAPI} from \"../../api/api\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {Preloader} from \"../common/Preloader/Preloader\";\nimport preloaderStyle from \"../common/Preloader/Preloader.module.css\"\nimport {Users} from \"./Users\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    usersPage: UsersInitialStateType\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: any[]\n}\ntype mapDispatchToPropsType = {\n    setUsers: (users: Array<UsersType>) => void\n    setCurrentPage: (pageNumber: number) => void\n    setTotalUsersCount: (totalCount: number) => void\n    setIsFetching: (isFetching: boolean) => void\n\n    getUsersThunkCreator: (currentPage: number, pageSize: number) => void // need rename to getUsers\n    unFollowThunkCreator: (userId: number) => void //need rename to follow\n    followThunkCreator: (userId: number) => void //need rename to unFollow\n}\ntype UsersClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n\n//class container component:\nclass UsersClassContainer extends React.Component<UsersClassContainerPropsType> {\n\n    componentDidMount() {\n        //usersAPI.getUsers() request:\n        this.props.getUsersThunkCreator(this.props.currentPage,this.props.pageSize);\n    };\n\n    //onChanged function for pagination:\n    onPageChanged = (pageNumber: number) => {\n        this.props.setCurrentPage(pageNumber);\n        this.props.setIsFetching(true);\n\n        //request for re-render next page of users:\n        usersAPI\n            .getUsers(this.props.currentPage, this.props.pageSize)\n            .then(data => {\n                this.props.setIsFetching(false);\n                this.props.setUsers(data.items);\n            });\n    };\n\n    render() {\n        return (\n            <>\n                {\n                    this.props.isFetching\n                        //user would see preloader while response has not confirmed:\n                        ? <div className={preloaderStyle.main}><Preloader/></div>\n                        : <div>\n                            <Users\n                                {...this.props}\n                                onPageChanged={this.onPageChanged}\n                            />\n                        </div>\n                }\n            </>\n        );\n    };\n}\n\n\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        usersPage: state.usersPage,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress\n    };\n};\n\n//HOC:\nconst UsersContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {\n            setUsers,\n            setCurrentPage,\n            setTotalUsersCount,\n            setIsFetching,\n            getUsersThunkCreator, //need rename to getUsers\n            unFollowThunkCreator, //need rename to unFollow\n            followThunkCreator,  //need rename to follow\n        }),\n    WithAuthRedirect,\n)(UsersClassContainer);\n\nexport {\n    UsersContainer\n};","import React from \"react\";\n\n//types:\ntype NewsPropsType = {}\n\n//functional component:\nconst News: React.FC<NewsPropsType> = (props) => {\n    return (\n        <div>\n            News Page's Content\n        </div>\n    )\n}\n\nexport {\n    News\n}","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport style from \"./Navbar.module.css\";\n\n//types:\ntype NavbarPropsType = {}\n\n//functional component:\nconst Navbar: React.FC<NavbarPropsType> = (props) => {\n    return (\n        <div className={style.navbar}>\n            <div className={style.item}>\n                <NavLink to={\"/Profile\"} activeClassName={style.active}>My profile</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/News\"} activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Dialogs\"} activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Users\"} activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Music\"} activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to={\"/Settings\"} activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport {\n    Navbar\n}","import React, {useState} from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {ThunkAction} from \"redux-thunk\";\n\nimport styles from \"./Login.module.css\"\nimport {authReducerAT, loginUserThunk, logoutUserThunk} from \"../../redux/auth-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {FormControl} from \"../common/FormControls/FormControls\";\nimport {requiredField} from \"../../utils/validator\";\nimport formStyles from \"./../common/FormControls/FormControls.module.css\"\n\n//types:\ntype confPropsType = {\n    form: string;\n}\ntype passType = 'password' | 'text'\ntype LoginPagePropsType = any //need to fix any\ntype LoginFormPropsType = any //need to fix any\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\ntype mapDispatchToPropsType = {\n    loginUserThunk: (\n        email: string,\n        password: string,\n        rememberMe: boolean\n    ) => ThunkAction<void, AppStateType, unknown, authReducerAT>\n    logoutUserThunk:  () => ThunkAction<void, AppStateType, unknown, authReducerAT>\n}\nexport type LoginPropertiesType = {\n    email: string\n    password: string\n    rememberMe: boolean\n    /*captcha: boolean*/\n}\n\n//functional component:\nconst LoginForm: React.FC<LoginFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n        error,\n    } = props;\n\n    //local state for password view type:\n    const [passView, setPassView] = useState<boolean>(false);\n    //style for password view:\n    const passVariation: passType = passView ?  'text' :  'password';\n\n    //change password view type handler function:\n    const showPasswordHandler = () => {\n        if (passView) {\n            setPassView(false);\n        } else {\n            setPassView(true);\n        }\n    }\n\n    return (\n        <div className={styles.loginForm}>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <Field\n                        className={styles.field}\n                        placeholder={\"email\"}\n                        name={\"email\"}\n                        component={FormControl}\n                        formControlValue={\"input\"}\n                        validate={[requiredField]}\n                    />\n                </div>\n                <div className={styles.pass}>\n                    <Field\n                        cla ssName={styles.field}\n                        placeholder={\"Password\"}\n                        name={\"password\"}\n                        component={FormControl}\n                        formControlValue={\"input\"}\n                        validate={[requiredField]}\n                        type={passVariation}\n                    />\n                    <div className={styles.iconPass} onClick={showPasswordHandler}>👁</div>\n                </div>\n                <div>\n                    {\n                        error && <div className={formStyles.formSummaryError}>{error}</div> //not working !!!\n                    }\n                </div>\n                <div className={styles.items}>\n                    <div className={styles.checkBox}>\n                        <Field\n                            className={\"field\"}\n                            type={\"checkbox\"}\n                            name={\"rememberMe\"}\n                            component={\"input\"}\n                        /> remember me\n                    </div>\n                    <div className={styles.loginButton}>\n                        <button>Login</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n//reduxForm HOC:\nconst LoginReduxForm = reduxForm<confPropsType,any>({form: \"login\"})(LoginForm); //need to check types & fix any !!!\n\n//mapStateToProps & functional component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.auth.isAuth,\n    }\n}\n\nconst LoginPage: React.FC<LoginPagePropsType> = (props) => {\n\n    const {\n        loginUserThunk,\n        isAuth,\n    } = props;\n\n    //login onClickHandler:\n    const onSubmit = (formData: LoginPropertiesType) => {\n        loginUserThunk(formData.email, formData.password, formData.rememberMe);\n    }\n\n    //redirect users to profile page after login:\n    if (isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return (\n        <div className={styles.loginPage}>\n            <h1>Samurai Login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\n//HOC:\nconst LoginPageContainer = connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n    mapStateToProps, {\n        loginUserThunk,\n        logoutUserThunk,\n    }\n)(LoginPage);\n\n\nexport {\n    LoginPageContainer\n}","import React from \"react\";\n\n//types:\ntype SettingsPropsType = {}\n\n//functional component:\nconst Settings: React.FC<SettingsPropsType> = (props) => {\n    return (\n        <div>\n            Settings Page's Content\n        </div>\n    )\n}\n\nexport {\n    Settings\n}","import {AppActionType} from \"./redux-store\";\n\n//types:\nexport type DialogsDataType = {\n    id: number\n    name: string\n}\nexport type MessagesDataType = {\n    id: number\n    message: string\n    time: string\n}\nexport type DialogsInitialStateType = {\n    dialogs: Array<DialogsDataType>,\n    messages: Array<MessagesDataType>,\n    newMessageText: string\n}\nexport type DialogsActionType = ReturnType<typeof addMessage>\n\n//initialState:\nconst initialState: DialogsInitialStateType = {\n    dialogs: [\n        {id: 1, name: \"Dima\"},\n        {id: 2, name: \"Sasha\"},\n    ],\n    messages: [\n        {id: 1, message: \"hello\", time: \"test 4/1/2022, 10:38:18 PM\"},\n        {id: 2, message: \"How are you?\", time: \"test 4/1/2022, 10:39:22 PM\"},\n\n    ],\n    newMessageText: \"\"\n}\n\n//reducer:\nconst dialogsReducer = (state: DialogsInitialStateType = initialState, action: AppActionType) => { //need to rename to dialogReducer\n    if (action.type === \"SN/DIALOGS/ADD_MESSAGE\") {\n        const stateCopy = {...state}\n        const newMessage: MessagesDataType = {\n            id: action.newId, //Math.floor(new Date().valueOf() * Math.random()), //Creating a unique number with javascript time method <--(side effect!!!)\n            message: action.newMessage,\n            time: action.newDate//new Date().toLocaleString(), //Get Current Date & Time function <--(side effect!!!)\n        };\n        stateCopy.messages = [...state.messages, newMessage];\n        return stateCopy;\n    } else {\n        return state;\n    }\n}\n\n//action creators:\nexport const addMessage = (newId: number, newMessage: string, newDate: string) => {\n    return {type: \"SN/DIALOGS/ADD_MESSAGE\", newId, newMessage, newDate} as const\n}\n\nexport {\n    dialogsReducer\n}","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\nimport style from \"../Dialogs.module.css\";\n\n//types:\ntype DialogPropsType = {\n    id: number\n    name: string\n}\n\n//functional component:\nconst DialogItem: React.FC<DialogPropsType> = (props) => {\n\n    const {\n        id,\n        name,\n    } = props;\n\n    return (\n        <div className={style.dialog + '' + style.active}>\n            <NavLink to={\"/dialogs/\" + id}>{name}</NavLink>\n        </div>\n    )\n}\n\nexport {\n    DialogItem\n}","import React from \"react\";\n\nimport styles from \"./Message.module.css\";\nimport defaultAvatar from \"../../../assets/images/default_user_photo.png\"\n\n//types:\ntype MessagePropsType = {\n    id: number //?\n    message: string\n    time: string\n}\n\n//function component:\nconst Message: React.FC<MessagePropsType> = (props) => {\n\n    const {\n        id, //?\n        message,\n        time,\n    } = props;\n\n    return (\n        <div className={styles.message}>\n            <img className={styles.img} alt=\"userPhoto\" src={defaultAvatar}/>\n            <div className={styles.content}>\n                <div className={styles.name}>userName</div>\n                <div className={styles.text}>{message}</div>\n                <div className={styles.time}>{time}</div>\n            </div>\n        </div>\n\n    )\n}\n\nexport {\n    Message\n}","import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\n\nimport styles from \"./Dialogs.module.css\"\nimport {DialogsInitialStateType} from \"../../redux/dialogs-reducer\";\nimport {DialogItem} from \"./DialogItem/DialogItem\";\nimport {Message} from \"./Message/Message\";\nimport {FormControl} from \"../common/FormControls/FormControls\";\nimport {maxLengthCreator, requiredField} from \"../../utils/validator\";\n\n\n//types:\ntype confPropsType = {\n    form: string\n}\n\ntype AddMessageFormPropsType = any //need to fix any!!!\ntype DialogsPropsType = {\n    dialogsPage: DialogsInitialStateType\n    addMessage: (newId: number, newMessageText: string, newDate: string) => void\n    newId: number //(?)\n    newDate:string //(?)\n}\n\n//functional component:\nconst Dialogs: React.FC<DialogsPropsType> = (props) => {\n\n    const {\n        dialogsPage,\n        addMessage,\n        newId, //(?)\n        newDate, //(?)\n    } = props;\n\n    //users list:\n    let dialogElements = dialogsPage.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\n\n    //messages history:\n    let messageElements = dialogsPage.messages.map(m => <Message key={m.id} message={m.message} id={m.id} time={m.time}/>);\n\n    const addNewMessage = (value: any) => { //need to fix any!!!\n        if (value.newMessageText) {\n            addMessage(newId, value.newMessageText, newDate);\n        }\n    }\n\n    return (\n        <div className={styles.dialogsPage}>\n            <div className={styles.dialogs}>\n                {\n                    dialogElements\n                }\n            </div>\n            <div className={styles.messages}>\n                <div className={styles.messageElements}>\n                    {\n                        messageElements\n                    }\n                </div>\n                <hr/>\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\n            </div>\n        </div>\n    )\n}\n\nconst maxLength3 = maxLengthCreator(3);//test value!!!\n\n//functional component:\nconst AddMessageForm: React.FC<AddMessageFormPropsType> = (props) => {\n\n    const {\n        handleSubmit,\n    } = props;\n\n    return (\n        <form onSubmit={handleSubmit} className={styles.inputAreaElements}> {/* <--need to rename class*/}\n            <div>\n                <Field\n                    placeholder={\"Write something\"}\n                    name={\"newMessageText\"}\n                    component={FormControl}\n                    formControlValue={\"textarea\"}\n                    validate={[requiredField, maxLength3]}\n                />\n            </div>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n//reduxForm HOC:\nconst AddMessageReduxForm = reduxForm<confPropsType,any>({form: 'profileAddPostReduxForm'})(AddMessageForm); //need to check types & fix any !!!\n\nexport {\n    Dialogs\n}\n","import React from \"react\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\n\nimport {\n    addMessage,\n    DialogsInitialStateType,\n} from \"../../redux/dialogs-reducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport { Dialogs } from \"./Dialogs\";\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\n\n//types:\ntype mapStateToPropsType = {\n    dialogsPage: DialogsInitialStateType\n}\n\ntype mapDispatchToPropsType = {\n    addMessage: (newId: number, newMessageText: string, newDate: string) => void\n}\ntype DialogsClassContainerPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\nconst createId = () => {\n    return Math.floor(new Date().valueOf() * Math.random()); //Creating a unique number with javascript time method (???);\n}\nconst createDate = () => {\n    return new Date().toLocaleString(); //Get Current Date & Time function (???)\n}\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        dialogsPage: state.dialogPage,\n    }\n}\n\nclass DialogsClassContainer extends React.Component<DialogsClassContainerPropsType> {\n\n    render(){\n        return(\n            <Dialogs {...this.props} newId={createId()} newDate={createDate()}/>\n        )\n    }\n}\n\n//HOC:\nconst DialogsContainer = compose<React.FC>(\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps, {addMessage, }),\n    WithAuthRedirect,\n)(DialogsClassContainer);\n\nexport {\n    DialogsContainer\n}\n\n\n","import {Dispatch} from \"redux\";\r\n\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\nimport {AppActionType, AppThunk} from \"./redux-store\";\r\n\r\n//types:\r\ntype initialStateType = {\r\n    initialized: boolean\r\n}\r\nexport type AppReducerActionType = any//ReturnType<typeof initialisedSuccess> //NEED TO FIX!!!\r\n\r\n\r\n//initialState:\r\nconst initialState: initialStateType = {\r\n    initialized: false\r\n}\r\n\r\n//reducer:\r\nconst appReducer = (state: initialStateType = initialState, action: AppActionType) => {\r\n    switch (action.type) {\r\n        case \"SN/APP/INITIALISED_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators:\r\nexport const initializedSuccess = () => {\r\n    return {type: \"SN/APP/INITIALISED_SUCCESS\"} as const\r\n}\r\n\r\n//thunk creators:\r\nexport const initializeApp = (): AppThunk => {\r\n    return (dispatch: Dispatch<AppActionType>) => {\r\n        let promise = dispatch(getAuthUserData());\r\n\r\n        Promise\r\n            .all([promise]) //Array - if we need more dispatches in future\r\n            .then(() => {\r\n                dispatch(initializedSuccess())\r\n            });\r\n    }\r\n}\r\n\r\nexport {\r\n    appReducer\r\n}","import React from \"react\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\n\nimport \"./App.css\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileClassContainer\";\nimport {Music} from \"./components/Music/Music\";\nimport {UsersContainer} from \"./components/Users/UsersClassContainer\";\nimport {News} from \"./components/News/News\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {LoginPageContainer} from \"./components/Login/Login\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\n\n//types:\ntype mapStateToPropsType = {\n    isInitialized: boolean\n}\ntype mapDispatchToPropsType = {\n    initializeApp: () => void\n}\ntype AppClassComponentPropsType = mapStateToPropsType & mapDispatchToPropsType;\n\n//mapStateToProps & class container component:\nconst mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isInitialized: state.app.initialized\n    }\n}\n\nclass App extends React.Component<AppClassComponentPropsType> {\n\n    componentDidMount() {\n        //thunk dispatch (auth request):\n        this.props.initializeApp()\n    }\n\n    render() {\n        /* if (!this.props.initialised) {\n             return <Preloader/>\n         }*/\n\n        return (\n            <>\n                {\n                    !this.props.isInitialized\n                        ? <Preloader/>\n                        : <div className={\"app-main\"}>\n                            <div className={\"app-wrapper\"}>\n                                <HeaderContainer/>\n                                <Navbar/>\n                                <div className={\"app-wrapper-content\"}>\n                                    <Route path={\"/Profile/:userId?\"} render={() => <ProfileContainer/>}/>\n                                    <Route path={\"/News\"} render={() => <News/>}/>\n                                    <Route path={\"/Dialogs\"} render={() => <DialogsContainer/>}/>\n                                    <Route path={\"/Users\"} render={() => <UsersContainer/>}/>\n                                    <Route path={\"/Music\"} render={() => <Music/>}/>\n                                    <Route path={\"/Settings\"} render={() => <Settings/>}/>\n                                    <Route path={\"/Login\"} render={() => <LoginPageContainer/>}/>\n                                </div>\n                            </div>\n                        </div>\n                }\n            </>\n        );\n\n\n    }\n}\n\n//HOC:\n/*const App = compose(\n    connect<mapStateToPropsType,\n        mapDispatchToPropsType, {}, AppStateType>(\n        mapStateToProps,\n        {initialiseApp}\n    )(AppClassComponent));\n\n\nexport {\n    App\n}*/\n\n//HOC:\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, {initializeApp})\n)(App);","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\n\nimport {DialogsActionType, dialogsReducer} from \"./dialogs-reducer\";\nimport {ProfileActionType, profileReducer} from \"./profile-reducer\";\nimport {UsersActionType, usersReducer} from \"./users-reducer\";\nimport {authReducer, authReducerAT} from \"./auth-reducer\";\nimport {appReducer, AppReducerActionType} from \"./app-reducer\";\n\n//types:\nexport type AppStateType = ReturnType<typeof rootReducer>;\nexport type AppActionType = UsersActionType | ProfileActionType | DialogsActionType | authReducerAT | AppReducerActionType\n\n//rootReducer & store:\nexport const rootReducer = combineReducers({\n    dialogPage: dialogsReducer,\n    profilePage: profileReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n\n//root AppThunk:\nexport type AppThunk = ThunkAction<void, AppStateType, unknown, authReducerAT>\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport {\n    store\n}","import React from \"react\";\nimport {Provider} from \"react-redux\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {AppStateType, store} from \"./redux/redux-store\";\n\n\nconst reRenderEntireThree = (state: AppStateType) => {\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </BrowserRouter>\n        , document.getElementById('root')\n    );\n}\n\nreRenderEntireThree(store.getState());\nstore.subscribe(() => {\n    reRenderEntireThree(store.getState())\n});\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1o5hr\",\"items\":\"ProfileInfo_items__Tow0c\",\"name\":\"ProfileInfo_name__3_29G\",\"statusStaticMode\":\"ProfileInfo_statusStaticMode__1JGsp\",\"statusEditMode\":\"ProfileInfo_statusEditMode__2KjhT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__L3g4m\",\"items\":\"Post_items__TiuHf\",\"postMessage\":\"Post_postMessage__2R7XL\",\"name\":\"Post_name__7buCm\",\"message\":\"Post_message__1YmDS\",\"reactions\":\"Post_reactions__3uWF0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"Users_items__-cuhe\",\"selectedPage\":\"Users_selectedPage__22OUq\",\"profile\":\"Users_profile__2q_da\",\"info\":\"Users_info__2hM-q\",\"name\":\"Users_name__3uZmM\",\"buttonsArea\":\"Users_buttonsArea__3uP-7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1pl0m\",\"content\":\"Message_content__28Hls\",\"name\":\"Message_name__gkaLH\",\"text\":\"Message_text__1FzPC\",\"time\":\"Message_time__322cI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Preloader_main__BgsaX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1pKV4\",\"logoArea\":\"Header_logoArea__3SqBW\",\"loginBlock\":\"Header_loginBlock__2NGhc\",\"items\":\"Header_items__2DQpk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1PKUq\",\"error\":\"FormControls_error__3kHja\",\"formSummaryError\":\"FormControls_formSummaryError__2VRhK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"ContentArea_postBlock__2Fp-K\",\"posts\":\"ContentArea_posts__3qIIz\",\"inputAreaElements\":\"ContentArea_inputAreaElements__ijd0W\"};"],"sourceRoot":""}